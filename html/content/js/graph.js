/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 4263.0, "series": [{"data": [[0.0, 89.0], [0.1, 109.0], [0.2, 126.0], [0.3, 137.0], [0.4, 145.0], [0.5, 149.0], [0.6, 151.0], [0.7, 157.0], [0.8, 159.0], [0.9, 161.0], [1.0, 164.0], [1.1, 166.0], [1.2, 167.0], [1.3, 172.0], [1.4, 174.0], [1.5, 177.0], [1.6, 180.0], [1.7, 181.0], [1.8, 182.0], [1.9, 185.0], [2.0, 186.0], [2.1, 189.0], [2.2, 191.0], [2.3, 192.0], [2.4, 195.0], [2.5, 196.0], [2.6, 198.0], [2.7, 199.0], [2.8, 201.0], [2.9, 202.0], [3.0, 203.0], [3.1, 205.0], [3.2, 206.0], [3.3, 207.0], [3.4, 209.0], [3.5, 209.0], [3.6, 212.0], [3.7, 213.0], [3.8, 215.0], [3.9, 216.0], [4.0, 218.0], [4.1, 220.0], [4.2, 221.0], [4.3, 221.0], [4.4, 223.0], [4.5, 225.0], [4.6, 226.0], [4.7, 227.0], [4.8, 228.0], [4.9, 229.0], [5.0, 230.0], [5.1, 232.0], [5.2, 233.0], [5.3, 234.0], [5.4, 237.0], [5.5, 237.0], [5.6, 238.0], [5.7, 239.0], [5.8, 240.0], [5.9, 241.0], [6.0, 242.0], [6.1, 243.0], [6.2, 245.0], [6.3, 246.0], [6.4, 247.0], [6.5, 248.0], [6.6, 249.0], [6.7, 251.0], [6.8, 253.0], [6.9, 255.0], [7.0, 256.0], [7.1, 257.0], [7.2, 259.0], [7.3, 261.0], [7.4, 263.0], [7.5, 266.0], [7.6, 267.0], [7.7, 268.0], [7.8, 270.0], [7.9, 272.0], [8.0, 273.0], [8.1, 275.0], [8.2, 277.0], [8.3, 280.0], [8.4, 282.0], [8.5, 284.0], [8.6, 287.0], [8.7, 290.0], [8.8, 293.0], [8.9, 295.0], [9.0, 299.0], [9.1, 300.0], [9.2, 301.0], [9.3, 306.0], [9.4, 311.0], [9.5, 315.0], [9.6, 317.0], [9.7, 320.0], [9.8, 327.0], [9.9, 331.0], [10.0, 334.0], [10.1, 338.0], [10.2, 342.0], [10.3, 346.0], [10.4, 349.0], [10.5, 351.0], [10.6, 357.0], [10.7, 362.0], [10.8, 364.0], [10.9, 371.0], [11.0, 375.0], [11.1, 382.0], [11.2, 393.0], [11.3, 398.0], [11.4, 403.0], [11.5, 408.0], [11.6, 410.0], [11.7, 415.0], [11.8, 417.0], [11.9, 427.0], [12.0, 432.0], [12.1, 437.0], [12.2, 440.0], [12.3, 443.0], [12.4, 447.0], [12.5, 457.0], [12.6, 465.0], [12.7, 474.0], [12.8, 479.0], [12.9, 488.0], [13.0, 502.0], [13.1, 512.0], [13.2, 521.0], [13.3, 525.0], [13.4, 529.0], [13.5, 536.0], [13.6, 547.0], [13.7, 557.0], [13.8, 562.0], [13.9, 573.0], [14.0, 582.0], [14.1, 590.0], [14.2, 601.0], [14.3, 611.0], [14.4, 619.0], [14.5, 622.0], [14.6, 626.0], [14.7, 631.0], [14.8, 633.0], [14.9, 635.0], [15.0, 640.0], [15.1, 648.0], [15.2, 652.0], [15.3, 655.0], [15.4, 658.0], [15.5, 662.0], [15.6, 667.0], [15.7, 670.0], [15.8, 673.0], [15.9, 679.0], [16.0, 682.0], [16.1, 684.0], [16.2, 686.0], [16.3, 688.0], [16.4, 693.0], [16.5, 694.0], [16.6, 696.0], [16.7, 698.0], [16.8, 700.0], [16.9, 702.0], [17.0, 704.0], [17.1, 707.0], [17.2, 709.0], [17.3, 710.0], [17.4, 712.0], [17.5, 713.0], [17.6, 715.0], [17.7, 717.0], [17.8, 719.0], [17.9, 720.0], [18.0, 723.0], [18.1, 725.0], [18.2, 727.0], [18.3, 729.0], [18.4, 729.0], [18.5, 730.0], [18.6, 732.0], [18.7, 733.0], [18.8, 733.0], [18.9, 736.0], [19.0, 738.0], [19.1, 740.0], [19.2, 740.0], [19.3, 742.0], [19.4, 743.0], [19.5, 745.0], [19.6, 746.0], [19.7, 747.0], [19.8, 748.0], [19.9, 749.0], [20.0, 752.0], [20.1, 753.0], [20.2, 754.0], [20.3, 756.0], [20.4, 760.0], [20.5, 761.0], [20.6, 762.0], [20.7, 764.0], [20.8, 765.0], [20.9, 767.0], [21.0, 768.0], [21.1, 769.0], [21.2, 770.0], [21.3, 772.0], [21.4, 772.0], [21.5, 774.0], [21.6, 775.0], [21.7, 776.0], [21.8, 777.0], [21.9, 778.0], [22.0, 779.0], [22.1, 780.0], [22.2, 782.0], [22.3, 783.0], [22.4, 784.0], [22.5, 784.0], [22.6, 785.0], [22.7, 786.0], [22.8, 787.0], [22.9, 788.0], [23.0, 789.0], [23.1, 790.0], [23.2, 791.0], [23.3, 792.0], [23.4, 793.0], [23.5, 794.0], [23.6, 796.0], [23.7, 796.0], [23.8, 798.0], [23.9, 799.0], [24.0, 800.0], [24.1, 802.0], [24.2, 802.0], [24.3, 804.0], [24.4, 805.0], [24.5, 806.0], [24.6, 808.0], [24.7, 809.0], [24.8, 810.0], [24.9, 811.0], [25.0, 811.0], [25.1, 811.0], [25.2, 812.0], [25.3, 813.0], [25.4, 814.0], [25.5, 815.0], [25.6, 815.0], [25.7, 815.0], [25.8, 816.0], [25.9, 817.0], [26.0, 818.0], [26.1, 819.0], [26.2, 819.0], [26.3, 820.0], [26.4, 820.0], [26.5, 821.0], [26.6, 822.0], [26.7, 822.0], [26.8, 824.0], [26.9, 824.0], [27.0, 826.0], [27.1, 826.0], [27.2, 827.0], [27.3, 827.0], [27.4, 828.0], [27.5, 829.0], [27.6, 830.0], [27.7, 830.0], [27.8, 831.0], [27.9, 832.0], [28.0, 832.0], [28.1, 833.0], [28.2, 834.0], [28.3, 834.0], [28.4, 835.0], [28.5, 836.0], [28.6, 837.0], [28.7, 837.0], [28.8, 839.0], [28.9, 840.0], [29.0, 841.0], [29.1, 842.0], [29.2, 843.0], [29.3, 844.0], [29.4, 844.0], [29.5, 845.0], [29.6, 845.0], [29.7, 846.0], [29.8, 846.0], [29.9, 847.0], [30.0, 848.0], [30.1, 849.0], [30.2, 849.0], [30.3, 850.0], [30.4, 851.0], [30.5, 851.0], [30.6, 852.0], [30.7, 853.0], [30.8, 853.0], [30.9, 855.0], [31.0, 856.0], [31.1, 856.0], [31.2, 857.0], [31.3, 858.0], [31.4, 859.0], [31.5, 859.0], [31.6, 860.0], [31.7, 860.0], [31.8, 861.0], [31.9, 861.0], [32.0, 862.0], [32.1, 862.0], [32.2, 863.0], [32.3, 864.0], [32.4, 865.0], [32.5, 866.0], [32.6, 866.0], [32.7, 867.0], [32.8, 867.0], [32.9, 868.0], [33.0, 868.0], [33.1, 869.0], [33.2, 869.0], [33.3, 870.0], [33.4, 870.0], [33.5, 871.0], [33.6, 871.0], [33.7, 872.0], [33.8, 873.0], [33.9, 874.0], [34.0, 874.0], [34.1, 875.0], [34.2, 875.0], [34.3, 876.0], [34.4, 877.0], [34.5, 878.0], [34.6, 879.0], [34.7, 879.0], [34.8, 879.0], [34.9, 880.0], [35.0, 881.0], [35.1, 882.0], [35.2, 882.0], [35.3, 883.0], [35.4, 884.0], [35.5, 884.0], [35.6, 885.0], [35.7, 885.0], [35.8, 885.0], [35.9, 886.0], [36.0, 887.0], [36.1, 888.0], [36.2, 888.0], [36.3, 889.0], [36.4, 889.0], [36.5, 889.0], [36.6, 890.0], [36.7, 890.0], [36.8, 891.0], [36.9, 891.0], [37.0, 892.0], [37.1, 892.0], [37.2, 892.0], [37.3, 893.0], [37.4, 893.0], [37.5, 894.0], [37.6, 894.0], [37.7, 895.0], [37.8, 895.0], [37.9, 896.0], [38.0, 896.0], [38.1, 897.0], [38.2, 898.0], [38.3, 898.0], [38.4, 899.0], [38.5, 899.0], [38.6, 900.0], [38.7, 900.0], [38.8, 901.0], [38.9, 902.0], [39.0, 902.0], [39.1, 903.0], [39.2, 904.0], [39.3, 905.0], [39.4, 905.0], [39.5, 905.0], [39.6, 906.0], [39.7, 908.0], [39.8, 908.0], [39.9, 909.0], [40.0, 910.0], [40.1, 910.0], [40.2, 911.0], [40.3, 911.0], [40.4, 911.0], [40.5, 912.0], [40.6, 913.0], [40.7, 914.0], [40.8, 915.0], [40.9, 915.0], [41.0, 915.0], [41.1, 916.0], [41.2, 917.0], [41.3, 918.0], [41.4, 918.0], [41.5, 919.0], [41.6, 920.0], [41.7, 921.0], [41.8, 921.0], [41.9, 921.0], [42.0, 922.0], [42.1, 922.0], [42.2, 923.0], [42.3, 924.0], [42.4, 924.0], [42.5, 925.0], [42.6, 926.0], [42.7, 926.0], [42.8, 926.0], [42.9, 927.0], [43.0, 927.0], [43.1, 928.0], [43.2, 929.0], [43.3, 929.0], [43.4, 930.0], [43.5, 930.0], [43.6, 931.0], [43.7, 931.0], [43.8, 932.0], [43.9, 933.0], [44.0, 933.0], [44.1, 934.0], [44.2, 934.0], [44.3, 935.0], [44.4, 935.0], [44.5, 936.0], [44.6, 938.0], [44.7, 938.0], [44.8, 938.0], [44.9, 939.0], [45.0, 940.0], [45.1, 940.0], [45.2, 941.0], [45.3, 942.0], [45.4, 942.0], [45.5, 942.0], [45.6, 943.0], [45.7, 943.0], [45.8, 944.0], [45.9, 945.0], [46.0, 945.0], [46.1, 946.0], [46.2, 946.0], [46.3, 946.0], [46.4, 948.0], [46.5, 948.0], [46.6, 949.0], [46.7, 950.0], [46.8, 950.0], [46.9, 951.0], [47.0, 951.0], [47.1, 951.0], [47.2, 952.0], [47.3, 953.0], [47.4, 953.0], [47.5, 955.0], [47.6, 955.0], [47.7, 955.0], [47.8, 957.0], [47.9, 957.0], [48.0, 958.0], [48.1, 959.0], [48.2, 959.0], [48.3, 960.0], [48.4, 961.0], [48.5, 962.0], [48.6, 963.0], [48.7, 963.0], [48.8, 964.0], [48.9, 964.0], [49.0, 965.0], [49.1, 965.0], [49.2, 966.0], [49.3, 967.0], [49.4, 968.0], [49.5, 969.0], [49.6, 970.0], [49.7, 970.0], [49.8, 971.0], [49.9, 971.0], [50.0, 972.0], [50.1, 972.0], [50.2, 973.0], [50.3, 974.0], [50.4, 974.0], [50.5, 975.0], [50.6, 975.0], [50.7, 977.0], [50.8, 977.0], [50.9, 978.0], [51.0, 979.0], [51.1, 980.0], [51.2, 981.0], [51.3, 982.0], [51.4, 982.0], [51.5, 983.0], [51.6, 983.0], [51.7, 984.0], [51.8, 985.0], [51.9, 986.0], [52.0, 986.0], [52.1, 987.0], [52.2, 987.0], [52.3, 988.0], [52.4, 989.0], [52.5, 989.0], [52.6, 990.0], [52.7, 990.0], [52.8, 991.0], [52.9, 991.0], [53.0, 992.0], [53.1, 993.0], [53.2, 994.0], [53.3, 995.0], [53.4, 996.0], [53.5, 996.0], [53.6, 997.0], [53.7, 997.0], [53.8, 998.0], [53.9, 999.0], [54.0, 999.0], [54.1, 1000.0], [54.2, 1000.0], [54.3, 1001.0], [54.4, 1002.0], [54.5, 1002.0], [54.6, 1004.0], [54.7, 1004.0], [54.8, 1005.0], [54.9, 1006.0], [55.0, 1007.0], [55.1, 1008.0], [55.2, 1009.0], [55.3, 1010.0], [55.4, 1012.0], [55.5, 1012.0], [55.6, 1013.0], [55.7, 1013.0], [55.8, 1014.0], [55.9, 1015.0], [56.0, 1015.0], [56.1, 1016.0], [56.2, 1017.0], [56.3, 1017.0], [56.4, 1018.0], [56.5, 1019.0], [56.6, 1019.0], [56.7, 1020.0], [56.8, 1021.0], [56.9, 1022.0], [57.0, 1022.0], [57.1, 1023.0], [57.2, 1024.0], [57.3, 1024.0], [57.4, 1025.0], [57.5, 1025.0], [57.6, 1026.0], [57.7, 1026.0], [57.8, 1027.0], [57.9, 1027.0], [58.0, 1028.0], [58.1, 1028.0], [58.2, 1029.0], [58.3, 1030.0], [58.4, 1030.0], [58.5, 1032.0], [58.6, 1032.0], [58.7, 1034.0], [58.8, 1034.0], [58.9, 1035.0], [59.0, 1035.0], [59.1, 1036.0], [59.2, 1037.0], [59.3, 1037.0], [59.4, 1038.0], [59.5, 1040.0], [59.6, 1040.0], [59.7, 1041.0], [59.8, 1042.0], [59.9, 1043.0], [60.0, 1044.0], [60.1, 1045.0], [60.2, 1046.0], [60.3, 1048.0], [60.4, 1049.0], [60.5, 1050.0], [60.6, 1051.0], [60.7, 1051.0], [60.8, 1052.0], [60.9, 1053.0], [61.0, 1054.0], [61.1, 1055.0], [61.2, 1056.0], [61.3, 1056.0], [61.4, 1057.0], [61.5, 1058.0], [61.6, 1058.0], [61.7, 1059.0], [61.8, 1061.0], [61.9, 1062.0], [62.0, 1062.0], [62.1, 1063.0], [62.2, 1064.0], [62.3, 1064.0], [62.4, 1065.0], [62.5, 1066.0], [62.6, 1066.0], [62.7, 1068.0], [62.8, 1069.0], [62.9, 1069.0], [63.0, 1070.0], [63.1, 1070.0], [63.2, 1071.0], [63.3, 1072.0], [63.4, 1072.0], [63.5, 1073.0], [63.6, 1073.0], [63.7, 1075.0], [63.8, 1076.0], [63.9, 1076.0], [64.0, 1076.0], [64.1, 1077.0], [64.2, 1077.0], [64.3, 1078.0], [64.4, 1079.0], [64.5, 1079.0], [64.6, 1081.0], [64.7, 1082.0], [64.8, 1083.0], [64.9, 1084.0], [65.0, 1084.0], [65.1, 1084.0], [65.2, 1085.0], [65.3, 1085.0], [65.4, 1085.0], [65.5, 1086.0], [65.6, 1086.0], [65.7, 1088.0], [65.8, 1089.0], [65.9, 1089.0], [66.0, 1089.0], [66.1, 1091.0], [66.2, 1092.0], [66.3, 1093.0], [66.4, 1093.0], [66.5, 1094.0], [66.6, 1095.0], [66.7, 1095.0], [66.8, 1095.0], [66.9, 1096.0], [67.0, 1097.0], [67.1, 1097.0], [67.2, 1098.0], [67.3, 1099.0], [67.4, 1100.0], [67.5, 1101.0], [67.6, 1102.0], [67.7, 1103.0], [67.8, 1104.0], [67.9, 1105.0], [68.0, 1106.0], [68.1, 1107.0], [68.2, 1108.0], [68.3, 1108.0], [68.4, 1109.0], [68.5, 1110.0], [68.6, 1110.0], [68.7, 1111.0], [68.8, 1112.0], [68.9, 1113.0], [69.0, 1114.0], [69.1, 1116.0], [69.2, 1117.0], [69.3, 1118.0], [69.4, 1119.0], [69.5, 1121.0], [69.6, 1121.0], [69.7, 1122.0], [69.8, 1122.0], [69.9, 1122.0], [70.0, 1123.0], [70.1, 1124.0], [70.2, 1125.0], [70.3, 1126.0], [70.4, 1127.0], [70.5, 1128.0], [70.6, 1129.0], [70.7, 1130.0], [70.8, 1131.0], [70.9, 1131.0], [71.0, 1132.0], [71.1, 1133.0], [71.2, 1133.0], [71.3, 1134.0], [71.4, 1135.0], [71.5, 1135.0], [71.6, 1136.0], [71.7, 1137.0], [71.8, 1138.0], [71.9, 1140.0], [72.0, 1141.0], [72.1, 1141.0], [72.2, 1142.0], [72.3, 1143.0], [72.4, 1144.0], [72.5, 1144.0], [72.6, 1145.0], [72.7, 1147.0], [72.8, 1148.0], [72.9, 1149.0], [73.0, 1149.0], [73.1, 1150.0], [73.2, 1151.0], [73.3, 1152.0], [73.4, 1153.0], [73.5, 1154.0], [73.6, 1155.0], [73.7, 1156.0], [73.8, 1156.0], [73.9, 1157.0], [74.0, 1158.0], [74.1, 1159.0], [74.2, 1159.0], [74.3, 1160.0], [74.4, 1161.0], [74.5, 1161.0], [74.6, 1162.0], [74.7, 1163.0], [74.8, 1164.0], [74.9, 1165.0], [75.0, 1165.0], [75.1, 1167.0], [75.2, 1167.0], [75.3, 1168.0], [75.4, 1168.0], [75.5, 1169.0], [75.6, 1170.0], [75.7, 1171.0], [75.8, 1173.0], [75.9, 1174.0], [76.0, 1175.0], [76.1, 1176.0], [76.2, 1178.0], [76.3, 1179.0], [76.4, 1180.0], [76.5, 1181.0], [76.6, 1184.0], [76.7, 1184.0], [76.8, 1186.0], [76.9, 1187.0], [77.0, 1188.0], [77.1, 1191.0], [77.2, 1192.0], [77.3, 1194.0], [77.4, 1195.0], [77.5, 1196.0], [77.6, 1197.0], [77.7, 1198.0], [77.8, 1199.0], [77.9, 1201.0], [78.0, 1201.0], [78.1, 1203.0], [78.2, 1204.0], [78.3, 1204.0], [78.4, 1205.0], [78.5, 1207.0], [78.6, 1208.0], [78.7, 1210.0], [78.8, 1211.0], [78.9, 1212.0], [79.0, 1212.0], [79.1, 1213.0], [79.2, 1214.0], [79.3, 1215.0], [79.4, 1217.0], [79.5, 1219.0], [79.6, 1220.0], [79.7, 1222.0], [79.8, 1222.0], [79.9, 1224.0], [80.0, 1226.0], [80.1, 1227.0], [80.2, 1229.0], [80.3, 1231.0], [80.4, 1232.0], [80.5, 1234.0], [80.6, 1238.0], [80.7, 1239.0], [80.8, 1241.0], [80.9, 1243.0], [81.0, 1245.0], [81.1, 1246.0], [81.2, 1249.0], [81.3, 1251.0], [81.4, 1254.0], [81.5, 1256.0], [81.6, 1257.0], [81.7, 1258.0], [81.8, 1259.0], [81.9, 1261.0], [82.0, 1264.0], [82.1, 1267.0], [82.2, 1269.0], [82.3, 1271.0], [82.4, 1275.0], [82.5, 1276.0], [82.6, 1278.0], [82.7, 1280.0], [82.8, 1282.0], [82.9, 1283.0], [83.0, 1286.0], [83.1, 1288.0], [83.2, 1290.0], [83.3, 1293.0], [83.4, 1295.0], [83.5, 1298.0], [83.6, 1301.0], [83.7, 1303.0], [83.8, 1306.0], [83.9, 1313.0], [84.0, 1317.0], [84.1, 1319.0], [84.2, 1323.0], [84.3, 1326.0], [84.4, 1330.0], [84.5, 1334.0], [84.6, 1335.0], [84.7, 1338.0], [84.8, 1342.0], [84.9, 1345.0], [85.0, 1346.0], [85.1, 1349.0], [85.2, 1351.0], [85.3, 1354.0], [85.4, 1359.0], [85.5, 1361.0], [85.6, 1365.0], [85.7, 1368.0], [85.8, 1371.0], [85.9, 1372.0], [86.0, 1375.0], [86.1, 1376.0], [86.2, 1380.0], [86.3, 1383.0], [86.4, 1386.0], [86.5, 1391.0], [86.6, 1394.0], [86.7, 1396.0], [86.8, 1400.0], [86.9, 1401.0], [87.0, 1404.0], [87.1, 1407.0], [87.2, 1413.0], [87.3, 1418.0], [87.4, 1423.0], [87.5, 1426.0], [87.6, 1428.0], [87.7, 1432.0], [87.8, 1435.0], [87.9, 1438.0], [88.0, 1441.0], [88.1, 1452.0], [88.2, 1458.0], [88.3, 1464.0], [88.4, 1468.0], [88.5, 1474.0], [88.6, 1478.0], [88.7, 1487.0], [88.8, 1494.0], [88.9, 1497.0], [89.0, 1501.0], [89.1, 1507.0], [89.2, 1514.0], [89.3, 1520.0], [89.4, 1534.0], [89.5, 1536.0], [89.6, 1542.0], [89.7, 1546.0], [89.8, 1554.0], [89.9, 1557.0], [90.0, 1561.0], [90.1, 1566.0], [90.2, 1568.0], [90.3, 1571.0], [90.4, 1573.0], [90.5, 1577.0], [90.6, 1580.0], [90.7, 1583.0], [90.8, 1585.0], [90.9, 1588.0], [91.0, 1594.0], [91.1, 1599.0], [91.2, 1604.0], [91.3, 1609.0], [91.4, 1615.0], [91.5, 1622.0], [91.6, 1626.0], [91.7, 1632.0], [91.8, 1634.0], [91.9, 1637.0], [92.0, 1640.0], [92.1, 1643.0], [92.2, 1646.0], [92.3, 1648.0], [92.4, 1652.0], [92.5, 1657.0], [92.6, 1660.0], [92.7, 1662.0], [92.8, 1669.0], [92.9, 1671.0], [93.0, 1675.0], [93.1, 1677.0], [93.2, 1682.0], [93.3, 1687.0], [93.4, 1691.0], [93.5, 1694.0], [93.6, 1699.0], [93.7, 1705.0], [93.8, 1713.0], [93.9, 1721.0], [94.0, 1732.0], [94.1, 1741.0], [94.2, 1745.0], [94.3, 1749.0], [94.4, 1755.0], [94.5, 1760.0], [94.6, 1767.0], [94.7, 1770.0], [94.8, 1779.0], [94.9, 1790.0], [95.0, 1797.0], [95.1, 1802.0], [95.2, 1808.0], [95.3, 1816.0], [95.4, 1820.0], [95.5, 1826.0], [95.6, 1834.0], [95.7, 1838.0], [95.8, 1843.0], [95.9, 1850.0], [96.0, 1857.0], [96.1, 1860.0], [96.2, 1865.0], [96.3, 1877.0], [96.4, 1887.0], [96.5, 1902.0], [96.6, 1914.0], [96.7, 1925.0], [96.8, 1934.0], [96.9, 1952.0], [97.0, 1966.0], [97.1, 1985.0], [97.2, 2000.0], [97.3, 2006.0], [97.4, 2029.0], [97.5, 2045.0], [97.6, 2065.0], [97.7, 2084.0], [97.8, 2117.0], [97.9, 2149.0], [98.0, 2167.0], [98.1, 2191.0], [98.2, 2210.0], [98.3, 2225.0], [98.4, 2243.0], [98.5, 2263.0], [98.6, 2333.0], [98.7, 2394.0], [98.8, 2442.0], [98.9, 2460.0], [99.0, 2507.0], [99.1, 2532.0], [99.2, 2548.0], [99.3, 2630.0], [99.4, 2723.0], [99.5, 2785.0], [99.6, 2861.0], [99.7, 3064.0], [99.8, 3238.0], [99.9, 3449.0]], "isOverall": false, "label": "HTTP Request - GET /hammock/all", "isController": false}, {"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 1.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 1.0], [0.8, 1.0], [0.9, 1.0], [1.0, 1.0], [1.1, 1.0], [1.2, 1.0], [1.3, 1.0], [1.4, 1.0], [1.5, 1.0], [1.6, 1.0], [1.7, 1.0], [1.8, 1.0], [1.9, 1.0], [2.0, 1.0], [2.1, 1.0], [2.2, 1.0], [2.3, 1.0], [2.4, 1.0], [2.5, 1.0], [2.6, 1.0], [2.7, 1.0], [2.8, 2.0], [2.9, 2.0], [3.0, 2.0], [3.1, 2.0], [3.2, 2.0], [3.3, 2.0], [3.4, 2.0], [3.5, 2.0], [3.6, 2.0], [3.7, 2.0], [3.8, 2.0], [3.9, 2.0], [4.0, 2.0], [4.1, 2.0], [4.2, 2.0], [4.3, 2.0], [4.4, 2.0], [4.5, 2.0], [4.6, 2.0], [4.7, 2.0], [4.8, 2.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 2.0], [6.8, 2.0], [6.9, 2.0], [7.0, 2.0], [7.1, 2.0], [7.2, 2.0], [7.3, 2.0], [7.4, 2.0], [7.5, 2.0], [7.6, 2.0], [7.7, 2.0], [7.8, 2.0], [7.9, 2.0], [8.0, 2.0], [8.1, 2.0], [8.2, 2.0], [8.3, 2.0], [8.4, 2.0], [8.5, 2.0], [8.6, 2.0], [8.7, 2.0], [8.8, 2.0], [8.9, 2.0], [9.0, 2.0], [9.1, 2.0], [9.2, 2.0], [9.3, 2.0], [9.4, 2.0], [9.5, 2.0], [9.6, 2.0], [9.7, 2.0], [9.8, 2.0], [9.9, 2.0], [10.0, 2.0], [10.1, 2.0], [10.2, 2.0], [10.3, 2.0], [10.4, 2.0], [10.5, 2.0], [10.6, 2.0], [10.7, 2.0], [10.8, 2.0], [10.9, 2.0], [11.0, 2.0], [11.1, 2.0], [11.2, 2.0], [11.3, 2.0], [11.4, 2.0], [11.5, 2.0], [11.6, 2.0], [11.7, 2.0], [11.8, 2.0], [11.9, 2.0], [12.0, 2.0], [12.1, 2.0], [12.2, 2.0], [12.3, 2.0], [12.4, 2.0], [12.5, 2.0], [12.6, 2.0], [12.7, 2.0], [12.8, 2.0], [12.9, 2.0], [13.0, 2.0], [13.1, 2.0], [13.2, 2.0], [13.3, 2.0], [13.4, 2.0], [13.5, 2.0], [13.6, 2.0], [13.7, 2.0], [13.8, 2.0], [13.9, 2.0], [14.0, 2.0], [14.1, 2.0], [14.2, 2.0], [14.3, 2.0], [14.4, 2.0], [14.5, 2.0], [14.6, 2.0], [14.7, 2.0], [14.8, 2.0], [14.9, 2.0], [15.0, 2.0], [15.1, 2.0], [15.2, 2.0], [15.3, 2.0], [15.4, 2.0], [15.5, 2.0], [15.6, 2.0], [15.7, 2.0], [15.8, 2.0], [15.9, 2.0], [16.0, 2.0], [16.1, 2.0], [16.2, 2.0], [16.3, 2.0], [16.4, 2.0], [16.5, 2.0], [16.6, 2.0], [16.7, 2.0], [16.8, 2.0], [16.9, 2.0], [17.0, 2.0], [17.1, 2.0], [17.2, 2.0], [17.3, 2.0], [17.4, 2.0], [17.5, 2.0], [17.6, 2.0], [17.7, 2.0], [17.8, 2.0], [17.9, 2.0], [18.0, 2.0], [18.1, 2.0], [18.2, 2.0], [18.3, 2.0], [18.4, 2.0], [18.5, 2.0], [18.6, 2.0], [18.7, 2.0], [18.8, 2.0], [18.9, 2.0], [19.0, 2.0], [19.1, 2.0], [19.2, 2.0], [19.3, 2.0], [19.4, 2.0], [19.5, 2.0], [19.6, 2.0], [19.7, 2.0], [19.8, 2.0], [19.9, 2.0], [20.0, 2.0], [20.1, 2.0], [20.2, 2.0], [20.3, 2.0], [20.4, 2.0], [20.5, 2.0], [20.6, 2.0], [20.7, 2.0], [20.8, 2.0], [20.9, 2.0], [21.0, 2.0], [21.1, 2.0], [21.2, 2.0], [21.3, 2.0], [21.4, 2.0], [21.5, 2.0], [21.6, 2.0], [21.7, 2.0], [21.8, 2.0], [21.9, 2.0], [22.0, 2.0], [22.1, 2.0], [22.2, 2.0], [22.3, 2.0], [22.4, 2.0], [22.5, 2.0], [22.6, 2.0], [22.7, 2.0], [22.8, 2.0], [22.9, 2.0], [23.0, 2.0], [23.1, 2.0], [23.2, 2.0], [23.3, 2.0], [23.4, 2.0], [23.5, 2.0], [23.6, 2.0], [23.7, 2.0], [23.8, 2.0], [23.9, 2.0], [24.0, 2.0], [24.1, 2.0], [24.2, 2.0], [24.3, 2.0], [24.4, 2.0], [24.5, 2.0], [24.6, 2.0], [24.7, 2.0], [24.8, 2.0], [24.9, 2.0], [25.0, 2.0], [25.1, 2.0], [25.2, 2.0], [25.3, 2.0], [25.4, 2.0], [25.5, 2.0], [25.6, 2.0], [25.7, 2.0], [25.8, 2.0], [25.9, 2.0], [26.0, 2.0], [26.1, 2.0], [26.2, 2.0], [26.3, 2.0], [26.4, 2.0], [26.5, 2.0], [26.6, 2.0], [26.7, 2.0], [26.8, 2.0], [26.9, 2.0], [27.0, 2.0], [27.1, 2.0], [27.2, 2.0], [27.3, 2.0], [27.4, 2.0], [27.5, 2.0], [27.6, 2.0], [27.7, 2.0], [27.8, 2.0], [27.9, 2.0], [28.0, 2.0], [28.1, 2.0], [28.2, 2.0], [28.3, 2.0], [28.4, 2.0], [28.5, 2.0], [28.6, 2.0], [28.7, 2.0], [28.8, 2.0], [28.9, 2.0], [29.0, 2.0], [29.1, 2.0], [29.2, 2.0], [29.3, 2.0], [29.4, 2.0], [29.5, 2.0], [29.6, 2.0], [29.7, 2.0], [29.8, 2.0], [29.9, 2.0], [30.0, 2.0], [30.1, 2.0], [30.2, 2.0], [30.3, 2.0], [30.4, 2.0], [30.5, 2.0], [30.6, 2.0], [30.7, 2.0], [30.8, 2.0], [30.9, 2.0], [31.0, 2.0], [31.1, 2.0], [31.2, 2.0], [31.3, 2.0], [31.4, 2.0], [31.5, 2.0], [31.6, 2.0], [31.7, 2.0], [31.8, 2.0], [31.9, 2.0], [32.0, 2.0], [32.1, 2.0], [32.2, 2.0], [32.3, 2.0], [32.4, 2.0], [32.5, 2.0], [32.6, 2.0], [32.7, 2.0], [32.8, 2.0], [32.9, 2.0], [33.0, 2.0], [33.1, 2.0], [33.2, 2.0], [33.3, 2.0], [33.4, 2.0], [33.5, 2.0], [33.6, 2.0], [33.7, 2.0], [33.8, 2.0], [33.9, 2.0], [34.0, 2.0], [34.1, 2.0], [34.2, 2.0], [34.3, 2.0], [34.4, 2.0], [34.5, 2.0], [34.6, 2.0], [34.7, 2.0], [34.8, 2.0], [34.9, 2.0], [35.0, 2.0], [35.1, 2.0], [35.2, 2.0], [35.3, 2.0], [35.4, 2.0], [35.5, 2.0], [35.6, 2.0], [35.7, 2.0], [35.8, 2.0], [35.9, 2.0], [36.0, 2.0], [36.1, 2.0], [36.2, 2.0], [36.3, 2.0], [36.4, 2.0], [36.5, 2.0], [36.6, 2.0], [36.7, 2.0], [36.8, 2.0], [36.9, 2.0], [37.0, 2.0], [37.1, 2.0], [37.2, 2.0], [37.3, 2.0], [37.4, 2.0], [37.5, 2.0], [37.6, 2.0], [37.7, 2.0], [37.8, 2.0], [37.9, 2.0], [38.0, 2.0], [38.1, 2.0], [38.2, 2.0], [38.3, 2.0], [38.4, 2.0], [38.5, 2.0], [38.6, 2.0], [38.7, 2.0], [38.8, 2.0], [38.9, 2.0], [39.0, 2.0], [39.1, 2.0], [39.2, 2.0], [39.3, 2.0], [39.4, 2.0], [39.5, 2.0], [39.6, 2.0], [39.7, 2.0], [39.8, 2.0], [39.9, 2.0], [40.0, 2.0], [40.1, 2.0], [40.2, 2.0], [40.3, 2.0], [40.4, 2.0], [40.5, 2.0], [40.6, 2.0], [40.7, 2.0], [40.8, 2.0], [40.9, 2.0], [41.0, 2.0], [41.1, 2.0], [41.2, 2.0], [41.3, 2.0], [41.4, 2.0], [41.5, 2.0], [41.6, 2.0], [41.7, 2.0], [41.8, 2.0], [41.9, 2.0], [42.0, 2.0], [42.1, 2.0], [42.2, 2.0], [42.3, 2.0], [42.4, 2.0], [42.5, 2.0], [42.6, 2.0], [42.7, 2.0], [42.8, 2.0], [42.9, 2.0], [43.0, 2.0], [43.1, 2.0], [43.2, 2.0], [43.3, 2.0], [43.4, 2.0], [43.5, 2.0], [43.6, 2.0], [43.7, 2.0], [43.8, 2.0], [43.9, 2.0], [44.0, 2.0], [44.1, 2.0], [44.2, 2.0], [44.3, 3.0], [44.4, 3.0], [44.5, 3.0], [44.6, 3.0], [44.7, 3.0], [44.8, 3.0], [44.9, 3.0], [45.0, 3.0], [45.1, 3.0], [45.2, 3.0], [45.3, 3.0], [45.4, 3.0], [45.5, 3.0], [45.6, 3.0], [45.7, 3.0], [45.8, 3.0], [45.9, 3.0], [46.0, 3.0], [46.1, 3.0], [46.2, 3.0], [46.3, 3.0], [46.4, 3.0], [46.5, 3.0], [46.6, 3.0], [46.7, 3.0], [46.8, 3.0], [46.9, 3.0], [47.0, 3.0], [47.1, 3.0], [47.2, 3.0], [47.3, 3.0], [47.4, 3.0], [47.5, 3.0], [47.6, 3.0], [47.7, 3.0], [47.8, 3.0], [47.9, 3.0], [48.0, 3.0], [48.1, 3.0], [48.2, 3.0], [48.3, 3.0], [48.4, 3.0], [48.5, 3.0], [48.6, 3.0], [48.7, 3.0], [48.8, 3.0], [48.9, 3.0], [49.0, 3.0], [49.1, 3.0], [49.2, 3.0], [49.3, 3.0], [49.4, 3.0], [49.5, 3.0], [49.6, 3.0], [49.7, 3.0], [49.8, 3.0], [49.9, 3.0], [50.0, 3.0], [50.1, 3.0], [50.2, 3.0], [50.3, 3.0], [50.4, 3.0], [50.5, 3.0], [50.6, 3.0], [50.7, 3.0], [50.8, 3.0], [50.9, 3.0], [51.0, 3.0], [51.1, 3.0], [51.2, 3.0], [51.3, 3.0], [51.4, 3.0], [51.5, 3.0], [51.6, 3.0], [51.7, 3.0], [51.8, 3.0], [51.9, 3.0], [52.0, 3.0], [52.1, 3.0], [52.2, 3.0], [52.3, 3.0], [52.4, 3.0], [52.5, 3.0], [52.6, 3.0], [52.7, 3.0], [52.8, 3.0], [52.9, 3.0], [53.0, 3.0], [53.1, 3.0], [53.2, 3.0], [53.3, 3.0], [53.4, 3.0], [53.5, 3.0], [53.6, 3.0], [53.7, 3.0], [53.8, 3.0], [53.9, 3.0], [54.0, 3.0], [54.1, 3.0], [54.2, 3.0], [54.3, 3.0], [54.4, 3.0], [54.5, 3.0], [54.6, 3.0], [54.7, 3.0], [54.8, 3.0], [54.9, 3.0], [55.0, 3.0], [55.1, 3.0], [55.2, 3.0], [55.3, 3.0], [55.4, 3.0], [55.5, 3.0], [55.6, 3.0], [55.7, 3.0], [55.8, 3.0], [55.9, 3.0], [56.0, 3.0], [56.1, 3.0], [56.2, 3.0], [56.3, 3.0], [56.4, 3.0], [56.5, 3.0], [56.6, 3.0], [56.7, 3.0], [56.8, 3.0], [56.9, 3.0], [57.0, 3.0], [57.1, 3.0], [57.2, 3.0], [57.3, 3.0], [57.4, 3.0], [57.5, 3.0], [57.6, 3.0], [57.7, 3.0], [57.8, 3.0], [57.9, 3.0], [58.0, 3.0], [58.1, 3.0], [58.2, 3.0], [58.3, 3.0], [58.4, 3.0], [58.5, 3.0], [58.6, 3.0], [58.7, 3.0], [58.8, 3.0], [58.9, 3.0], [59.0, 3.0], [59.1, 3.0], [59.2, 3.0], [59.3, 3.0], [59.4, 3.0], [59.5, 3.0], [59.6, 3.0], [59.7, 3.0], [59.8, 3.0], [59.9, 3.0], [60.0, 3.0], [60.1, 3.0], [60.2, 3.0], [60.3, 3.0], [60.4, 3.0], [60.5, 3.0], [60.6, 3.0], [60.7, 3.0], [60.8, 3.0], [60.9, 3.0], [61.0, 3.0], [61.1, 3.0], [61.2, 3.0], [61.3, 3.0], [61.4, 3.0], [61.5, 3.0], [61.6, 3.0], [61.7, 3.0], [61.8, 3.0], [61.9, 3.0], [62.0, 3.0], [62.1, 3.0], [62.2, 3.0], [62.3, 3.0], [62.4, 3.0], [62.5, 3.0], [62.6, 3.0], [62.7, 3.0], [62.8, 3.0], [62.9, 3.0], [63.0, 3.0], [63.1, 3.0], [63.2, 3.0], [63.3, 3.0], [63.4, 3.0], [63.5, 3.0], [63.6, 3.0], [63.7, 3.0], [63.8, 3.0], [63.9, 3.0], [64.0, 3.0], [64.1, 3.0], [64.2, 3.0], [64.3, 3.0], [64.4, 3.0], [64.5, 3.0], [64.6, 3.0], [64.7, 3.0], [64.8, 3.0], [64.9, 3.0], [65.0, 3.0], [65.1, 3.0], [65.2, 3.0], [65.3, 3.0], [65.4, 3.0], [65.5, 3.0], [65.6, 3.0], [65.7, 3.0], [65.8, 3.0], [65.9, 3.0], [66.0, 3.0], [66.1, 3.0], [66.2, 3.0], [66.3, 3.0], [66.4, 3.0], [66.5, 3.0], [66.6, 3.0], [66.7, 3.0], [66.8, 3.0], [66.9, 3.0], [67.0, 3.0], [67.1, 3.0], [67.2, 3.0], [67.3, 3.0], [67.4, 3.0], [67.5, 3.0], [67.6, 3.0], [67.7, 3.0], [67.8, 3.0], [67.9, 3.0], [68.0, 3.0], [68.1, 3.0], [68.2, 3.0], [68.3, 3.0], [68.4, 3.0], [68.5, 3.0], [68.6, 3.0], [68.7, 3.0], [68.8, 3.0], [68.9, 3.0], [69.0, 3.0], [69.1, 3.0], [69.2, 3.0], [69.3, 3.0], [69.4, 3.0], [69.5, 3.0], [69.6, 3.0], [69.7, 3.0], [69.8, 3.0], [69.9, 3.0], [70.0, 3.0], [70.1, 3.0], [70.2, 3.0], [70.3, 3.0], [70.4, 3.0], [70.5, 3.0], [70.6, 3.0], [70.7, 3.0], [70.8, 3.0], [70.9, 3.0], [71.0, 3.0], [71.1, 3.0], [71.2, 3.0], [71.3, 3.0], [71.4, 3.0], [71.5, 3.0], [71.6, 3.0], [71.7, 3.0], [71.8, 3.0], [71.9, 3.0], [72.0, 3.0], [72.1, 3.0], [72.2, 3.0], [72.3, 3.0], [72.4, 3.0], [72.5, 3.0], [72.6, 3.0], [72.7, 3.0], [72.8, 3.0], [72.9, 3.0], [73.0, 3.0], [73.1, 3.0], [73.2, 3.0], [73.3, 3.0], [73.4, 3.0], [73.5, 3.0], [73.6, 3.0], [73.7, 3.0], [73.8, 3.0], [73.9, 3.0], [74.0, 3.0], [74.1, 3.0], [74.2, 3.0], [74.3, 3.0], [74.4, 3.0], [74.5, 3.0], [74.6, 3.0], [74.7, 3.0], [74.8, 3.0], [74.9, 3.0], [75.0, 3.0], [75.1, 3.0], [75.2, 3.0], [75.3, 3.0], [75.4, 3.0], [75.5, 3.0], [75.6, 3.0], [75.7, 3.0], [75.8, 3.0], [75.9, 3.0], [76.0, 3.0], [76.1, 3.0], [76.2, 3.0], [76.3, 3.0], [76.4, 3.0], [76.5, 3.0], [76.6, 3.0], [76.7, 3.0], [76.8, 3.0], [76.9, 3.0], [77.0, 3.0], [77.1, 4.0], [77.2, 4.0], [77.3, 4.0], [77.4, 4.0], [77.5, 4.0], [77.6, 4.0], [77.7, 4.0], [77.8, 4.0], [77.9, 4.0], [78.0, 4.0], [78.1, 4.0], [78.2, 4.0], [78.3, 4.0], [78.4, 4.0], [78.5, 4.0], [78.6, 4.0], [78.7, 4.0], [78.8, 4.0], [78.9, 4.0], [79.0, 4.0], [79.1, 4.0], [79.2, 4.0], [79.3, 4.0], [79.4, 4.0], [79.5, 4.0], [79.6, 4.0], [79.7, 4.0], [79.8, 4.0], [79.9, 4.0], [80.0, 4.0], [80.1, 4.0], [80.2, 4.0], [80.3, 4.0], [80.4, 4.0], [80.5, 4.0], [80.6, 4.0], [80.7, 4.0], [80.8, 4.0], [80.9, 4.0], [81.0, 4.0], [81.1, 4.0], [81.2, 4.0], [81.3, 4.0], [81.4, 4.0], [81.5, 4.0], [81.6, 4.0], [81.7, 4.0], [81.8, 4.0], [81.9, 4.0], [82.0, 4.0], [82.1, 4.0], [82.2, 4.0], [82.3, 4.0], [82.4, 4.0], [82.5, 4.0], [82.6, 4.0], [82.7, 4.0], [82.8, 4.0], [82.9, 4.0], [83.0, 4.0], [83.1, 4.0], [83.2, 4.0], [83.3, 4.0], [83.4, 4.0], [83.5, 4.0], [83.6, 4.0], [83.7, 4.0], [83.8, 4.0], [83.9, 4.0], [84.0, 4.0], [84.1, 4.0], [84.2, 4.0], [84.3, 4.0], [84.4, 4.0], [84.5, 4.0], [84.6, 4.0], [84.7, 4.0], [84.8, 4.0], [84.9, 4.0], [85.0, 4.0], [85.1, 4.0], [85.2, 4.0], [85.3, 4.0], [85.4, 4.0], [85.5, 4.0], [85.6, 4.0], [85.7, 4.0], [85.8, 4.0], [85.9, 4.0], [86.0, 4.0], [86.1, 4.0], [86.2, 4.0], [86.3, 4.0], [86.4, 4.0], [86.5, 4.0], [86.6, 4.0], [86.7, 4.0], [86.8, 4.0], [86.9, 4.0], [87.0, 4.0], [87.1, 4.0], [87.2, 4.0], [87.3, 4.0], [87.4, 4.0], [87.5, 4.0], [87.6, 4.0], [87.7, 4.0], [87.8, 4.0], [87.9, 4.0], [88.0, 4.0], [88.1, 4.0], [88.2, 4.0], [88.3, 4.0], [88.4, 4.0], [88.5, 4.0], [88.6, 4.0], [88.7, 4.0], [88.8, 4.0], [88.9, 4.0], [89.0, 4.0], [89.1, 4.0], [89.2, 4.0], [89.3, 4.0], [89.4, 4.0], [89.5, 4.0], [89.6, 4.0], [89.7, 5.0], [89.8, 5.0], [89.9, 5.0], [90.0, 5.0], [90.1, 5.0], [90.2, 5.0], [90.3, 5.0], [90.4, 5.0], [90.5, 5.0], [90.6, 5.0], [90.7, 5.0], [90.8, 5.0], [90.9, 5.0], [91.0, 5.0], [91.1, 5.0], [91.2, 5.0], [91.3, 5.0], [91.4, 5.0], [91.5, 5.0], [91.6, 5.0], [91.7, 5.0], [91.8, 5.0], [91.9, 5.0], [92.0, 5.0], [92.1, 5.0], [92.2, 5.0], [92.3, 5.0], [92.4, 5.0], [92.5, 5.0], [92.6, 5.0], [92.7, 5.0], [92.8, 5.0], [92.9, 5.0], [93.0, 5.0], [93.1, 5.0], [93.2, 5.0], [93.3, 5.0], [93.4, 5.0], [93.5, 5.0], [93.6, 5.0], [93.7, 5.0], [93.8, 5.0], [93.9, 5.0], [94.0, 5.0], [94.1, 5.0], [94.2, 5.0], [94.3, 5.0], [94.4, 5.0], [94.5, 6.0], [94.6, 6.0], [94.7, 6.0], [94.8, 6.0], [94.9, 6.0], [95.0, 6.0], [95.1, 6.0], [95.2, 6.0], [95.3, 6.0], [95.4, 6.0], [95.5, 6.0], [95.6, 6.0], [95.7, 6.0], [95.8, 6.0], [95.9, 6.0], [96.0, 6.0], [96.1, 7.0], [96.2, 7.0], [96.3, 7.0], [96.4, 7.0], [96.5, 7.0], [96.6, 7.0], [96.7, 7.0], [96.8, 7.0], [96.9, 7.0], [97.0, 7.0], [97.1, 7.0], [97.2, 7.0], [97.3, 8.0], [97.4, 8.0], [97.5, 8.0], [97.6, 8.0], [97.7, 8.0], [97.8, 8.0], [97.9, 9.0], [98.0, 9.0], [98.1, 9.0], [98.2, 9.0], [98.3, 10.0], [98.4, 10.0], [98.5, 10.0], [98.6, 11.0], [98.7, 11.0], [98.8, 11.0], [98.9, 12.0], [99.0, 12.0], [99.1, 13.0], [99.2, 14.0], [99.3, 15.0], [99.4, 17.0], [99.5, 19.0], [99.6, 23.0], [99.7, 27.0], [99.8, 30.0], [99.9, 40.0]], "isOverall": false, "label": "HTTP Request -DELETE /hammock/delete/3", "isController": false}, {"data": [[0.0, 2.0], [0.1, 4.0], [0.2, 6.0], [0.3, 6.0], [0.4, 8.0], [0.5, 8.0], [0.6, 9.0], [0.7, 9.0], [0.8, 10.0], [0.9, 10.0], [1.0, 10.0], [1.1, 11.0], [1.2, 11.0], [1.3, 11.0], [1.4, 12.0], [1.5, 12.0], [1.6, 12.0], [1.7, 13.0], [1.8, 13.0], [1.9, 13.0], [2.0, 14.0], [2.1, 14.0], [2.2, 14.0], [2.3, 15.0], [2.4, 15.0], [2.5, 15.0], [2.6, 16.0], [2.7, 16.0], [2.8, 17.0], [2.9, 17.0], [3.0, 17.0], [3.1, 18.0], [3.2, 18.0], [3.3, 18.0], [3.4, 18.0], [3.5, 18.0], [3.6, 19.0], [3.7, 19.0], [3.8, 19.0], [3.9, 20.0], [4.0, 20.0], [4.1, 20.0], [4.2, 20.0], [4.3, 20.0], [4.4, 21.0], [4.5, 21.0], [4.6, 21.0], [4.7, 21.0], [4.8, 21.0], [4.9, 22.0], [5.0, 22.0], [5.1, 22.0], [5.2, 23.0], [5.3, 23.0], [5.4, 23.0], [5.5, 23.0], [5.6, 24.0], [5.7, 24.0], [5.8, 24.0], [5.9, 24.0], [6.0, 25.0], [6.1, 26.0], [6.2, 26.0], [6.3, 26.0], [6.4, 26.0], [6.5, 26.0], [6.6, 27.0], [6.7, 27.0], [6.8, 27.0], [6.9, 27.0], [7.0, 28.0], [7.1, 28.0], [7.2, 29.0], [7.3, 29.0], [7.4, 29.0], [7.5, 29.0], [7.6, 30.0], [7.7, 30.0], [7.8, 31.0], [7.9, 31.0], [8.0, 32.0], [8.1, 32.0], [8.2, 32.0], [8.3, 32.0], [8.4, 33.0], [8.5, 33.0], [8.6, 33.0], [8.7, 33.0], [8.8, 34.0], [8.9, 34.0], [9.0, 34.0], [9.1, 35.0], [9.2, 35.0], [9.3, 35.0], [9.4, 36.0], [9.5, 36.0], [9.6, 36.0], [9.7, 36.0], [9.8, 37.0], [9.9, 37.0], [10.0, 38.0], [10.1, 38.0], [10.2, 38.0], [10.3, 39.0], [10.4, 39.0], [10.5, 39.0], [10.6, 40.0], [10.7, 40.0], [10.8, 41.0], [10.9, 41.0], [11.0, 41.0], [11.1, 42.0], [11.2, 42.0], [11.3, 42.0], [11.4, 42.0], [11.5, 43.0], [11.6, 43.0], [11.7, 43.0], [11.8, 44.0], [11.9, 44.0], [12.0, 45.0], [12.1, 45.0], [12.2, 46.0], [12.3, 46.0], [12.4, 47.0], [12.5, 47.0], [12.6, 48.0], [12.7, 48.0], [12.8, 49.0], [12.9, 50.0], [13.0, 50.0], [13.1, 51.0], [13.2, 52.0], [13.3, 52.0], [13.4, 53.0], [13.5, 53.0], [13.6, 54.0], [13.7, 54.0], [13.8, 55.0], [13.9, 56.0], [14.0, 58.0], [14.1, 58.0], [14.2, 59.0], [14.3, 59.0], [14.4, 60.0], [14.5, 61.0], [14.6, 62.0], [14.7, 63.0], [14.8, 65.0], [14.9, 67.0], [15.0, 68.0], [15.1, 71.0], [15.2, 77.0], [15.3, 82.0], [15.4, 84.0], [15.5, 89.0], [15.6, 96.0], [15.7, 101.0], [15.8, 107.0], [15.9, 109.0], [16.0, 113.0], [16.1, 117.0], [16.2, 126.0], [16.3, 133.0], [16.4, 136.0], [16.5, 140.0], [16.6, 145.0], [16.7, 151.0], [16.8, 154.0], [16.9, 157.0], [17.0, 163.0], [17.1, 166.0], [17.2, 168.0], [17.3, 173.0], [17.4, 186.0], [17.5, 191.0], [17.6, 200.0], [17.7, 206.0], [17.8, 209.0], [17.9, 218.0], [18.0, 223.0], [18.1, 228.0], [18.2, 232.0], [18.3, 235.0], [18.4, 239.0], [18.5, 240.0], [18.6, 244.0], [18.7, 249.0], [18.8, 256.0], [18.9, 263.0], [19.0, 271.0], [19.1, 274.0], [19.2, 279.0], [19.3, 284.0], [19.4, 288.0], [19.5, 294.0], [19.6, 302.0], [19.7, 308.0], [19.8, 311.0], [19.9, 316.0], [20.0, 319.0], [20.1, 324.0], [20.2, 331.0], [20.3, 337.0], [20.4, 349.0], [20.5, 358.0], [20.6, 369.0], [20.7, 383.0], [20.8, 393.0], [20.9, 396.0], [21.0, 401.0], [21.1, 408.0], [21.2, 411.0], [21.3, 415.0], [21.4, 421.0], [21.5, 425.0], [21.6, 429.0], [21.7, 436.0], [21.8, 440.0], [21.9, 444.0], [22.0, 445.0], [22.1, 453.0], [22.2, 455.0], [22.3, 459.0], [22.4, 463.0], [22.5, 471.0], [22.6, 477.0], [22.7, 483.0], [22.8, 486.0], [22.9, 490.0], [23.0, 494.0], [23.1, 499.0], [23.2, 501.0], [23.3, 504.0], [23.4, 507.0], [23.5, 509.0], [23.6, 510.0], [23.7, 512.0], [23.8, 513.0], [23.9, 515.0], [24.0, 516.0], [24.1, 517.0], [24.2, 520.0], [24.3, 523.0], [24.4, 525.0], [24.5, 527.0], [24.6, 529.0], [24.7, 532.0], [24.8, 536.0], [24.9, 539.0], [25.0, 540.0], [25.1, 541.0], [25.2, 543.0], [25.3, 545.0], [25.4, 548.0], [25.5, 550.0], [25.6, 551.0], [25.7, 553.0], [25.8, 557.0], [25.9, 558.0], [26.0, 559.0], [26.1, 561.0], [26.2, 562.0], [26.3, 563.0], [26.4, 564.0], [26.5, 565.0], [26.6, 565.0], [26.7, 567.0], [26.8, 569.0], [26.9, 570.0], [27.0, 571.0], [27.1, 571.0], [27.2, 573.0], [27.3, 574.0], [27.4, 575.0], [27.5, 576.0], [27.6, 578.0], [27.7, 579.0], [27.8, 580.0], [27.9, 581.0], [28.0, 582.0], [28.1, 583.0], [28.2, 584.0], [28.3, 585.0], [28.4, 586.0], [28.5, 586.0], [28.6, 588.0], [28.7, 588.0], [28.8, 589.0], [28.9, 589.0], [29.0, 591.0], [29.1, 592.0], [29.2, 593.0], [29.3, 594.0], [29.4, 595.0], [29.5, 596.0], [29.6, 596.0], [29.7, 597.0], [29.8, 597.0], [29.9, 599.0], [30.0, 600.0], [30.1, 601.0], [30.2, 602.0], [30.3, 602.0], [30.4, 603.0], [30.5, 604.0], [30.6, 606.0], [30.7, 607.0], [30.8, 607.0], [30.9, 608.0], [31.0, 609.0], [31.1, 610.0], [31.2, 611.0], [31.3, 612.0], [31.4, 612.0], [31.5, 613.0], [31.6, 614.0], [31.7, 614.0], [31.8, 615.0], [31.9, 616.0], [32.0, 617.0], [32.1, 618.0], [32.2, 619.0], [32.3, 620.0], [32.4, 621.0], [32.5, 622.0], [32.6, 622.0], [32.7, 623.0], [32.8, 624.0], [32.9, 625.0], [33.0, 625.0], [33.1, 626.0], [33.2, 627.0], [33.3, 628.0], [33.4, 629.0], [33.5, 630.0], [33.6, 631.0], [33.7, 631.0], [33.8, 633.0], [33.9, 634.0], [34.0, 636.0], [34.1, 636.0], [34.2, 637.0], [34.3, 638.0], [34.4, 638.0], [34.5, 639.0], [34.6, 639.0], [34.7, 640.0], [34.8, 641.0], [34.9, 642.0], [35.0, 644.0], [35.1, 644.0], [35.2, 645.0], [35.3, 645.0], [35.4, 645.0], [35.5, 646.0], [35.6, 646.0], [35.7, 648.0], [35.8, 648.0], [35.9, 648.0], [36.0, 649.0], [36.1, 650.0], [36.2, 651.0], [36.3, 651.0], [36.4, 652.0], [36.5, 653.0], [36.6, 653.0], [36.7, 654.0], [36.8, 654.0], [36.9, 656.0], [37.0, 656.0], [37.1, 657.0], [37.2, 657.0], [37.3, 658.0], [37.4, 659.0], [37.5, 660.0], [37.6, 661.0], [37.7, 662.0], [37.8, 663.0], [37.9, 663.0], [38.0, 664.0], [38.1, 664.0], [38.2, 665.0], [38.3, 666.0], [38.4, 667.0], [38.5, 667.0], [38.6, 668.0], [38.7, 668.0], [38.8, 668.0], [38.9, 669.0], [39.0, 669.0], [39.1, 670.0], [39.2, 671.0], [39.3, 671.0], [39.4, 672.0], [39.5, 673.0], [39.6, 673.0], [39.7, 674.0], [39.8, 674.0], [39.9, 675.0], [40.0, 675.0], [40.1, 675.0], [40.2, 676.0], [40.3, 677.0], [40.4, 677.0], [40.5, 678.0], [40.6, 679.0], [40.7, 679.0], [40.8, 680.0], [40.9, 681.0], [41.0, 681.0], [41.1, 681.0], [41.2, 682.0], [41.3, 682.0], [41.4, 683.0], [41.5, 684.0], [41.6, 684.0], [41.7, 685.0], [41.8, 686.0], [41.9, 686.0], [42.0, 687.0], [42.1, 688.0], [42.2, 688.0], [42.3, 688.0], [42.4, 689.0], [42.5, 689.0], [42.6, 690.0], [42.7, 691.0], [42.8, 691.0], [42.9, 691.0], [43.0, 692.0], [43.1, 693.0], [43.2, 693.0], [43.3, 693.0], [43.4, 694.0], [43.5, 694.0], [43.6, 695.0], [43.7, 696.0], [43.8, 696.0], [43.9, 697.0], [44.0, 698.0], [44.1, 698.0], [44.2, 699.0], [44.3, 700.0], [44.4, 700.0], [44.5, 701.0], [44.6, 702.0], [44.7, 702.0], [44.8, 704.0], [44.9, 704.0], [45.0, 705.0], [45.1, 705.0], [45.2, 705.0], [45.3, 706.0], [45.4, 707.0], [45.5, 707.0], [45.6, 707.0], [45.7, 708.0], [45.8, 708.0], [45.9, 709.0], [46.0, 709.0], [46.1, 710.0], [46.2, 711.0], [46.3, 712.0], [46.4, 712.0], [46.5, 712.0], [46.6, 712.0], [46.7, 713.0], [46.8, 713.0], [46.9, 714.0], [47.0, 714.0], [47.1, 715.0], [47.2, 715.0], [47.3, 716.0], [47.4, 717.0], [47.5, 718.0], [47.6, 718.0], [47.7, 719.0], [47.8, 719.0], [47.9, 720.0], [48.0, 720.0], [48.1, 721.0], [48.2, 721.0], [48.3, 722.0], [48.4, 723.0], [48.5, 723.0], [48.6, 724.0], [48.7, 725.0], [48.8, 725.0], [48.9, 726.0], [49.0, 726.0], [49.1, 727.0], [49.2, 728.0], [49.3, 728.0], [49.4, 729.0], [49.5, 729.0], [49.6, 730.0], [49.7, 730.0], [49.8, 731.0], [49.9, 732.0], [50.0, 732.0], [50.1, 733.0], [50.2, 734.0], [50.3, 734.0], [50.4, 735.0], [50.5, 736.0], [50.6, 736.0], [50.7, 737.0], [50.8, 738.0], [50.9, 739.0], [51.0, 739.0], [51.1, 740.0], [51.2, 741.0], [51.3, 742.0], [51.4, 742.0], [51.5, 743.0], [51.6, 744.0], [51.7, 745.0], [51.8, 746.0], [51.9, 746.0], [52.0, 747.0], [52.1, 748.0], [52.2, 748.0], [52.3, 749.0], [52.4, 750.0], [52.5, 750.0], [52.6, 752.0], [52.7, 752.0], [52.8, 753.0], [52.9, 753.0], [53.0, 754.0], [53.1, 754.0], [53.2, 755.0], [53.3, 755.0], [53.4, 755.0], [53.5, 756.0], [53.6, 757.0], [53.7, 757.0], [53.8, 758.0], [53.9, 758.0], [54.0, 759.0], [54.1, 760.0], [54.2, 760.0], [54.3, 761.0], [54.4, 762.0], [54.5, 763.0], [54.6, 763.0], [54.7, 764.0], [54.8, 765.0], [54.9, 766.0], [55.0, 766.0], [55.1, 767.0], [55.2, 768.0], [55.3, 769.0], [55.4, 769.0], [55.5, 770.0], [55.6, 770.0], [55.7, 771.0], [55.8, 772.0], [55.9, 772.0], [56.0, 773.0], [56.1, 773.0], [56.2, 774.0], [56.3, 774.0], [56.4, 775.0], [56.5, 776.0], [56.6, 776.0], [56.7, 776.0], [56.8, 777.0], [56.9, 777.0], [57.0, 778.0], [57.1, 779.0], [57.2, 780.0], [57.3, 780.0], [57.4, 780.0], [57.5, 781.0], [57.6, 781.0], [57.7, 782.0], [57.8, 782.0], [57.9, 783.0], [58.0, 783.0], [58.1, 784.0], [58.2, 784.0], [58.3, 784.0], [58.4, 785.0], [58.5, 785.0], [58.6, 786.0], [58.7, 787.0], [58.8, 788.0], [58.9, 789.0], [59.0, 789.0], [59.1, 790.0], [59.2, 790.0], [59.3, 792.0], [59.4, 793.0], [59.5, 793.0], [59.6, 794.0], [59.7, 795.0], [59.8, 796.0], [59.9, 797.0], [60.0, 797.0], [60.1, 798.0], [60.2, 798.0], [60.3, 799.0], [60.4, 800.0], [60.5, 801.0], [60.6, 801.0], [60.7, 802.0], [60.8, 803.0], [60.9, 803.0], [61.0, 804.0], [61.1, 804.0], [61.2, 805.0], [61.3, 806.0], [61.4, 806.0], [61.5, 807.0], [61.6, 808.0], [61.7, 808.0], [61.8, 809.0], [61.9, 809.0], [62.0, 810.0], [62.1, 811.0], [62.2, 812.0], [62.3, 813.0], [62.4, 813.0], [62.5, 814.0], [62.6, 814.0], [62.7, 815.0], [62.8, 815.0], [62.9, 816.0], [63.0, 816.0], [63.1, 817.0], [63.2, 817.0], [63.3, 818.0], [63.4, 819.0], [63.5, 819.0], [63.6, 820.0], [63.7, 821.0], [63.8, 822.0], [63.9, 822.0], [64.0, 823.0], [64.1, 824.0], [64.2, 825.0], [64.3, 826.0], [64.4, 827.0], [64.5, 827.0], [64.6, 828.0], [64.7, 829.0], [64.8, 830.0], [64.9, 831.0], [65.0, 832.0], [65.1, 833.0], [65.2, 834.0], [65.3, 834.0], [65.4, 836.0], [65.5, 837.0], [65.6, 838.0], [65.7, 839.0], [65.8, 840.0], [65.9, 841.0], [66.0, 841.0], [66.1, 843.0], [66.2, 844.0], [66.3, 844.0], [66.4, 845.0], [66.5, 846.0], [66.6, 847.0], [66.7, 848.0], [66.8, 848.0], [66.9, 849.0], [67.0, 850.0], [67.1, 851.0], [67.2, 852.0], [67.3, 852.0], [67.4, 853.0], [67.5, 853.0], [67.6, 854.0], [67.7, 856.0], [67.8, 857.0], [67.9, 858.0], [68.0, 858.0], [68.1, 859.0], [68.2, 860.0], [68.3, 860.0], [68.4, 861.0], [68.5, 861.0], [68.6, 862.0], [68.7, 863.0], [68.8, 864.0], [68.9, 864.0], [69.0, 865.0], [69.1, 866.0], [69.2, 867.0], [69.3, 867.0], [69.4, 869.0], [69.5, 869.0], [69.6, 870.0], [69.7, 871.0], [69.8, 872.0], [69.9, 873.0], [70.0, 874.0], [70.1, 875.0], [70.2, 875.0], [70.3, 876.0], [70.4, 877.0], [70.5, 878.0], [70.6, 879.0], [70.7, 881.0], [70.8, 881.0], [70.9, 881.0], [71.0, 883.0], [71.1, 883.0], [71.2, 884.0], [71.3, 885.0], [71.4, 885.0], [71.5, 885.0], [71.6, 886.0], [71.7, 887.0], [71.8, 887.0], [71.9, 888.0], [72.0, 889.0], [72.1, 889.0], [72.2, 890.0], [72.3, 891.0], [72.4, 892.0], [72.5, 893.0], [72.6, 893.0], [72.7, 894.0], [72.8, 894.0], [72.9, 895.0], [73.0, 896.0], [73.1, 897.0], [73.2, 898.0], [73.3, 898.0], [73.4, 899.0], [73.5, 900.0], [73.6, 900.0], [73.7, 901.0], [73.8, 902.0], [73.9, 903.0], [74.0, 904.0], [74.1, 905.0], [74.2, 905.0], [74.3, 906.0], [74.4, 907.0], [74.5, 907.0], [74.6, 908.0], [74.7, 909.0], [74.8, 909.0], [74.9, 911.0], [75.0, 912.0], [75.1, 913.0], [75.2, 914.0], [75.3, 915.0], [75.4, 916.0], [75.5, 917.0], [75.6, 918.0], [75.7, 919.0], [75.8, 919.0], [75.9, 921.0], [76.0, 923.0], [76.1, 923.0], [76.2, 923.0], [76.3, 925.0], [76.4, 925.0], [76.5, 927.0], [76.6, 928.0], [76.7, 929.0], [76.8, 930.0], [76.9, 930.0], [77.0, 932.0], [77.1, 933.0], [77.2, 934.0], [77.3, 935.0], [77.4, 936.0], [77.5, 936.0], [77.6, 938.0], [77.7, 939.0], [77.8, 940.0], [77.9, 941.0], [78.0, 942.0], [78.1, 943.0], [78.2, 944.0], [78.3, 945.0], [78.4, 947.0], [78.5, 948.0], [78.6, 950.0], [78.7, 950.0], [78.8, 952.0], [78.9, 952.0], [79.0, 953.0], [79.1, 954.0], [79.2, 956.0], [79.3, 959.0], [79.4, 960.0], [79.5, 961.0], [79.6, 962.0], [79.7, 965.0], [79.8, 967.0], [79.9, 969.0], [80.0, 972.0], [80.1, 974.0], [80.2, 976.0], [80.3, 977.0], [80.4, 979.0], [80.5, 981.0], [80.6, 982.0], [80.7, 984.0], [80.8, 985.0], [80.9, 986.0], [81.0, 986.0], [81.1, 991.0], [81.2, 993.0], [81.3, 995.0], [81.4, 997.0], [81.5, 998.0], [81.6, 999.0], [81.7, 1000.0], [81.8, 1003.0], [81.9, 1004.0], [82.0, 1005.0], [82.1, 1006.0], [82.2, 1008.0], [82.3, 1009.0], [82.4, 1010.0], [82.5, 1011.0], [82.6, 1012.0], [82.7, 1014.0], [82.8, 1015.0], [82.9, 1016.0], [83.0, 1017.0], [83.1, 1019.0], [83.2, 1020.0], [83.3, 1021.0], [83.4, 1022.0], [83.5, 1024.0], [83.6, 1026.0], [83.7, 1028.0], [83.8, 1029.0], [83.9, 1032.0], [84.0, 1035.0], [84.1, 1037.0], [84.2, 1039.0], [84.3, 1041.0], [84.4, 1042.0], [84.5, 1045.0], [84.6, 1047.0], [84.7, 1048.0], [84.8, 1050.0], [84.9, 1051.0], [85.0, 1052.0], [85.1, 1053.0], [85.2, 1056.0], [85.3, 1057.0], [85.4, 1060.0], [85.5, 1063.0], [85.6, 1065.0], [85.7, 1069.0], [85.8, 1071.0], [85.9, 1073.0], [86.0, 1074.0], [86.1, 1077.0], [86.2, 1081.0], [86.3, 1084.0], [86.4, 1086.0], [86.5, 1090.0], [86.6, 1091.0], [86.7, 1093.0], [86.8, 1095.0], [86.9, 1098.0], [87.0, 1099.0], [87.1, 1101.0], [87.2, 1105.0], [87.3, 1107.0], [87.4, 1110.0], [87.5, 1116.0], [87.6, 1118.0], [87.7, 1121.0], [87.8, 1130.0], [87.9, 1134.0], [88.0, 1141.0], [88.1, 1143.0], [88.2, 1151.0], [88.3, 1155.0], [88.4, 1158.0], [88.5, 1160.0], [88.6, 1170.0], [88.7, 1171.0], [88.8, 1177.0], [88.9, 1180.0], [89.0, 1184.0], [89.1, 1186.0], [89.2, 1187.0], [89.3, 1193.0], [89.4, 1197.0], [89.5, 1199.0], [89.6, 1201.0], [89.7, 1206.0], [89.8, 1217.0], [89.9, 1220.0], [90.0, 1228.0], [90.1, 1233.0], [90.2, 1235.0], [90.3, 1236.0], [90.4, 1241.0], [90.5, 1249.0], [90.6, 1256.0], [90.7, 1259.0], [90.8, 1263.0], [90.9, 1267.0], [91.0, 1276.0], [91.1, 1280.0], [91.2, 1283.0], [91.3, 1290.0], [91.4, 1295.0], [91.5, 1299.0], [91.6, 1304.0], [91.7, 1307.0], [91.8, 1311.0], [91.9, 1317.0], [92.0, 1324.0], [92.1, 1329.0], [92.2, 1334.0], [92.3, 1342.0], [92.4, 1346.0], [92.5, 1347.0], [92.6, 1350.0], [92.7, 1356.0], [92.8, 1361.0], [92.9, 1365.0], [93.0, 1371.0], [93.1, 1381.0], [93.2, 1391.0], [93.3, 1397.0], [93.4, 1406.0], [93.5, 1410.0], [93.6, 1418.0], [93.7, 1424.0], [93.8, 1429.0], [93.9, 1439.0], [94.0, 1443.0], [94.1, 1452.0], [94.2, 1460.0], [94.3, 1463.0], [94.4, 1476.0], [94.5, 1485.0], [94.6, 1487.0], [94.7, 1493.0], [94.8, 1498.0], [94.9, 1501.0], [95.0, 1507.0], [95.1, 1516.0], [95.2, 1521.0], [95.3, 1523.0], [95.4, 1526.0], [95.5, 1534.0], [95.6, 1541.0], [95.7, 1554.0], [95.8, 1560.0], [95.9, 1567.0], [96.0, 1573.0], [96.1, 1576.0], [96.2, 1590.0], [96.3, 1594.0], [96.4, 1598.0], [96.5, 1609.0], [96.6, 1617.0], [96.7, 1624.0], [96.8, 1642.0], [96.9, 1648.0], [97.0, 1657.0], [97.1, 1660.0], [97.2, 1669.0], [97.3, 1680.0], [97.4, 1690.0], [97.5, 1699.0], [97.6, 1743.0], [97.7, 1756.0], [97.8, 1772.0], [97.9, 1786.0], [98.0, 1798.0], [98.1, 1818.0], [98.2, 1855.0], [98.3, 1874.0], [98.4, 1895.0], [98.5, 1944.0], [98.6, 2001.0], [98.7, 2007.0], [98.8, 2098.0], [98.9, 2167.0], [99.0, 2199.0], [99.1, 2250.0], [99.2, 2286.0], [99.3, 2324.0], [99.4, 2342.0], [99.5, 2372.0], [99.6, 2484.0], [99.7, 2580.0], [99.8, 2699.0], [99.9, 3128.0]], "isOverall": false, "label": "HTTP Request - POST /hammock/update", "isController": false}, {"data": [[0.0, 2.0], [0.1, 3.0], [0.2, 4.0], [0.3, 5.0], [0.4, 5.0], [0.5, 6.0], [0.6, 7.0], [0.7, 7.0], [0.8, 7.0], [0.9, 8.0], [1.0, 8.0], [1.1, 9.0], [1.2, 9.0], [1.3, 9.0], [1.4, 9.0], [1.5, 10.0], [1.6, 10.0], [1.7, 10.0], [1.8, 11.0], [1.9, 11.0], [2.0, 11.0], [2.1, 11.0], [2.2, 12.0], [2.3, 12.0], [2.4, 12.0], [2.5, 13.0], [2.6, 14.0], [2.7, 14.0], [2.8, 14.0], [2.9, 15.0], [3.0, 15.0], [3.1, 15.0], [3.2, 15.0], [3.3, 16.0], [3.4, 16.0], [3.5, 16.0], [3.6, 17.0], [3.7, 17.0], [3.8, 17.0], [3.9, 18.0], [4.0, 18.0], [4.1, 19.0], [4.2, 20.0], [4.3, 20.0], [4.4, 21.0], [4.5, 22.0], [4.6, 23.0], [4.7, 24.0], [4.8, 25.0], [4.9, 25.0], [5.0, 26.0], [5.1, 27.0], [5.2, 28.0], [5.3, 28.0], [5.4, 29.0], [5.5, 30.0], [5.6, 32.0], [5.7, 34.0], [5.8, 36.0], [5.9, 37.0], [6.0, 39.0], [6.1, 42.0], [6.2, 43.0], [6.3, 46.0], [6.4, 49.0], [6.5, 54.0], [6.6, 68.0], [6.7, 77.0], [6.8, 85.0], [6.9, 89.0], [7.0, 92.0], [7.1, 97.0], [7.2, 103.0], [7.3, 105.0], [7.4, 108.0], [7.5, 113.0], [7.6, 119.0], [7.7, 129.0], [7.8, 132.0], [7.9, 135.0], [8.0, 142.0], [8.1, 145.0], [8.2, 149.0], [8.3, 153.0], [8.4, 157.0], [8.5, 162.0], [8.6, 166.0], [8.7, 175.0], [8.8, 184.0], [8.9, 187.0], [9.0, 197.0], [9.1, 204.0], [9.2, 210.0], [9.3, 214.0], [9.4, 218.0], [9.5, 220.0], [9.6, 227.0], [9.7, 228.0], [9.8, 229.0], [9.9, 234.0], [10.0, 235.0], [10.1, 238.0], [10.2, 244.0], [10.3, 248.0], [10.4, 257.0], [10.5, 260.0], [10.6, 264.0], [10.7, 269.0], [10.8, 276.0], [10.9, 283.0], [11.0, 289.0], [11.1, 296.0], [11.2, 304.0], [11.3, 310.0], [11.4, 316.0], [11.5, 323.0], [11.6, 327.0], [11.7, 340.0], [11.8, 354.0], [11.9, 359.0], [12.0, 373.0], [12.1, 378.0], [12.2, 387.0], [12.3, 391.0], [12.4, 394.0], [12.5, 403.0], [12.6, 404.0], [12.7, 406.0], [12.8, 417.0], [12.9, 423.0], [13.0, 426.0], [13.1, 430.0], [13.2, 434.0], [13.3, 436.0], [13.4, 440.0], [13.5, 442.0], [13.6, 446.0], [13.7, 448.0], [13.8, 450.0], [13.9, 453.0], [14.0, 459.0], [14.1, 463.0], [14.2, 466.0], [14.3, 468.0], [14.4, 470.0], [14.5, 473.0], [14.6, 476.0], [14.7, 479.0], [14.8, 483.0], [14.9, 486.0], [15.0, 488.0], [15.1, 489.0], [15.2, 490.0], [15.3, 493.0], [15.4, 495.0], [15.5, 496.0], [15.6, 498.0], [15.7, 500.0], [15.8, 502.0], [15.9, 504.0], [16.0, 506.0], [16.1, 507.0], [16.2, 508.0], [16.3, 510.0], [16.4, 512.0], [16.5, 514.0], [16.6, 516.0], [16.7, 518.0], [16.8, 521.0], [16.9, 524.0], [17.0, 526.0], [17.1, 529.0], [17.2, 531.0], [17.3, 533.0], [17.4, 535.0], [17.5, 536.0], [17.6, 539.0], [17.7, 540.0], [17.8, 541.0], [17.9, 543.0], [18.0, 544.0], [18.1, 546.0], [18.2, 548.0], [18.3, 550.0], [18.4, 551.0], [18.5, 551.0], [18.6, 552.0], [18.7, 553.0], [18.8, 554.0], [18.9, 555.0], [19.0, 556.0], [19.1, 557.0], [19.2, 558.0], [19.3, 559.0], [19.4, 559.0], [19.5, 560.0], [19.6, 561.0], [19.7, 562.0], [19.8, 563.0], [19.9, 564.0], [20.0, 565.0], [20.1, 566.0], [20.2, 568.0], [20.3, 569.0], [20.4, 570.0], [20.5, 572.0], [20.6, 574.0], [20.7, 575.0], [20.8, 576.0], [20.9, 577.0], [21.0, 578.0], [21.1, 579.0], [21.2, 580.0], [21.3, 581.0], [21.4, 582.0], [21.5, 583.0], [21.6, 584.0], [21.7, 584.0], [21.8, 585.0], [21.9, 586.0], [22.0, 587.0], [22.1, 587.0], [22.2, 588.0], [22.3, 588.0], [22.4, 589.0], [22.5, 590.0], [22.6, 590.0], [22.7, 591.0], [22.8, 592.0], [22.9, 593.0], [23.0, 593.0], [23.1, 594.0], [23.2, 594.0], [23.3, 595.0], [23.4, 595.0], [23.5, 596.0], [23.6, 597.0], [23.7, 598.0], [23.8, 599.0], [23.9, 601.0], [24.0, 601.0], [24.1, 601.0], [24.2, 602.0], [24.3, 602.0], [24.4, 603.0], [24.5, 603.0], [24.6, 604.0], [24.7, 605.0], [24.8, 606.0], [24.9, 606.0], [25.0, 607.0], [25.1, 607.0], [25.2, 609.0], [25.3, 609.0], [25.4, 610.0], [25.5, 611.0], [25.6, 612.0], [25.7, 613.0], [25.8, 613.0], [25.9, 614.0], [26.0, 614.0], [26.1, 615.0], [26.2, 615.0], [26.3, 616.0], [26.4, 617.0], [26.5, 618.0], [26.6, 619.0], [26.7, 620.0], [26.8, 621.0], [26.9, 621.0], [27.0, 623.0], [27.1, 623.0], [27.2, 624.0], [27.3, 624.0], [27.4, 625.0], [27.5, 626.0], [27.6, 627.0], [27.7, 627.0], [27.8, 628.0], [27.9, 628.0], [28.0, 629.0], [28.1, 629.0], [28.2, 630.0], [28.3, 630.0], [28.4, 631.0], [28.5, 631.0], [28.6, 632.0], [28.7, 633.0], [28.8, 633.0], [28.9, 635.0], [29.0, 635.0], [29.1, 636.0], [29.2, 636.0], [29.3, 637.0], [29.4, 637.0], [29.5, 638.0], [29.6, 639.0], [29.7, 640.0], [29.8, 640.0], [29.9, 641.0], [30.0, 642.0], [30.1, 642.0], [30.2, 643.0], [30.3, 644.0], [30.4, 645.0], [30.5, 645.0], [30.6, 646.0], [30.7, 647.0], [30.8, 647.0], [30.9, 648.0], [31.0, 649.0], [31.1, 650.0], [31.2, 651.0], [31.3, 652.0], [31.4, 652.0], [31.5, 653.0], [31.6, 653.0], [31.7, 654.0], [31.8, 654.0], [31.9, 655.0], [32.0, 655.0], [32.1, 656.0], [32.2, 657.0], [32.3, 657.0], [32.4, 658.0], [32.5, 658.0], [32.6, 659.0], [32.7, 659.0], [32.8, 660.0], [32.9, 660.0], [33.0, 661.0], [33.1, 661.0], [33.2, 662.0], [33.3, 662.0], [33.4, 663.0], [33.5, 663.0], [33.6, 664.0], [33.7, 665.0], [33.8, 665.0], [33.9, 667.0], [34.0, 667.0], [34.1, 668.0], [34.2, 668.0], [34.3, 669.0], [34.4, 670.0], [34.5, 670.0], [34.6, 671.0], [34.7, 672.0], [34.8, 673.0], [34.9, 673.0], [35.0, 674.0], [35.1, 674.0], [35.2, 675.0], [35.3, 675.0], [35.4, 676.0], [35.5, 676.0], [35.6, 677.0], [35.7, 677.0], [35.8, 677.0], [35.9, 677.0], [36.0, 678.0], [36.1, 678.0], [36.2, 679.0], [36.3, 679.0], [36.4, 680.0], [36.5, 681.0], [36.6, 682.0], [36.7, 682.0], [36.8, 683.0], [36.9, 683.0], [37.0, 684.0], [37.1, 685.0], [37.2, 685.0], [37.3, 686.0], [37.4, 686.0], [37.5, 686.0], [37.6, 687.0], [37.7, 688.0], [37.8, 688.0], [37.9, 689.0], [38.0, 689.0], [38.1, 689.0], [38.2, 690.0], [38.3, 690.0], [38.4, 691.0], [38.5, 692.0], [38.6, 692.0], [38.7, 693.0], [38.8, 693.0], [38.9, 694.0], [39.0, 694.0], [39.1, 695.0], [39.2, 695.0], [39.3, 696.0], [39.4, 696.0], [39.5, 696.0], [39.6, 697.0], [39.7, 697.0], [39.8, 698.0], [39.9, 698.0], [40.0, 698.0], [40.1, 699.0], [40.2, 700.0], [40.3, 700.0], [40.4, 701.0], [40.5, 701.0], [40.6, 702.0], [40.7, 703.0], [40.8, 703.0], [40.9, 704.0], [41.0, 705.0], [41.1, 706.0], [41.2, 706.0], [41.3, 707.0], [41.4, 707.0], [41.5, 708.0], [41.6, 708.0], [41.7, 708.0], [41.8, 709.0], [41.9, 709.0], [42.0, 710.0], [42.1, 710.0], [42.2, 710.0], [42.3, 710.0], [42.4, 711.0], [42.5, 712.0], [42.6, 713.0], [42.7, 713.0], [42.8, 713.0], [42.9, 714.0], [43.0, 715.0], [43.1, 715.0], [43.2, 716.0], [43.3, 716.0], [43.4, 716.0], [43.5, 717.0], [43.6, 717.0], [43.7, 718.0], [43.8, 718.0], [43.9, 718.0], [44.0, 719.0], [44.1, 720.0], [44.2, 720.0], [44.3, 720.0], [44.4, 721.0], [44.5, 722.0], [44.6, 722.0], [44.7, 723.0], [44.8, 723.0], [44.9, 724.0], [45.0, 725.0], [45.1, 726.0], [45.2, 727.0], [45.3, 727.0], [45.4, 728.0], [45.5, 728.0], [45.6, 729.0], [45.7, 730.0], [45.8, 731.0], [45.9, 731.0], [46.0, 732.0], [46.1, 732.0], [46.2, 732.0], [46.3, 733.0], [46.4, 733.0], [46.5, 734.0], [46.6, 734.0], [46.7, 735.0], [46.8, 735.0], [46.9, 736.0], [47.0, 736.0], [47.1, 736.0], [47.2, 737.0], [47.3, 738.0], [47.4, 738.0], [47.5, 739.0], [47.6, 740.0], [47.7, 740.0], [47.8, 741.0], [47.9, 741.0], [48.0, 742.0], [48.1, 742.0], [48.2, 743.0], [48.3, 744.0], [48.4, 745.0], [48.5, 746.0], [48.6, 746.0], [48.7, 747.0], [48.8, 748.0], [48.9, 749.0], [49.0, 749.0], [49.1, 749.0], [49.2, 750.0], [49.3, 750.0], [49.4, 750.0], [49.5, 751.0], [49.6, 751.0], [49.7, 752.0], [49.8, 753.0], [49.9, 753.0], [50.0, 754.0], [50.1, 754.0], [50.2, 755.0], [50.3, 756.0], [50.4, 756.0], [50.5, 757.0], [50.6, 758.0], [50.7, 758.0], [50.8, 759.0], [50.9, 760.0], [51.0, 760.0], [51.1, 761.0], [51.2, 762.0], [51.3, 763.0], [51.4, 763.0], [51.5, 764.0], [51.6, 765.0], [51.7, 765.0], [51.8, 765.0], [51.9, 766.0], [52.0, 766.0], [52.1, 767.0], [52.2, 768.0], [52.3, 769.0], [52.4, 769.0], [52.5, 770.0], [52.6, 770.0], [52.7, 771.0], [52.8, 772.0], [52.9, 773.0], [53.0, 773.0], [53.1, 773.0], [53.2, 774.0], [53.3, 775.0], [53.4, 775.0], [53.5, 776.0], [53.6, 777.0], [53.7, 778.0], [53.8, 778.0], [53.9, 779.0], [54.0, 779.0], [54.1, 780.0], [54.2, 780.0], [54.3, 781.0], [54.4, 781.0], [54.5, 782.0], [54.6, 783.0], [54.7, 783.0], [54.8, 783.0], [54.9, 784.0], [55.0, 785.0], [55.1, 786.0], [55.2, 787.0], [55.3, 787.0], [55.4, 788.0], [55.5, 788.0], [55.6, 789.0], [55.7, 789.0], [55.8, 790.0], [55.9, 791.0], [56.0, 791.0], [56.1, 792.0], [56.2, 793.0], [56.3, 794.0], [56.4, 794.0], [56.5, 795.0], [56.6, 795.0], [56.7, 796.0], [56.8, 797.0], [56.9, 797.0], [57.0, 798.0], [57.1, 798.0], [57.2, 800.0], [57.3, 800.0], [57.4, 800.0], [57.5, 801.0], [57.6, 802.0], [57.7, 803.0], [57.8, 803.0], [57.9, 804.0], [58.0, 804.0], [58.1, 805.0], [58.2, 805.0], [58.3, 806.0], [58.4, 808.0], [58.5, 808.0], [58.6, 809.0], [58.7, 810.0], [58.8, 810.0], [58.9, 811.0], [59.0, 812.0], [59.1, 813.0], [59.2, 813.0], [59.3, 814.0], [59.4, 815.0], [59.5, 816.0], [59.6, 817.0], [59.7, 818.0], [59.8, 818.0], [59.9, 819.0], [60.0, 820.0], [60.1, 821.0], [60.2, 822.0], [60.3, 823.0], [60.4, 824.0], [60.5, 825.0], [60.6, 825.0], [60.7, 826.0], [60.8, 826.0], [60.9, 827.0], [61.0, 827.0], [61.1, 828.0], [61.2, 828.0], [61.3, 829.0], [61.4, 830.0], [61.5, 831.0], [61.6, 831.0], [61.7, 832.0], [61.8, 833.0], [61.9, 833.0], [62.0, 835.0], [62.1, 835.0], [62.2, 835.0], [62.3, 836.0], [62.4, 836.0], [62.5, 837.0], [62.6, 838.0], [62.7, 838.0], [62.8, 839.0], [62.9, 840.0], [63.0, 841.0], [63.1, 841.0], [63.2, 841.0], [63.3, 843.0], [63.4, 843.0], [63.5, 843.0], [63.6, 845.0], [63.7, 846.0], [63.8, 846.0], [63.9, 847.0], [64.0, 848.0], [64.1, 849.0], [64.2, 850.0], [64.3, 851.0], [64.4, 852.0], [64.5, 853.0], [64.6, 854.0], [64.7, 854.0], [64.8, 854.0], [64.9, 855.0], [65.0, 855.0], [65.1, 856.0], [65.2, 857.0], [65.3, 858.0], [65.4, 859.0], [65.5, 859.0], [65.6, 860.0], [65.7, 860.0], [65.8, 861.0], [65.9, 861.0], [66.0, 862.0], [66.1, 863.0], [66.2, 863.0], [66.3, 865.0], [66.4, 865.0], [66.5, 866.0], [66.6, 868.0], [66.7, 868.0], [66.8, 870.0], [66.9, 870.0], [67.0, 871.0], [67.1, 871.0], [67.2, 871.0], [67.3, 872.0], [67.4, 872.0], [67.5, 872.0], [67.6, 873.0], [67.7, 873.0], [67.8, 874.0], [67.9, 875.0], [68.0, 876.0], [68.1, 876.0], [68.2, 877.0], [68.3, 877.0], [68.4, 878.0], [68.5, 878.0], [68.6, 879.0], [68.7, 880.0], [68.8, 880.0], [68.9, 881.0], [69.0, 881.0], [69.1, 883.0], [69.2, 883.0], [69.3, 883.0], [69.4, 884.0], [69.5, 885.0], [69.6, 886.0], [69.7, 886.0], [69.8, 887.0], [69.9, 887.0], [70.0, 888.0], [70.1, 889.0], [70.2, 890.0], [70.3, 890.0], [70.4, 891.0], [70.5, 892.0], [70.6, 894.0], [70.7, 894.0], [70.8, 895.0], [70.9, 896.0], [71.0, 897.0], [71.1, 898.0], [71.2, 900.0], [71.3, 901.0], [71.4, 902.0], [71.5, 903.0], [71.6, 903.0], [71.7, 904.0], [71.8, 905.0], [71.9, 906.0], [72.0, 907.0], [72.1, 907.0], [72.2, 907.0], [72.3, 908.0], [72.4, 909.0], [72.5, 909.0], [72.6, 911.0], [72.7, 912.0], [72.8, 913.0], [72.9, 913.0], [73.0, 914.0], [73.1, 915.0], [73.2, 915.0], [73.3, 916.0], [73.4, 917.0], [73.5, 918.0], [73.6, 919.0], [73.7, 919.0], [73.8, 920.0], [73.9, 921.0], [74.0, 923.0], [74.1, 924.0], [74.2, 925.0], [74.3, 926.0], [74.4, 927.0], [74.5, 928.0], [74.6, 928.0], [74.7, 931.0], [74.8, 932.0], [74.9, 933.0], [75.0, 933.0], [75.1, 934.0], [75.2, 935.0], [75.3, 936.0], [75.4, 937.0], [75.5, 939.0], [75.6, 939.0], [75.7, 940.0], [75.8, 941.0], [75.9, 942.0], [76.0, 943.0], [76.1, 944.0], [76.2, 946.0], [76.3, 948.0], [76.4, 949.0], [76.5, 950.0], [76.6, 952.0], [76.7, 953.0], [76.8, 954.0], [76.9, 955.0], [77.0, 956.0], [77.1, 957.0], [77.2, 958.0], [77.3, 958.0], [77.4, 960.0], [77.5, 961.0], [77.6, 962.0], [77.7, 963.0], [77.8, 963.0], [77.9, 965.0], [78.0, 966.0], [78.1, 968.0], [78.2, 970.0], [78.3, 972.0], [78.4, 974.0], [78.5, 974.0], [78.6, 976.0], [78.7, 977.0], [78.8, 979.0], [78.9, 979.0], [79.0, 980.0], [79.1, 981.0], [79.2, 982.0], [79.3, 983.0], [79.4, 984.0], [79.5, 986.0], [79.6, 987.0], [79.7, 990.0], [79.8, 991.0], [79.9, 992.0], [80.0, 996.0], [80.1, 997.0], [80.2, 998.0], [80.3, 999.0], [80.4, 1001.0], [80.5, 1003.0], [80.6, 1004.0], [80.7, 1005.0], [80.8, 1006.0], [80.9, 1007.0], [81.0, 1009.0], [81.1, 1012.0], [81.2, 1013.0], [81.3, 1015.0], [81.4, 1017.0], [81.5, 1019.0], [81.6, 1020.0], [81.7, 1021.0], [81.8, 1023.0], [81.9, 1025.0], [82.0, 1027.0], [82.1, 1029.0], [82.2, 1031.0], [82.3, 1032.0], [82.4, 1033.0], [82.5, 1035.0], [82.6, 1036.0], [82.7, 1042.0], [82.8, 1043.0], [82.9, 1046.0], [83.0, 1047.0], [83.1, 1048.0], [83.2, 1049.0], [83.3, 1052.0], [83.4, 1053.0], [83.5, 1054.0], [83.6, 1056.0], [83.7, 1059.0], [83.8, 1061.0], [83.9, 1064.0], [84.0, 1066.0], [84.1, 1068.0], [84.2, 1070.0], [84.3, 1074.0], [84.4, 1075.0], [84.5, 1078.0], [84.6, 1084.0], [84.7, 1088.0], [84.8, 1093.0], [84.9, 1095.0], [85.0, 1099.0], [85.1, 1101.0], [85.2, 1104.0], [85.3, 1111.0], [85.4, 1117.0], [85.5, 1118.0], [85.6, 1119.0], [85.7, 1123.0], [85.8, 1126.0], [85.9, 1134.0], [86.0, 1139.0], [86.1, 1141.0], [86.2, 1149.0], [86.3, 1151.0], [86.4, 1152.0], [86.5, 1154.0], [86.6, 1157.0], [86.7, 1161.0], [86.8, 1163.0], [86.9, 1167.0], [87.0, 1171.0], [87.1, 1176.0], [87.2, 1181.0], [87.3, 1190.0], [87.4, 1194.0], [87.5, 1198.0], [87.6, 1202.0], [87.7, 1210.0], [87.8, 1219.0], [87.9, 1225.0], [88.0, 1228.0], [88.1, 1233.0], [88.2, 1237.0], [88.3, 1242.0], [88.4, 1247.0], [88.5, 1250.0], [88.6, 1254.0], [88.7, 1256.0], [88.8, 1260.0], [88.9, 1267.0], [89.0, 1270.0], [89.1, 1273.0], [89.2, 1278.0], [89.3, 1283.0], [89.4, 1286.0], [89.5, 1296.0], [89.6, 1303.0], [89.7, 1307.0], [89.8, 1310.0], [89.9, 1315.0], [90.0, 1318.0], [90.1, 1322.0], [90.2, 1324.0], [90.3, 1326.0], [90.4, 1333.0], [90.5, 1337.0], [90.6, 1341.0], [90.7, 1343.0], [90.8, 1350.0], [90.9, 1352.0], [91.0, 1358.0], [91.1, 1363.0], [91.2, 1365.0], [91.3, 1369.0], [91.4, 1373.0], [91.5, 1382.0], [91.6, 1384.0], [91.7, 1389.0], [91.8, 1396.0], [91.9, 1398.0], [92.0, 1408.0], [92.1, 1413.0], [92.2, 1419.0], [92.3, 1425.0], [92.4, 1428.0], [92.5, 1432.0], [92.6, 1437.0], [92.7, 1441.0], [92.8, 1445.0], [92.9, 1447.0], [93.0, 1453.0], [93.1, 1462.0], [93.2, 1469.0], [93.3, 1474.0], [93.4, 1481.0], [93.5, 1483.0], [93.6, 1488.0], [93.7, 1491.0], [93.8, 1495.0], [93.9, 1500.0], [94.0, 1505.0], [94.1, 1508.0], [94.2, 1512.0], [94.3, 1516.0], [94.4, 1520.0], [94.5, 1532.0], [94.6, 1541.0], [94.7, 1542.0], [94.8, 1552.0], [94.9, 1559.0], [95.0, 1565.0], [95.1, 1570.0], [95.2, 1575.0], [95.3, 1582.0], [95.4, 1588.0], [95.5, 1599.0], [95.6, 1603.0], [95.7, 1607.0], [95.8, 1611.0], [95.9, 1622.0], [96.0, 1630.0], [96.1, 1638.0], [96.2, 1644.0], [96.3, 1648.0], [96.4, 1654.0], [96.5, 1661.0], [96.6, 1675.0], [96.7, 1682.0], [96.8, 1688.0], [96.9, 1701.0], [97.0, 1722.0], [97.1, 1735.0], [97.2, 1752.0], [97.3, 1762.0], [97.4, 1768.0], [97.5, 1776.0], [97.6, 1788.0], [97.7, 1798.0], [97.8, 1808.0], [97.9, 1838.0], [98.0, 1856.0], [98.1, 1902.0], [98.2, 1914.0], [98.3, 1937.0], [98.4, 1955.0], [98.5, 1994.0], [98.6, 2015.0], [98.7, 2039.0], [98.8, 2085.0], [98.9, 2137.0], [99.0, 2184.0], [99.1, 2210.0], [99.2, 2241.0], [99.3, 2279.0], [99.4, 2317.0], [99.5, 2377.0], [99.6, 2490.0], [99.7, 2687.0], [99.8, 2884.0], [99.9, 3259.0]], "isOverall": false, "label": "HTTP Request - GET /hammock/find/1", "isController": false}, {"data": [[0.0, 5.0], [0.1, 9.0], [0.2, 17.0], [0.3, 17.0], [0.4, 21.0], [0.5, 23.0], [0.6, 24.0], [0.7, 25.0], [0.8, 25.0], [0.9, 26.0], [1.0, 27.0], [1.1, 28.0], [1.2, 28.0], [1.3, 29.0], [1.4, 30.0], [1.5, 31.0], [1.6, 31.0], [1.7, 33.0], [1.8, 34.0], [1.9, 34.0], [2.0, 35.0], [2.1, 36.0], [2.2, 36.0], [2.3, 37.0], [2.4, 37.0], [2.5, 38.0], [2.6, 38.0], [2.7, 39.0], [2.8, 39.0], [2.9, 40.0], [3.0, 41.0], [3.1, 41.0], [3.2, 42.0], [3.3, 42.0], [3.4, 42.0], [3.5, 43.0], [3.6, 43.0], [3.7, 43.0], [3.8, 44.0], [3.9, 45.0], [4.0, 45.0], [4.1, 45.0], [4.2, 46.0], [4.3, 46.0], [4.4, 46.0], [4.5, 47.0], [4.6, 47.0], [4.7, 48.0], [4.8, 48.0], [4.9, 48.0], [5.0, 49.0], [5.1, 49.0], [5.2, 49.0], [5.3, 49.0], [5.4, 50.0], [5.5, 50.0], [5.6, 50.0], [5.7, 51.0], [5.8, 51.0], [5.9, 52.0], [6.0, 52.0], [6.1, 52.0], [6.2, 53.0], [6.3, 54.0], [6.4, 54.0], [6.5, 55.0], [6.6, 55.0], [6.7, 56.0], [6.8, 56.0], [6.9, 56.0], [7.0, 57.0], [7.1, 57.0], [7.2, 58.0], [7.3, 58.0], [7.4, 58.0], [7.5, 59.0], [7.6, 59.0], [7.7, 59.0], [7.8, 60.0], [7.9, 60.0], [8.0, 60.0], [8.1, 61.0], [8.2, 61.0], [8.3, 61.0], [8.4, 62.0], [8.5, 62.0], [8.6, 62.0], [8.7, 62.0], [8.8, 63.0], [8.9, 63.0], [9.0, 63.0], [9.1, 64.0], [9.2, 64.0], [9.3, 64.0], [9.4, 64.0], [9.5, 65.0], [9.6, 65.0], [9.7, 65.0], [9.8, 66.0], [9.9, 66.0], [10.0, 66.0], [10.1, 67.0], [10.2, 67.0], [10.3, 68.0], [10.4, 68.0], [10.5, 68.0], [10.6, 69.0], [10.7, 69.0], [10.8, 70.0], [10.9, 70.0], [11.0, 71.0], [11.1, 71.0], [11.2, 71.0], [11.3, 72.0], [11.4, 72.0], [11.5, 73.0], [11.6, 74.0], [11.7, 74.0], [11.8, 74.0], [11.9, 75.0], [12.0, 75.0], [12.1, 75.0], [12.2, 76.0], [12.3, 76.0], [12.4, 77.0], [12.5, 77.0], [12.6, 78.0], [12.7, 79.0], [12.8, 80.0], [12.9, 81.0], [13.0, 81.0], [13.1, 82.0], [13.2, 83.0], [13.3, 83.0], [13.4, 84.0], [13.5, 84.0], [13.6, 85.0], [13.7, 86.0], [13.8, 87.0], [13.9, 87.0], [14.0, 87.0], [14.1, 89.0], [14.2, 89.0], [14.3, 91.0], [14.4, 91.0], [14.5, 92.0], [14.6, 93.0], [14.7, 94.0], [14.8, 95.0], [14.9, 96.0], [15.0, 97.0], [15.1, 99.0], [15.2, 100.0], [15.3, 101.0], [15.4, 102.0], [15.5, 106.0], [15.6, 107.0], [15.7, 108.0], [15.8, 109.0], [15.9, 110.0], [16.0, 111.0], [16.1, 113.0], [16.2, 116.0], [16.3, 119.0], [16.4, 122.0], [16.5, 124.0], [16.6, 126.0], [16.7, 127.0], [16.8, 129.0], [16.9, 132.0], [17.0, 134.0], [17.1, 136.0], [17.2, 139.0], [17.3, 141.0], [17.4, 143.0], [17.5, 149.0], [17.6, 151.0], [17.7, 158.0], [17.8, 160.0], [17.9, 164.0], [18.0, 167.0], [18.1, 169.0], [18.2, 177.0], [18.3, 183.0], [18.4, 186.0], [18.5, 194.0], [18.6, 198.0], [18.7, 201.0], [18.8, 202.0], [18.9, 208.0], [19.0, 214.0], [19.1, 222.0], [19.2, 228.0], [19.3, 238.0], [19.4, 243.0], [19.5, 248.0], [19.6, 253.0], [19.7, 260.0], [19.8, 266.0], [19.9, 269.0], [20.0, 274.0], [20.1, 285.0], [20.2, 289.0], [20.3, 293.0], [20.4, 296.0], [20.5, 301.0], [20.6, 308.0], [20.7, 320.0], [20.8, 322.0], [20.9, 324.0], [21.0, 329.0], [21.1, 332.0], [21.2, 338.0], [21.3, 340.0], [21.4, 344.0], [21.5, 349.0], [21.6, 360.0], [21.7, 370.0], [21.8, 379.0], [21.9, 384.0], [22.0, 397.0], [22.1, 403.0], [22.2, 413.0], [22.3, 416.0], [22.4, 422.0], [22.5, 427.0], [22.6, 430.0], [22.7, 433.0], [22.8, 441.0], [22.9, 449.0], [23.0, 457.0], [23.1, 460.0], [23.2, 464.0], [23.3, 468.0], [23.4, 471.0], [23.5, 477.0], [23.6, 486.0], [23.7, 496.0], [23.8, 503.0], [23.9, 512.0], [24.0, 515.0], [24.1, 519.0], [24.2, 521.0], [24.3, 524.0], [24.4, 531.0], [24.5, 533.0], [24.6, 537.0], [24.7, 538.0], [24.8, 540.0], [24.9, 542.0], [25.0, 542.0], [25.1, 546.0], [25.2, 549.0], [25.3, 550.0], [25.4, 552.0], [25.5, 555.0], [25.6, 561.0], [25.7, 562.0], [25.8, 564.0], [25.9, 565.0], [26.0, 567.0], [26.1, 570.0], [26.2, 572.0], [26.3, 574.0], [26.4, 576.0], [26.5, 578.0], [26.6, 579.0], [26.7, 579.0], [26.8, 581.0], [26.9, 583.0], [27.0, 585.0], [27.1, 586.0], [27.2, 587.0], [27.3, 588.0], [27.4, 590.0], [27.5, 591.0], [27.6, 593.0], [27.7, 595.0], [27.8, 596.0], [27.9, 598.0], [28.0, 600.0], [28.1, 602.0], [28.2, 602.0], [28.3, 603.0], [28.4, 604.0], [28.5, 605.0], [28.6, 606.0], [28.7, 607.0], [28.8, 609.0], [28.9, 610.0], [29.0, 611.0], [29.1, 613.0], [29.2, 613.0], [29.3, 615.0], [29.4, 615.0], [29.5, 617.0], [29.6, 618.0], [29.7, 619.0], [29.8, 621.0], [29.9, 623.0], [30.0, 625.0], [30.1, 627.0], [30.2, 628.0], [30.3, 630.0], [30.4, 630.0], [30.5, 632.0], [30.6, 634.0], [30.7, 634.0], [30.8, 635.0], [30.9, 636.0], [31.0, 637.0], [31.1, 637.0], [31.2, 639.0], [31.3, 639.0], [31.4, 640.0], [31.5, 641.0], [31.6, 642.0], [31.7, 642.0], [31.8, 643.0], [31.9, 643.0], [32.0, 644.0], [32.1, 645.0], [32.2, 646.0], [32.3, 647.0], [32.4, 648.0], [32.5, 650.0], [32.6, 652.0], [32.7, 652.0], [32.8, 653.0], [32.9, 654.0], [33.0, 655.0], [33.1, 657.0], [33.2, 658.0], [33.3, 658.0], [33.4, 660.0], [33.5, 660.0], [33.6, 661.0], [33.7, 661.0], [33.8, 661.0], [33.9, 662.0], [34.0, 663.0], [34.1, 663.0], [34.2, 664.0], [34.3, 665.0], [34.4, 665.0], [34.5, 666.0], [34.6, 667.0], [34.7, 668.0], [34.8, 668.0], [34.9, 669.0], [35.0, 669.0], [35.1, 670.0], [35.2, 670.0], [35.3, 671.0], [35.4, 671.0], [35.5, 673.0], [35.6, 673.0], [35.7, 674.0], [35.8, 675.0], [35.9, 676.0], [36.0, 677.0], [36.1, 678.0], [36.2, 678.0], [36.3, 679.0], [36.4, 679.0], [36.5, 680.0], [36.6, 680.0], [36.7, 682.0], [36.8, 682.0], [36.9, 683.0], [37.0, 684.0], [37.1, 684.0], [37.2, 685.0], [37.3, 686.0], [37.4, 688.0], [37.5, 689.0], [37.6, 689.0], [37.7, 690.0], [37.8, 691.0], [37.9, 692.0], [38.0, 692.0], [38.1, 693.0], [38.2, 693.0], [38.3, 694.0], [38.4, 695.0], [38.5, 696.0], [38.6, 697.0], [38.7, 698.0], [38.8, 698.0], [38.9, 699.0], [39.0, 700.0], [39.1, 700.0], [39.2, 700.0], [39.3, 702.0], [39.4, 702.0], [39.5, 702.0], [39.6, 704.0], [39.7, 704.0], [39.8, 705.0], [39.9, 706.0], [40.0, 707.0], [40.1, 707.0], [40.2, 707.0], [40.3, 708.0], [40.4, 709.0], [40.5, 710.0], [40.6, 711.0], [40.7, 711.0], [40.8, 712.0], [40.9, 712.0], [41.0, 713.0], [41.1, 713.0], [41.2, 713.0], [41.3, 714.0], [41.4, 714.0], [41.5, 715.0], [41.6, 715.0], [41.7, 716.0], [41.8, 717.0], [41.9, 717.0], [42.0, 718.0], [42.1, 718.0], [42.2, 719.0], [42.3, 719.0], [42.4, 720.0], [42.5, 721.0], [42.6, 721.0], [42.7, 722.0], [42.8, 722.0], [42.9, 723.0], [43.0, 723.0], [43.1, 724.0], [43.2, 725.0], [43.3, 725.0], [43.4, 726.0], [43.5, 726.0], [43.6, 727.0], [43.7, 728.0], [43.8, 728.0], [43.9, 729.0], [44.0, 729.0], [44.1, 730.0], [44.2, 731.0], [44.3, 732.0], [44.4, 733.0], [44.5, 733.0], [44.6, 733.0], [44.7, 733.0], [44.8, 734.0], [44.9, 734.0], [45.0, 735.0], [45.1, 735.0], [45.2, 736.0], [45.3, 737.0], [45.4, 737.0], [45.5, 738.0], [45.6, 738.0], [45.7, 739.0], [45.8, 739.0], [45.9, 740.0], [46.0, 740.0], [46.1, 740.0], [46.2, 741.0], [46.3, 741.0], [46.4, 742.0], [46.5, 743.0], [46.6, 743.0], [46.7, 743.0], [46.8, 744.0], [46.9, 744.0], [47.0, 745.0], [47.1, 745.0], [47.2, 745.0], [47.3, 746.0], [47.4, 747.0], [47.5, 748.0], [47.6, 749.0], [47.7, 749.0], [47.8, 749.0], [47.9, 750.0], [48.0, 750.0], [48.1, 751.0], [48.2, 751.0], [48.3, 752.0], [48.4, 752.0], [48.5, 754.0], [48.6, 755.0], [48.7, 755.0], [48.8, 756.0], [48.9, 757.0], [49.0, 757.0], [49.1, 758.0], [49.2, 758.0], [49.3, 758.0], [49.4, 759.0], [49.5, 759.0], [49.6, 760.0], [49.7, 761.0], [49.8, 762.0], [49.9, 762.0], [50.0, 763.0], [50.1, 763.0], [50.2, 764.0], [50.3, 764.0], [50.4, 765.0], [50.5, 766.0], [50.6, 767.0], [50.7, 767.0], [50.8, 768.0], [50.9, 769.0], [51.0, 769.0], [51.1, 770.0], [51.2, 770.0], [51.3, 771.0], [51.4, 771.0], [51.5, 772.0], [51.6, 772.0], [51.7, 773.0], [51.8, 773.0], [51.9, 774.0], [52.0, 775.0], [52.1, 776.0], [52.2, 776.0], [52.3, 777.0], [52.4, 778.0], [52.5, 779.0], [52.6, 779.0], [52.7, 779.0], [52.8, 780.0], [52.9, 780.0], [53.0, 781.0], [53.1, 782.0], [53.2, 782.0], [53.3, 783.0], [53.4, 783.0], [53.5, 784.0], [53.6, 784.0], [53.7, 785.0], [53.8, 785.0], [53.9, 786.0], [54.0, 787.0], [54.1, 787.0], [54.2, 787.0], [54.3, 789.0], [54.4, 790.0], [54.5, 790.0], [54.6, 790.0], [54.7, 791.0], [54.8, 791.0], [54.9, 791.0], [55.0, 791.0], [55.1, 792.0], [55.2, 793.0], [55.3, 794.0], [55.4, 794.0], [55.5, 795.0], [55.6, 796.0], [55.7, 796.0], [55.8, 797.0], [55.9, 798.0], [56.0, 798.0], [56.1, 799.0], [56.2, 799.0], [56.3, 800.0], [56.4, 800.0], [56.5, 801.0], [56.6, 801.0], [56.7, 802.0], [56.8, 803.0], [56.9, 804.0], [57.0, 804.0], [57.1, 804.0], [57.2, 806.0], [57.3, 807.0], [57.4, 807.0], [57.5, 807.0], [57.6, 808.0], [57.7, 809.0], [57.8, 810.0], [57.9, 811.0], [58.0, 812.0], [58.1, 813.0], [58.2, 813.0], [58.3, 814.0], [58.4, 814.0], [58.5, 815.0], [58.6, 816.0], [58.7, 817.0], [58.8, 818.0], [58.9, 818.0], [59.0, 819.0], [59.1, 820.0], [59.2, 820.0], [59.3, 821.0], [59.4, 822.0], [59.5, 822.0], [59.6, 823.0], [59.7, 824.0], [59.8, 824.0], [59.9, 826.0], [60.0, 826.0], [60.1, 827.0], [60.2, 827.0], [60.3, 828.0], [60.4, 828.0], [60.5, 829.0], [60.6, 830.0], [60.7, 830.0], [60.8, 831.0], [60.9, 832.0], [61.0, 832.0], [61.1, 833.0], [61.2, 833.0], [61.3, 834.0], [61.4, 834.0], [61.5, 835.0], [61.6, 835.0], [61.7, 836.0], [61.8, 837.0], [61.9, 838.0], [62.0, 838.0], [62.1, 839.0], [62.2, 840.0], [62.3, 841.0], [62.4, 842.0], [62.5, 842.0], [62.6, 843.0], [62.7, 843.0], [62.8, 844.0], [62.9, 845.0], [63.0, 846.0], [63.1, 847.0], [63.2, 847.0], [63.3, 848.0], [63.4, 849.0], [63.5, 850.0], [63.6, 850.0], [63.7, 851.0], [63.8, 851.0], [63.9, 852.0], [64.0, 852.0], [64.1, 853.0], [64.2, 853.0], [64.3, 854.0], [64.4, 855.0], [64.5, 856.0], [64.6, 857.0], [64.7, 857.0], [64.8, 858.0], [64.9, 859.0], [65.0, 859.0], [65.1, 860.0], [65.2, 861.0], [65.3, 862.0], [65.4, 863.0], [65.5, 864.0], [65.6, 865.0], [65.7, 865.0], [65.8, 866.0], [65.9, 866.0], [66.0, 867.0], [66.1, 868.0], [66.2, 869.0], [66.3, 870.0], [66.4, 871.0], [66.5, 872.0], [66.6, 874.0], [66.7, 875.0], [66.8, 875.0], [66.9, 877.0], [67.0, 878.0], [67.1, 878.0], [67.2, 878.0], [67.3, 879.0], [67.4, 880.0], [67.5, 881.0], [67.6, 882.0], [67.7, 883.0], [67.8, 883.0], [67.9, 884.0], [68.0, 885.0], [68.1, 886.0], [68.2, 887.0], [68.3, 887.0], [68.4, 888.0], [68.5, 889.0], [68.6, 890.0], [68.7, 890.0], [68.8, 890.0], [68.9, 891.0], [69.0, 891.0], [69.1, 892.0], [69.2, 893.0], [69.3, 894.0], [69.4, 895.0], [69.5, 896.0], [69.6, 897.0], [69.7, 898.0], [69.8, 898.0], [69.9, 899.0], [70.0, 900.0], [70.1, 901.0], [70.2, 901.0], [70.3, 903.0], [70.4, 903.0], [70.5, 904.0], [70.6, 904.0], [70.7, 906.0], [70.8, 907.0], [70.9, 908.0], [71.0, 908.0], [71.1, 909.0], [71.2, 910.0], [71.3, 911.0], [71.4, 912.0], [71.5, 912.0], [71.6, 913.0], [71.7, 914.0], [71.8, 915.0], [71.9, 916.0], [72.0, 917.0], [72.1, 918.0], [72.2, 919.0], [72.3, 920.0], [72.4, 922.0], [72.5, 922.0], [72.6, 923.0], [72.7, 925.0], [72.8, 925.0], [72.9, 926.0], [73.0, 927.0], [73.1, 928.0], [73.2, 929.0], [73.3, 930.0], [73.4, 930.0], [73.5, 931.0], [73.6, 932.0], [73.7, 932.0], [73.8, 934.0], [73.9, 935.0], [74.0, 936.0], [74.1, 937.0], [74.2, 938.0], [74.3, 939.0], [74.4, 940.0], [74.5, 940.0], [74.6, 941.0], [74.7, 943.0], [74.8, 943.0], [74.9, 944.0], [75.0, 945.0], [75.1, 946.0], [75.2, 947.0], [75.3, 948.0], [75.4, 949.0], [75.5, 950.0], [75.6, 951.0], [75.7, 952.0], [75.8, 953.0], [75.9, 955.0], [76.0, 956.0], [76.1, 956.0], [76.2, 958.0], [76.3, 959.0], [76.4, 960.0], [76.5, 962.0], [76.6, 963.0], [76.7, 964.0], [76.8, 965.0], [76.9, 966.0], [77.0, 967.0], [77.1, 968.0], [77.2, 969.0], [77.3, 970.0], [77.4, 972.0], [77.5, 974.0], [77.6, 975.0], [77.7, 975.0], [77.8, 976.0], [77.9, 977.0], [78.0, 977.0], [78.1, 978.0], [78.2, 980.0], [78.3, 981.0], [78.4, 982.0], [78.5, 982.0], [78.6, 983.0], [78.7, 984.0], [78.8, 986.0], [78.9, 988.0], [79.0, 989.0], [79.1, 991.0], [79.2, 992.0], [79.3, 992.0], [79.4, 993.0], [79.5, 995.0], [79.6, 997.0], [79.7, 998.0], [79.8, 1000.0], [79.9, 1001.0], [80.0, 1004.0], [80.1, 1005.0], [80.2, 1007.0], [80.3, 1010.0], [80.4, 1010.0], [80.5, 1013.0], [80.6, 1015.0], [80.7, 1016.0], [80.8, 1018.0], [80.9, 1020.0], [81.0, 1021.0], [81.1, 1022.0], [81.2, 1024.0], [81.3, 1024.0], [81.4, 1027.0], [81.5, 1029.0], [81.6, 1030.0], [81.7, 1032.0], [81.8, 1035.0], [81.9, 1037.0], [82.0, 1040.0], [82.1, 1041.0], [82.2, 1043.0], [82.3, 1045.0], [82.4, 1048.0], [82.5, 1050.0], [82.6, 1051.0], [82.7, 1052.0], [82.8, 1054.0], [82.9, 1057.0], [83.0, 1058.0], [83.1, 1059.0], [83.2, 1061.0], [83.3, 1062.0], [83.4, 1065.0], [83.5, 1067.0], [83.6, 1069.0], [83.7, 1072.0], [83.8, 1073.0], [83.9, 1074.0], [84.0, 1076.0], [84.1, 1078.0], [84.2, 1079.0], [84.3, 1081.0], [84.4, 1082.0], [84.5, 1085.0], [84.6, 1086.0], [84.7, 1089.0], [84.8, 1090.0], [84.9, 1092.0], [85.0, 1094.0], [85.1, 1097.0], [85.2, 1100.0], [85.3, 1104.0], [85.4, 1106.0], [85.5, 1110.0], [85.6, 1111.0], [85.7, 1114.0], [85.8, 1116.0], [85.9, 1121.0], [86.0, 1121.0], [86.1, 1124.0], [86.2, 1126.0], [86.3, 1127.0], [86.4, 1128.0], [86.5, 1130.0], [86.6, 1134.0], [86.7, 1138.0], [86.8, 1142.0], [86.9, 1151.0], [87.0, 1156.0], [87.1, 1160.0], [87.2, 1162.0], [87.3, 1168.0], [87.4, 1170.0], [87.5, 1175.0], [87.6, 1179.0], [87.7, 1184.0], [87.8, 1186.0], [87.9, 1191.0], [88.0, 1196.0], [88.1, 1200.0], [88.2, 1203.0], [88.3, 1205.0], [88.4, 1209.0], [88.5, 1214.0], [88.6, 1216.0], [88.7, 1220.0], [88.8, 1225.0], [88.9, 1231.0], [89.0, 1234.0], [89.1, 1239.0], [89.2, 1240.0], [89.3, 1245.0], [89.4, 1248.0], [89.5, 1252.0], [89.6, 1255.0], [89.7, 1264.0], [89.8, 1268.0], [89.9, 1272.0], [90.0, 1274.0], [90.1, 1280.0], [90.2, 1283.0], [90.3, 1286.0], [90.4, 1294.0], [90.5, 1301.0], [90.6, 1302.0], [90.7, 1313.0], [90.8, 1320.0], [90.9, 1328.0], [91.0, 1331.0], [91.1, 1337.0], [91.2, 1347.0], [91.3, 1353.0], [91.4, 1358.0], [91.5, 1363.0], [91.6, 1366.0], [91.7, 1369.0], [91.8, 1374.0], [91.9, 1381.0], [92.0, 1385.0], [92.1, 1388.0], [92.2, 1395.0], [92.3, 1399.0], [92.4, 1403.0], [92.5, 1406.0], [92.6, 1408.0], [92.7, 1413.0], [92.8, 1417.0], [92.9, 1421.0], [93.0, 1429.0], [93.1, 1434.0], [93.2, 1439.0], [93.3, 1441.0], [93.4, 1448.0], [93.5, 1451.0], [93.6, 1459.0], [93.7, 1473.0], [93.8, 1479.0], [93.9, 1488.0], [94.0, 1491.0], [94.1, 1493.0], [94.2, 1497.0], [94.3, 1506.0], [94.4, 1514.0], [94.5, 1518.0], [94.6, 1522.0], [94.7, 1526.0], [94.8, 1531.0], [94.9, 1537.0], [95.0, 1543.0], [95.1, 1552.0], [95.2, 1559.0], [95.3, 1566.0], [95.4, 1571.0], [95.5, 1580.0], [95.6, 1583.0], [95.7, 1589.0], [95.8, 1598.0], [95.9, 1607.0], [96.0, 1612.0], [96.1, 1618.0], [96.2, 1626.0], [96.3, 1634.0], [96.4, 1639.0], [96.5, 1645.0], [96.6, 1649.0], [96.7, 1659.0], [96.8, 1670.0], [96.9, 1679.0], [97.0, 1695.0], [97.1, 1707.0], [97.2, 1721.0], [97.3, 1753.0], [97.4, 1767.0], [97.5, 1790.0], [97.6, 1807.0], [97.7, 1814.0], [97.8, 1824.0], [97.9, 1836.0], [98.0, 1845.0], [98.1, 1863.0], [98.2, 1899.0], [98.3, 1932.0], [98.4, 1951.0], [98.5, 1979.0], [98.6, 2053.0], [98.7, 2090.0], [98.8, 2130.0], [98.9, 2143.0], [99.0, 2208.0], [99.1, 2259.0], [99.2, 2337.0], [99.3, 2407.0], [99.4, 2530.0], [99.5, 2626.0], [99.6, 2777.0], [99.7, 2843.0], [99.8, 3035.0], [99.9, 3187.0]], "isOverall": false, "label": "HTTP Request - POST /hammock/add", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 5000.0, "series": [{"data": [[0.0, 3.0], [600.0, 131.0], [700.0, 356.0], [800.0, 730.0], [900.0, 779.0], [1000.0, 662.0], [1100.0, 524.0], [1200.0, 287.0], [1300.0, 162.0], [1400.0, 106.0], [1500.0, 111.0], [100.0, 134.0], [1600.0, 125.0], [1700.0, 70.0], [1800.0, 73.0], [1900.0, 34.0], [2000.0, 28.0], [2100.0, 20.0], [2200.0, 21.0], [2300.0, 8.0], [2400.0, 13.0], [2500.0, 16.0], [2600.0, 5.0], [2800.0, 5.0], [2700.0, 6.0], [2900.0, 2.0], [3000.0, 3.0], [3100.0, 2.0], [200.0, 318.0], [3200.0, 4.0], [3300.0, 3.0], [3400.0, 2.0], [3700.0, 3.0], [300.0, 111.0], [400.0, 84.0], [500.0, 59.0]], "isOverall": false, "label": "HTTP Request - GET /hammock/all", "isController": false}, {"data": [[0.0, 5000.0]], "isOverall": false, "label": "HTTP Request -DELETE /hammock/delete/3", "isController": false}, {"data": [[0.0, 783.0], [600.0, 717.0], [700.0, 804.0], [800.0, 657.0], [900.0, 408.0], [1000.0, 268.0], [1100.0, 126.0], [1200.0, 99.0], [1300.0, 90.0], [1400.0, 78.0], [1500.0, 79.0], [100.0, 97.0], [1600.0, 53.0], [1700.0, 25.0], [1800.0, 20.0], [1900.0, 9.0], [2000.0, 11.0], [2100.0, 10.0], [2300.0, 15.0], [2200.0, 11.0], [2400.0, 6.0], [2500.0, 3.0], [2600.0, 5.0], [2800.0, 2.0], [3100.0, 4.0], [200.0, 98.0], [3300.0, 1.0], [3700.0, 1.0], [3900.0, 1.0], [300.0, 70.0], [400.0, 109.0], [500.0, 340.0]], "isOverall": false, "label": "HTTP Request - POST /hammock/update", "isController": false}, {"data": [[0.0, 358.0], [600.0, 818.0], [700.0, 850.0], [800.0, 700.0], [900.0, 456.0], [1000.0, 235.0], [1100.0, 126.0], [1200.0, 100.0], [1300.0, 119.0], [1400.0, 99.0], [1500.0, 81.0], [100.0, 94.0], [1600.0, 68.0], [1700.0, 42.0], [1800.0, 18.0], [1900.0, 23.0], [2000.0, 16.0], [2100.0, 10.0], [2200.0, 15.0], [2300.0, 9.0], [2400.0, 4.0], [2500.0, 1.0], [2600.0, 4.0], [2700.0, 1.0], [2800.0, 4.0], [2900.0, 2.0], [3000.0, 1.0], [3100.0, 1.0], [200.0, 107.0], [3300.0, 1.0], [3200.0, 2.0], [3500.0, 1.0], [3700.0, 1.0], [300.0, 64.0], [400.0, 162.0], [500.0, 407.0]], "isOverall": false, "label": "HTTP Request - GET /hammock/find/1", "isController": false}, {"data": [[0.0, 756.0], [600.0, 549.0], [700.0, 866.0], [800.0, 684.0], [900.0, 490.0], [1000.0, 271.0], [1100.0, 144.0], [1200.0, 121.0], [1300.0, 91.0], [1400.0, 98.0], [1500.0, 78.0], [100.0, 176.0], [1600.0, 61.0], [1700.0, 23.0], [1800.0, 35.0], [1900.0, 16.0], [2000.0, 10.0], [2100.0, 13.0], [2200.0, 7.0], [2300.0, 8.0], [2400.0, 3.0], [2500.0, 6.0], [2600.0, 5.0], [2800.0, 7.0], [2700.0, 3.0], [2900.0, 1.0], [3000.0, 2.0], [3100.0, 4.0], [200.0, 92.0], [3300.0, 1.0], [3200.0, 1.0], [3400.0, 1.0], [4200.0, 1.0], [300.0, 78.0], [400.0, 87.0], [500.0, 211.0]], "isOverall": false, "label": "HTTP Request - POST /hammock/add", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 4200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 1399.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 14816.0, "series": [{"data": [[0.0, 3785.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 14816.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 1399.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 5000.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 74.14161168708743, "minX": 1.7368578E12, "maxY": 100.0, "series": [{"data": [[1.7368578E12, 77.32792389479586], [1.73685798E12, 74.14161168708743], [1.73685792E12, 99.89202777112756], [1.73685786E12, 100.0]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73685798E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 1314.5641025641023, "series": [{"data": [[3.0, 179.0], [5.0, 169.33333333333331], [6.0, 200.0], [7.0, 178.7142857142857], [8.0, 209.5], [9.0, 124.25], [10.0, 192.5], [11.0, 240.83333333333334], [12.0, 234.83333333333331], [13.0, 267.0], [14.0, 214.75], [15.0, 304.66666666666663], [16.0, 311.14285714285717], [17.0, 294.6666666666667], [18.0, 327.0], [19.0, 341.5], [20.0, 275.8333333333333], [21.0, 350.0], [22.0, 418.625], [23.0, 290.25], [24.0, 321.25], [25.0, 450.3333333333333], [26.0, 266.75], [27.0, 295.4], [28.0, 445.5], [29.0, 448.2], [30.0, 484.9090909090909], [31.0, 293.85714285714283], [32.0, 450.8888888888889], [33.0, 373.1111111111111], [34.0, 333.5], [35.0, 318.00000000000006], [36.0, 346.5], [37.0, 231.83333333333334], [38.0, 370.75], [39.0, 393.0], [40.0, 413.0], [41.0, 412.909090909091], [42.0, 248.0], [43.0, 455.21428571428567], [44.0, 547.8], [45.0, 498.55555555555554], [46.0, 326.3333333333333], [47.0, 300.7142857142857], [48.0, 482.6666666666667], [49.0, 372.24999999999994], [50.0, 709.2173913043479], [51.0, 370.75], [52.0, 633.0666666666667], [53.0, 453.8], [54.0, 468.0], [55.0, 531.5652173913043], [56.0, 432.75], [57.0, 699.0999999999999], [58.0, 531.2857142857143], [59.0, 585.5], [60.0, 479.55555555555554], [61.0, 477.5714285714286], [62.0, 736.1199999999998], [63.0, 607.4615384615386], [64.0, 616.3333333333335], [65.0, 568.1666666666666], [66.0, 730.4117647058823], [67.0, 750.5999999999999], [68.0, 731.8666666666668], [69.0, 758.4], [70.0, 474.55555555555554], [71.0, 681.0000000000001], [72.0, 480.33333333333337], [73.0, 446.57142857142856], [74.0, 484.25], [75.0, 899.8648648648648], [76.0, 749.6], [77.0, 688.1111111111111], [78.0, 750.9], [79.0, 770.7391304347827], [80.0, 928.25], [81.0, 995.727272727273], [82.0, 1047.107142857143], [83.0, 1210.0], [84.0, 1132.8947368421052], [85.0, 1173.5624999999998], [86.0, 839.2857142857142], [87.0, 998.105263157895], [88.0, 764.6923076923077], [89.0, 965.1111111111112], [90.0, 1160.8444444444444], [91.0, 1079.0], [92.0, 883.4], [93.0, 1253.4390243902437], [94.0, 904.7692307692308], [95.0, 1286.9666666666667], [96.0, 1134.1304347826087], [97.0, 1314.5641025641023], [98.0, 805.1904761904763], [99.0, 1054.9685039370077], [100.0, 1066.5455291222322], [1.0, 94.0]], "isOverall": false, "label": "HTTP Request - GET /hammock/all", "isController": false}, {"data": [[92.3398000000004, 999.4084000000012]], "isOverall": false, "label": "HTTP Request - GET /hammock/all-Aggregated", "isController": false}, {"data": [[2.0, 1.0], [3.0, 2.5], [4.0, 2.0], [5.0, 2.0], [6.0, 10.0], [7.0, 2.0], [8.0, 2.857142857142857], [9.0, 3.25], [10.0, 5.8], [11.0, 9.0], [12.0, 3.3333333333333335], [13.0, 3.3333333333333335], [14.0, 4.2], [15.0, 3.5], [16.0, 4.4], [17.0, 3.5], [18.0, 4.0], [19.0, 3.0], [20.0, 3.4545454545454546], [21.0, 7.4], [22.0, 4.2857142857142865], [23.0, 5.4], [24.0, 4.5], [25.0, 5.625], [26.0, 3.5], [27.0, 2.3333333333333335], [28.0, 3.625], [29.0, 2.8333333333333335], [30.0, 3.4666666666666663], [31.0, 2.6], [32.0, 3.0], [33.0, 4.6], [34.0, 2.8], [35.0, 3.375], [36.0, 3.3333333333333335], [37.0, 3.4], [38.0, 2.6], [39.0, 2.769230769230769], [40.0, 3.625], [41.0, 2.8888888888888884], [42.0, 2.3333333333333335], [43.0, 7.375], [44.0, 3.25], [45.0, 3.0], [46.0, 2.3333333333333335], [47.0, 2.4375000000000004], [48.0, 2.5714285714285716], [49.0, 3.8666666666666663], [50.0, 3.8571428571428568], [51.0, 2.888888888888889], [52.0, 2.7499999999999996], [53.0, 2.6666666666666665], [54.0, 3.0], [55.0, 3.6333333333333333], [57.0, 3.1666666666666665], [58.0, 2.888888888888889], [59.0, 4.076923076923077], [60.0, 4.333333333333334], [61.0, 2.5714285714285716], [62.0, 4.500000000000001], [63.0, 4.25], [64.0, 2.7857142857142856], [65.0, 3.375], [66.0, 3.0], [67.0, 3.2142857142857144], [68.0, 2.9166666666666665], [69.0, 3.1923076923076925], [70.0, 2.933333333333333], [71.0, 2.8571428571428568], [72.0, 2.6666666666666665], [73.0, 2.8333333333333335], [74.0, 2.0], [75.0, 2.9655172413793105], [76.0, 3.5], [77.0, 5.0], [78.0, 3.0666666666666664], [79.0, 3.2692307692307687], [80.0, 3.333333333333333], [81.0, 2.884615384615385], [82.0, 4.259259259259259], [83.0, 3.0714285714285716], [84.0, 7.428571428571429], [85.0, 3.4615384615384612], [86.0, 4.333333333333333], [87.0, 5.191780821917807], [89.0, 4.333333333333332], [90.0, 4.3170731707317085], [91.0, 4.645161290322581], [88.0, 4.111111111111111], [92.0, 2.6999999999999993], [93.0, 3.444444444444445], [94.0, 2.999999999999999], [95.0, 3.2972972972972974], [96.0, 3.000000000000001], [97.0, 3.407894736842104], [98.0, 2.709677419354838], [99.0, 2.965517241379311], [100.0, 2.9844219732167367], [1.0, 1.0]], "isOverall": false, "label": "HTTP Request -DELETE /hammock/delete/3", "isController": false}, {"data": [[92.30980000000005, 3.153400000000001]], "isOverall": false, "label": "HTTP Request -DELETE /hammock/delete/3-Aggregated", "isController": false}, {"data": [[2.0, 2.0], [3.0, 4.0], [5.0, 4.0], [6.0, 11.666666666666668], [7.0, 14.0], [8.0, 18.0], [9.0, 22.5], [10.0, 32.6], [11.0, 55.99999999999999], [12.0, 53.666666666666664], [13.0, 53.333333333333336], [14.0, 64.0], [15.0, 44.2], [16.0, 37.5], [17.0, 126.0], [18.0, 158.2], [19.0, 128.75], [20.0, 111.7], [21.0, 121.16666666666666], [22.0, 120.5], [23.0, 182.0], [24.0, 171.25], [25.0, 191.125], [26.0, 227.0], [27.0, 116.66666666666666], [28.0, 231.25000000000003], [29.0, 201.83333333333334], [30.0, 208.2142857142857], [31.0, 363.8], [32.0, 346.1428571428571], [33.0, 161.5714285714286], [34.0, 203.0], [35.0, 222.5], [36.0, 138.0], [37.0, 161.6], [38.0, 212.0], [39.0, 130.14285714285714], [40.0, 268.7142857142857], [41.0, 251.39999999999998], [42.0, 261.3333333333333], [43.0, 403.25], [44.0, 301.5], [45.0, 309.66666666666674], [46.0, 155.33333333333331], [47.0, 272.375], [48.0, 189.85714285714286], [49.0, 278.9333333333333], [50.0, 483.35714285714295], [51.0, 321.0], [52.0, 439.0], [53.0, 344.6666666666667], [54.0, 314.75], [55.0, 352.5333333333333], [57.0, 407.0], [58.0, 311.1111111111111], [59.0, 377.0], [60.0, 264.5], [61.0, 475.625], [62.0, 550.1199999999999], [63.0, 656.875], [64.0, 387.7142857142857], [65.0, 341.25000000000006], [66.0, 582.4000000000001], [67.0, 595.5384615384615], [68.0, 503.0909090909091], [69.0, 440.48148148148147], [70.0, 311.92857142857144], [71.0, 319.75], [72.0, 382.4], [73.0, 407.0], [74.0, 610.6666666666666], [75.0, 700.8928571428572], [76.0, 537.0], [77.0, 420.0], [78.0, 550.0], [79.0, 617.6923076923076], [80.0, 743.0833333333334], [81.0, 679.074074074074], [82.0, 699.3461538461539], [83.0, 930.0714285714287], [84.0, 961.0], [85.0, 956.923076923077], [86.0, 739.3333333333333], [87.0, 792.205479452055], [89.0, 554.7619047619048], [90.0, 815.8780487804879], [91.0, 667.258064516129], [88.0, 590.8888888888889], [92.0, 698.0], [93.0, 909.7222222222224], [94.0, 789.1142857142854], [95.0, 781.0810810810809], [96.0, 905.3947368421053], [97.0, 843.2894736842104], [98.0, 702.2903225806451], [99.0, 825.111111111111], [100.0, 773.2244395844722], [1.0, 3.0]], "isOverall": false, "label": "HTTP Request - POST /hammock/update", "isController": false}, {"data": [[92.31280000000007, 719.9913999999997]], "isOverall": false, "label": "HTTP Request - POST /hammock/update-Aggregated", "isController": false}, {"data": [[2.0, 2.0], [3.0, 2.0], [5.0, 3.6666666666666665], [6.0, 5.0], [7.0, 19.0], [8.0, 7.75], [9.0, 17.75], [10.0, 22.5], [11.0, 27.142857142857142], [12.0, 40.5], [13.0, 37.0], [14.0, 36.0], [15.0, 56.0], [16.0, 87.1], [17.0, 93.5], [18.0, 140.5], [19.0, 118.5], [20.0, 85.83333333333333], [21.0, 102.0], [22.0, 98.83333333333334], [23.0, 116.6], [24.0, 104.0], [25.0, 209.77777777777777], [26.0, 175.0], [27.0, 201.0], [28.0, 152.25], [29.0, 244.71428571428572], [30.0, 192.33333333333334], [31.0, 234.66666666666666], [32.0, 198.0], [33.0, 193.75], [34.0, 150.5], [35.0, 191.80000000000004], [36.0, 176.57142857142856], [37.0, 166.0], [38.0, 133.2], [39.0, 144.3076923076923], [41.0, 377.42857142857144], [40.0, 295.0], [42.0, 221.5], [43.0, 231.66666666666666], [44.0, 251.11111111111111], [45.0, 291.33333333333337], [46.0, 200.75], [47.0, 251.8181818181818], [48.0, 143.4], [49.0, 333.07692307692304], [50.0, 462.53846153846155], [51.0, 304.0], [52.0, 363.2], [53.0, 191.33333333333334], [54.0, 306.6666666666667], [55.0, 321.6086956521739], [56.0, 403.8], [57.0, 429.4166666666667], [58.0, 289.0], [59.0, 551.2222222222222], [60.0, 274.0], [61.0, 440.4], [62.0, 538.4615384615385], [63.0, 504.57142857142856], [64.0, 428.9090909090909], [65.0, 420.0833333333333], [66.0, 527.0], [67.0, 543.3846153846155], [68.0, 582.0], [69.0, 461.08333333333337], [70.0, 279.25], [71.0, 463.26666666666665], [72.0, 255.0], [74.0, 466.0], [75.0, 656.2571428571426], [73.0, 554.0], [76.0, 508.0], [78.0, 601.8125], [79.0, 545.0384615384617], [77.0, 620.8], [80.0, 653.2631578947368], [81.0, 643.6333333333333], [82.0, 873.3], [83.0, 1175.0], [84.0, 943.9411764705883], [85.0, 917.3181818181818], [86.0, 294.0], [87.0, 737.8805970149252], [88.0, 733.5624999999999], [89.0, 725.2142857142858], [90.0, 946.4418604651164], [91.0, 880.4166666666665], [92.0, 683.4], [93.0, 865.875], [94.0, 764.3199999999998], [95.0, 761.7105263157894], [97.0, 885.5308641975311], [98.0, 650.0], [99.0, 829.0249999999999], [96.0, 865.6904761904763], [100.0, 864.0049113233282], [1.0, 2.0]], "isOverall": false, "label": "HTTP Request - GET /hammock/find/1", "isController": false}, {"data": [[92.35980000000004, 789.7962000000001]], "isOverall": false, "label": "HTTP Request - GET /hammock/find/1-Aggregated", "isController": false}, {"data": [[2.0, 5.0], [3.0, 6.0], [5.0, 10.0], [6.0, 14.666666666666666], [7.0, 32.5], [8.0, 27.4], [9.0, 40.0], [10.0, 66.75], [11.0, 81.75], [12.0, 91.0], [13.0, 75.0], [14.0, 127.0], [15.0, 90.77777777777779], [16.0, 149.2], [17.0, 145.5], [18.0, 254.5], [19.0, 134.33333333333334], [20.0, 158.66666666666669], [21.0, 123.66666666666667], [22.0, 121.23076923076923], [23.0, 205.5], [24.0, 106.5], [25.0, 218.7142857142857], [26.0, 191.57142857142858], [27.0, 218.33333333333334], [28.0, 192.8], [29.0, 232.14285714285714], [30.0, 240.80000000000004], [31.0, 183.8], [32.0, 243.375], [33.0, 156.44444444444446], [34.0, 118.5], [35.0, 265.8], [36.0, 159.875], [37.0, 232.11111111111111], [38.0, 174.63636363636365], [39.0, 107.6], [40.0, 290.6], [41.0, 377.4], [42.0, 262.5], [43.0, 218.0], [44.0, 310.0], [45.0, 377.5454545454546], [46.0, 240.75], [47.0, 237.60000000000002], [48.0, 193.09999999999997], [49.0, 327.55555555555554], [50.0, 475.4761904761905], [51.0, 409.25], [52.0, 378.5], [53.0, 425.0], [54.0, 455.0], [55.0, 364.19354838709677], [56.0, 339.625], [57.0, 435.8181818181818], [58.0, 257.44444444444446], [59.0, 421.59999999999997], [60.0, 381.0], [61.0, 474.62499999999994], [63.0, 573.3571428571429], [62.0, 564.375], [64.0, 424.0625], [65.0, 391.2857142857143], [66.0, 424.29411764705884], [67.0, 518.0], [68.0, 540.6250000000001], [69.0, 411.0384615384615], [70.0, 502.0], [71.0, 474.8], [72.0, 578.1666666666667], [73.0, 431.77777777777777], [74.0, 426.3333333333333], [75.0, 740.625], [76.0, 526.8333333333334], [77.0, 627.5], [78.0, 477.1111111111111], [79.0, 563.3214285714287], [80.0, 673.8048780487804], [81.0, 681.0714285714287], [82.0, 807.0606060606061], [83.0, 862.6153846153845], [84.0, 738.0], [85.0, 813.5652173913043], [86.0, 629.0], [87.0, 817.4788732394367], [88.0, 693.7777777777776], [89.0, 694.6000000000001], [90.0, 1018.219512195122], [91.0, 858.7083333333334], [92.0, 508.0], [93.0, 813.6388888888891], [94.0, 804.7894736842103], [95.0, 893.6216216216214], [96.0, 753.7142857142858], [97.0, 967.779220779221], [98.0, 858.875], [99.0, 910.0731707317073], [100.0, 797.329055161115], [1.0, 6.0]], "isOverall": false, "label": "HTTP Request - POST /hammock/add", "isController": false}, {"data": [[92.34280000000001, 746.2318000000001]], "isOverall": false, "label": "HTTP Request - POST /hammock/add-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 11955.666666666666, "minX": 1.7368578E12, "maxY": 2.8241089E7, "series": [{"data": [[1.7368578E12, 1.0310498266666668E7], [1.73685798E12, 1.4967112933333334E7], [1.73685792E12, 2.8241089E7], [1.73685786E12, 2.67744895E7]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.7368578E12, 11955.666666666666], [1.73685798E12, 14434.583333333334], [1.73685792E12, 28237.466666666667], [1.73685786E12, 29788.95]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73685798E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 2.8566308243727656, "minX": 1.7368578E12, "maxY": 1104.4903614457846, "series": [{"data": [[1.7368578E12, 752.5644090305447], [1.73685798E12, 965.1303813038116], [1.73685792E12, 1104.4903614457846], [1.73685786E12, 1021.5648252536637]], "isOverall": false, "label": "HTTP Request - GET /hammock/all", "isController": false}, {"data": [[1.7368578E12, 3.3915574963609867], [1.73685798E12, 3.8922018348623877], [1.73685792E12, 2.8566308243727656], [1.73685786E12, 2.977362761743068]], "isOverall": false, "label": "HTTP Request -DELETE /hammock/delete/3", "isController": false}, {"data": [[1.7368578E12, 547.1266375545848], [1.73685798E12, 651.6961009174313], [1.73685792E12, 805.8261648745527], [1.73685786E12, 739.5863044708547]], "isOverall": false, "label": "HTTP Request - POST /hammock/update", "isController": false}, {"data": [[1.7368578E12, 607.5375170532066], [1.73685798E12, 675.9339735894349], [1.73685792E12, 876.939448441248], [1.73685786E12, 836.8448471121196]], "isOverall": false, "label": "HTTP Request - GET /hammock/find/1", "isController": false}, {"data": [[1.7368578E12, 576.4887955182073], [1.73685798E12, 682.1124121779862], [1.73685792E12, 824.0000000000003], [1.73685786E12, 772.1493728620298]], "isOverall": false, "label": "HTTP Request - POST /hammock/add", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73685798E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 2.792712066905616, "minX": 1.7368578E12, "maxY": 1070.5849397590337, "series": [{"data": [[1.7368578E12, 728.0849933598943], [1.73685798E12, 927.431734317344], [1.73685792E12, 1070.5849397590337], [1.73685786E12, 990.0343855693345]], "isOverall": false, "label": "HTTP Request - GET /hammock/all", "isController": false}, {"data": [[1.7368578E12, 3.3318777292576423], [1.73685798E12, 3.770642201834861], [1.73685792E12, 2.792712066905616], [1.73685786E12, 2.899830220713074]], "isOverall": false, "label": "HTTP Request -DELETE /hammock/delete/3", "isController": false}, {"data": [[1.7368578E12, 547.0349344978166], [1.73685798E12, 651.6020642201844], [1.73685792E12, 805.7592592592592], [1.73685786E12, 739.5014148273913]], "isOverall": false, "label": "HTTP Request - POST /hammock/update", "isController": false}, {"data": [[1.7368578E12, 607.4815825375172], [1.73685798E12, 675.8931572629057], [1.73685792E12, 876.876498800959], [1.73685786E12, 836.7848244620599]], "isOverall": false, "label": "HTTP Request - GET /hammock/find/1", "isController": false}, {"data": [[1.7368578E12, 576.4355742296915], [1.73685798E12, 682.0515222482434], [1.73685792E12, 823.917759237188], [1.73685786E12, 772.0838084378552]], "isOverall": false, "label": "HTTP Request - POST /hammock/add", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73685798E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.7368578E12, "maxY": 0.45418326693227135, "series": [{"data": [[1.7368578E12, 0.45418326693227135], [1.73685798E12, 0.0], [1.73685792E12, 6.024096385542184E-4], [1.73685786E12, 0.0236753100338219]], "isOverall": false, "label": "HTTP Request - GET /hammock/all", "isController": false}, {"data": [[1.7368578E12, 0.0], [1.73685798E12, 0.0], [1.73685792E12, 0.013739545997610547], [1.73685786E12, 0.009054895302773074]], "isOverall": false, "label": "HTTP Request -DELETE /hammock/delete/3", "isController": false}, {"data": [[1.7368578E12, 0.0], [1.73685798E12, 0.0], [1.73685792E12, 0.016129032258064523], [1.73685786E12, 0.012450481041312961]], "isOverall": false, "label": "HTTP Request - POST /hammock/update", "isController": false}, {"data": [[1.7368578E12, 0.0], [1.73685798E12, 0.0], [1.73685792E12, 0.023980815347721812], [1.73685786E12, 0.012457531143827857]], "isOverall": false, "label": "HTTP Request - GET /hammock/find/1", "isController": false}, {"data": [[1.7368578E12, 0.0], [1.73685798E12, 0.0], [1.73685792E12, 0.01311084624553039], [1.73685786E12, 0.011972633979475488]], "isOverall": false, "label": "HTTP Request - POST /hammock/add", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73685798E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.7368578E12, "maxY": 4263.0, "series": [{"data": [[1.7368578E12, 3468.0], [1.73685798E12, 3728.0], [1.73685792E12, 3992.0], [1.73685786E12, 4263.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.7368578E12, 3.0], [1.73685798E12, 2.0], [1.73685792E12, 5.0], [1.73685786E12, 5.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.7368578E12, 1359.2000000000003], [1.73685798E12, 1184.0], [1.73685792E12, 1407.9000000000005], [1.73685786E12, 1394.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.7368578E12, 2343.6399999999976], [1.73685798E12, 1870.4299999999998], [1.73685792E12, 2308.1899999999996], [1.73685786E12, 2315.76]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.7368578E12, 578.0], [1.73685798E12, 733.0], [1.73685792E12, 877.0], [1.73685786E12, 822.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.7368578E12, 1566.6], [1.73685798E12, 1381.35], [1.73685792E12, 1669.9499999999998], [1.73685786E12, 1638.0]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73685798E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 2.0, "minX": 52.0, "maxY": 1481.0, "series": [{"data": [[52.0, 1233.5], [61.0, 1261.0], [73.0, 1011.0], [78.0, 1182.5], [85.0, 844.0], [86.0, 859.0], [87.0, 29.0], [90.0, 1089.5], [88.0, 1153.0], [89.0, 1199.0], [91.0, 427.5], [92.0, 1194.0], [94.0, 1333.0], [95.0, 1252.0], [96.0, 992.0], [97.0, 951.0], [102.0, 1003.0], [103.0, 1004.0], [107.0, 840.0], [106.0, 877.5], [108.0, 985.0], [111.0, 850.0], [110.0, 964.5], [113.0, 1481.0], [115.0, 958.0], [112.0, 969.0], [114.0, 1101.0], [118.0, 1033.0], [119.0, 1049.5], [123.0, 768.0], [120.0, 878.0], [127.0, 859.5], [124.0, 1057.0], [126.0, 909.0], [131.0, 483.0], [135.0, 848.0], [133.0, 909.0], [134.0, 961.0], [130.0, 1031.5], [128.0, 814.0], [129.0, 711.0], [136.0, 780.5], [143.0, 897.0], [137.0, 1032.5], [141.0, 858.0], [140.0, 981.0], [138.0, 867.0], [139.0, 672.5], [145.0, 52.0], [151.0, 704.5], [149.0, 837.5], [144.0, 782.5], [147.0, 791.0], [148.0, 891.0], [150.0, 1053.5], [156.0, 815.5], [158.0, 827.0], [159.0, 725.0], [155.0, 820.0], [154.0, 833.0], [152.0, 876.0], [153.0, 768.0], [164.0, 730.0], [161.0, 759.0], [165.0, 770.0], [162.0, 746.0], [163.0, 858.5], [166.0, 816.5], [167.0, 784.0], [168.0, 663.0], [169.0, 645.0], [175.0, 733.5], [171.0, 804.0], [181.0, 721.0], [180.0, 740.0], [179.0, 810.0], [178.0, 853.0], [177.0, 668.5], [191.0, 296.0], [184.0, 665.0], [187.0, 710.0], [193.0, 713.0], [192.0, 678.0], [196.0, 722.0], [200.0, 767.0], [211.0, 320.0], [209.0, 323.5], [220.0, 263.0], [224.0, 326.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[52.0, 2.5], [61.0, 3.0], [73.0, 2.0], [78.0, 3.0], [85.0, 2.5], [86.0, 2.0], [87.0, 3.0], [90.0, 3.0], [88.0, 3.0], [89.0, 3.0], [91.0, 3.0], [92.0, 3.0], [94.0, 3.0], [95.0, 2.0], [96.0, 3.0], [97.0, 3.0], [102.0, 3.0], [103.0, 3.0], [107.0, 3.0], [106.0, 2.0], [108.0, 3.0], [111.0, 3.0], [110.0, 3.5], [113.0, 3.0], [115.0, 3.0], [112.0, 3.0], [114.0, 2.0], [118.0, 3.0], [119.0, 3.0], [123.0, 3.0], [120.0, 3.0], [127.0, 2.0], [124.0, 3.0], [126.0, 3.0], [131.0, 3.0], [135.0, 3.0], [133.0, 3.0], [134.0, 3.0], [130.0, 3.0], [128.0, 3.0], [129.0, 3.0], [136.0, 3.0], [143.0, 3.0], [137.0, 3.0], [141.0, 3.0], [140.0, 3.0], [138.0, 3.0], [139.0, 3.0], [145.0, 4.0], [151.0, 3.0], [149.0, 3.0], [144.0, 3.0], [147.0, 3.0], [148.0, 2.0], [150.0, 2.0], [156.0, 3.0], [158.0, 3.0], [159.0, 2.0], [155.0, 3.0], [154.0, 3.0], [152.0, 3.0], [153.0, 3.0], [164.0, 3.0], [161.0, 3.0], [165.0, 3.0], [162.0, 2.0], [163.0, 2.0], [166.0, 2.0], [167.0, 2.0], [168.0, 3.0], [169.0, 3.0], [175.0, 2.0], [171.0, 3.0], [181.0, 3.0], [180.0, 2.0], [179.0, 3.0], [178.0, 2.0], [177.0, 2.0], [191.0, 3.0], [184.0, 2.0], [187.0, 2.0], [193.0, 2.0], [192.0, 2.0], [196.0, 2.0], [200.0, 2.0], [211.0, 3.0], [209.0, 3.0], [220.0, 2.0], [224.0, 2.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 224.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 2.0, "minX": 52.0, "maxY": 1481.0, "series": [{"data": [[52.0, 1233.0], [61.0, 1219.5], [73.0, 1011.0], [78.0, 1172.0], [85.0, 829.0], [86.0, 841.0], [87.0, 29.0], [90.0, 1061.0], [88.0, 1151.0], [89.0, 1199.0], [91.0, 427.0], [92.0, 1194.0], [94.0, 1326.0], [95.0, 1252.0], [96.0, 984.0], [97.0, 950.0], [102.0, 1003.0], [103.0, 999.5], [107.0, 794.0], [106.0, 856.0], [108.0, 985.0], [111.0, 843.0], [110.0, 957.5], [113.0, 1481.0], [115.0, 948.0], [112.0, 969.0], [114.0, 1101.0], [118.0, 1018.0], [119.0, 1049.5], [123.0, 759.0], [120.0, 874.0], [127.0, 853.0], [124.0, 1049.5], [126.0, 909.0], [131.0, 483.0], [135.0, 841.0], [133.0, 907.0], [134.0, 960.0], [130.0, 1024.0], [128.0, 794.0], [129.0, 711.0], [136.0, 775.0], [143.0, 895.5], [137.0, 1019.5], [141.0, 849.0], [140.0, 981.0], [138.0, 867.0], [139.0, 672.5], [145.0, 52.0], [151.0, 703.0], [149.0, 835.5], [144.0, 767.0], [147.0, 791.0], [148.0, 891.0], [150.0, 1052.0], [156.0, 804.5], [158.0, 815.0], [159.0, 724.5], [155.0, 813.0], [154.0, 833.0], [152.0, 876.0], [153.0, 768.0], [164.0, 724.5], [161.0, 758.0], [165.0, 770.0], [162.0, 745.0], [163.0, 841.5], [166.0, 809.0], [167.0, 775.0], [168.0, 661.0], [169.0, 645.0], [175.0, 726.0], [171.0, 789.0], [181.0, 715.0], [180.0, 740.0], [179.0, 796.5], [178.0, 827.0], [177.0, 662.0], [191.0, 282.0], [184.0, 665.0], [187.0, 672.0], [193.0, 713.0], [192.0, 678.0], [196.0, 717.0], [200.0, 767.0], [211.0, 316.0], [209.0, 316.5], [220.0, 262.0], [224.0, 316.5]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[52.0, 2.5], [61.0, 3.0], [73.0, 2.0], [78.0, 3.0], [85.0, 2.5], [86.0, 2.0], [87.0, 2.5], [90.0, 3.0], [88.0, 3.0], [89.0, 3.0], [91.0, 3.0], [92.0, 3.0], [94.0, 3.0], [95.0, 2.0], [96.0, 3.0], [97.0, 3.0], [102.0, 3.0], [103.0, 3.0], [107.0, 3.0], [106.0, 2.0], [108.0, 3.0], [111.0, 3.0], [110.0, 3.5], [113.0, 3.0], [115.0, 3.0], [112.0, 3.0], [114.0, 2.0], [118.0, 3.0], [119.0, 3.0], [123.0, 3.0], [120.0, 3.0], [127.0, 2.0], [124.0, 3.0], [126.0, 3.0], [131.0, 3.0], [135.0, 3.0], [133.0, 2.5], [134.0, 3.0], [130.0, 2.0], [128.0, 3.0], [129.0, 3.0], [136.0, 3.0], [143.0, 3.0], [137.0, 3.0], [141.0, 3.0], [140.0, 3.0], [138.0, 3.0], [139.0, 3.0], [145.0, 4.0], [151.0, 3.0], [149.0, 2.0], [144.0, 3.0], [147.0, 3.0], [148.0, 2.0], [150.0, 2.0], [156.0, 3.0], [158.0, 3.0], [159.0, 2.0], [155.0, 3.0], [154.0, 3.0], [152.0, 3.0], [153.0, 3.0], [164.0, 3.0], [161.0, 3.0], [165.0, 3.0], [162.0, 2.0], [163.0, 2.0], [166.0, 2.0], [167.0, 2.0], [168.0, 2.0], [169.0, 3.0], [175.0, 2.0], [171.0, 3.0], [181.0, 2.0], [180.0, 2.0], [179.0, 3.0], [178.0, 2.0], [177.0, 2.0], [191.0, 3.0], [184.0, 2.0], [187.0, 2.0], [193.0, 2.0], [192.0, 2.0], [196.0, 2.0], [200.0, 2.0], [211.0, 2.0], [209.0, 3.0], [220.0, 2.0], [224.0, 2.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 224.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 61.233333333333334, "minX": 1.7368578E12, "maxY": 147.13333333333333, "series": [{"data": [[1.7368578E12, 61.233333333333334], [1.73685798E12, 69.11666666666666], [1.73685792E12, 139.18333333333334], [1.73685786E12, 147.13333333333333]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73685798E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 11.45, "minX": 1.7368578E12, "maxY": 88.45, "series": [{"data": [[1.7368578E12, 36.21666666666667], [1.73685798E12, 41.96666666666667], [1.73685792E12, 83.36666666666666], [1.73685786E12, 88.45]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.7368578E12, 11.9], [1.73685798E12, 14.233333333333333], [1.73685792E12, 27.966666666666665], [1.73685786E12, 29.233333333333334]], "isOverall": false, "label": "201", "isController": false}, {"data": [[1.7368578E12, 11.45], [1.73685798E12, 14.533333333333333], [1.73685792E12, 27.9], [1.73685786E12, 29.45]], "isOverall": false, "label": "404", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73685798E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 11.45, "minX": 1.7368578E12, "maxY": 29.566666666666666, "series": [{"data": [[1.7368578E12, 12.216666666666667], [1.73685798E12, 13.883333333333333], [1.73685792E12, 27.8], [1.73685786E12, 29.433333333333334]], "isOverall": false, "label": "HTTP Request - GET /hammock/find/1-success", "isController": false}, {"data": [[1.7368578E12, 12.55], [1.73685798E12, 13.55], [1.73685792E12, 27.666666666666668], [1.73685786E12, 29.566666666666666]], "isOverall": false, "label": "HTTP Request - GET /hammock/all-success", "isController": false}, {"data": [[1.7368578E12, 11.45], [1.73685798E12, 14.533333333333333], [1.73685792E12, 27.9], [1.73685786E12, 29.45]], "isOverall": false, "label": "HTTP Request -DELETE /hammock/delete/3-failure", "isController": false}, {"data": [[1.7368578E12, 11.9], [1.73685798E12, 14.233333333333333], [1.73685792E12, 27.966666666666665], [1.73685786E12, 29.233333333333334]], "isOverall": false, "label": "HTTP Request - POST /hammock/add-success", "isController": false}, {"data": [[1.7368578E12, 11.45], [1.73685798E12, 14.533333333333333], [1.73685792E12, 27.9], [1.73685786E12, 29.45]], "isOverall": false, "label": "HTTP Request - POST /hammock/update-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73685798E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 11.45, "minX": 1.7368578E12, "maxY": 117.68333333333334, "series": [{"data": [[1.7368578E12, 48.11666666666667], [1.73685798E12, 56.2], [1.73685792E12, 111.33333333333333], [1.73685786E12, 117.68333333333334]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.7368578E12, 11.45], [1.73685798E12, 14.533333333333333], [1.73685792E12, 27.9], [1.73685786E12, 29.45]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73685798E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

