/*
   Licensed to the Apache Software Foundation (ASF) under one or more
   contributor license agreements.  See the NOTICE file distributed with
   this work for additional information regarding copyright ownership.
   The ASF licenses this file to You under the Apache License, Version 2.0
   (the "License"); you may not use this file except in compliance with
   the License.  You may obtain a copy of the License at

       http://www.apache.org/licenses/LICENSE-2.0

   Unless required by applicable law or agreed to in writing, software
   distributed under the License is distributed on an "AS IS" BASIS,
   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
   See the License for the specific language governing permissions and
   limitations under the License.
*/
$(document).ready(function() {

    $(".click-title").mouseenter( function(    e){
        e.preventDefault();
        this.style.cursor="pointer";
    });
    $(".click-title").mousedown( function(event){
        event.preventDefault();
    });

    // Ugly code while this script is shared among several pages
    try{
        refreshHitsPerSecond(true);
    } catch(e){}
    try{
        refreshResponseTimeOverTime(true);
    } catch(e){}
    try{
        refreshResponseTimePercentiles();
    } catch(e){}
});


var responseTimePercentilesInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 5221.0, "series": [{"data": [[0.0, 73.0], [0.1, 95.0], [0.2, 99.0], [0.3, 101.0], [0.4, 104.0], [0.5, 105.0], [0.6, 107.0], [0.7, 110.0], [0.8, 113.0], [0.9, 114.0], [1.0, 116.0], [1.1, 119.0], [1.2, 120.0], [1.3, 120.0], [1.4, 121.0], [1.5, 122.0], [1.6, 123.0], [1.7, 124.0], [1.8, 124.0], [1.9, 125.0], [2.0, 127.0], [2.1, 127.0], [2.2, 129.0], [2.3, 130.0], [2.4, 131.0], [2.5, 131.0], [2.6, 132.0], [2.7, 133.0], [2.8, 133.0], [2.9, 134.0], [3.0, 135.0], [3.1, 136.0], [3.2, 136.0], [3.3, 138.0], [3.4, 139.0], [3.5, 139.0], [3.6, 140.0], [3.7, 141.0], [3.8, 141.0], [3.9, 142.0], [4.0, 143.0], [4.1, 143.0], [4.2, 144.0], [4.3, 145.0], [4.4, 146.0], [4.5, 147.0], [4.6, 148.0], [4.7, 149.0], [4.8, 149.0], [4.9, 150.0], [5.0, 151.0], [5.1, 152.0], [5.2, 152.0], [5.3, 153.0], [5.4, 154.0], [5.5, 155.0], [5.6, 155.0], [5.7, 157.0], [5.8, 157.0], [5.9, 157.0], [6.0, 160.0], [6.1, 160.0], [6.2, 161.0], [6.3, 163.0], [6.4, 163.0], [6.5, 165.0], [6.6, 165.0], [6.7, 166.0], [6.8, 167.0], [6.9, 170.0], [7.0, 171.0], [7.1, 172.0], [7.2, 174.0], [7.3, 175.0], [7.4, 175.0], [7.5, 176.0], [7.6, 178.0], [7.7, 179.0], [7.8, 180.0], [7.9, 182.0], [8.0, 183.0], [8.1, 185.0], [8.2, 186.0], [8.3, 187.0], [8.4, 190.0], [8.5, 191.0], [8.6, 193.0], [8.7, 194.0], [8.8, 197.0], [8.9, 198.0], [9.0, 199.0], [9.1, 201.0], [9.2, 204.0], [9.3, 207.0], [9.4, 208.0], [9.5, 210.0], [9.6, 213.0], [9.7, 217.0], [9.8, 223.0], [9.9, 226.0], [10.0, 230.0], [10.1, 249.0], [10.2, 256.0], [10.3, 262.0], [10.4, 266.0], [10.5, 272.0], [10.6, 303.0], [10.7, 312.0], [10.8, 332.0], [10.9, 349.0], [11.0, 357.0], [11.1, 372.0], [11.2, 381.0], [11.3, 396.0], [11.4, 411.0], [11.5, 417.0], [11.6, 436.0], [11.7, 445.0], [11.8, 451.0], [11.9, 458.0], [12.0, 464.0], [12.1, 470.0], [12.2, 478.0], [12.3, 482.0], [12.4, 490.0], [12.5, 499.0], [12.6, 505.0], [12.7, 507.0], [12.8, 509.0], [12.9, 513.0], [13.0, 514.0], [13.1, 517.0], [13.2, 518.0], [13.3, 519.0], [13.4, 520.0], [13.5, 521.0], [13.6, 522.0], [13.7, 524.0], [13.8, 525.0], [13.9, 526.0], [14.0, 527.0], [14.1, 530.0], [14.2, 531.0], [14.3, 532.0], [14.4, 533.0], [14.5, 534.0], [14.6, 536.0], [14.7, 537.0], [14.8, 538.0], [14.9, 539.0], [15.0, 541.0], [15.1, 542.0], [15.2, 543.0], [15.3, 546.0], [15.4, 547.0], [15.5, 547.0], [15.6, 548.0], [15.7, 550.0], [15.8, 551.0], [15.9, 552.0], [16.0, 553.0], [16.1, 554.0], [16.2, 555.0], [16.3, 556.0], [16.4, 557.0], [16.5, 558.0], [16.6, 559.0], [16.7, 561.0], [16.8, 562.0], [16.9, 562.0], [17.0, 563.0], [17.1, 563.0], [17.2, 566.0], [17.3, 567.0], [17.4, 568.0], [17.5, 569.0], [17.6, 569.0], [17.7, 571.0], [17.8, 572.0], [17.9, 573.0], [18.0, 574.0], [18.1, 575.0], [18.2, 577.0], [18.3, 577.0], [18.4, 578.0], [18.5, 579.0], [18.6, 580.0], [18.7, 581.0], [18.8, 582.0], [18.9, 582.0], [19.0, 583.0], [19.1, 584.0], [19.2, 585.0], [19.3, 585.0], [19.4, 585.0], [19.5, 585.0], [19.6, 586.0], [19.7, 586.0], [19.8, 586.0], [19.9, 587.0], [20.0, 587.0], [20.1, 588.0], [20.2, 589.0], [20.3, 589.0], [20.4, 590.0], [20.5, 591.0], [20.6, 592.0], [20.7, 592.0], [20.8, 593.0], [20.9, 594.0], [21.0, 594.0], [21.1, 595.0], [21.2, 595.0], [21.3, 597.0], [21.4, 597.0], [21.5, 597.0], [21.6, 598.0], [21.7, 598.0], [21.8, 599.0], [21.9, 600.0], [22.0, 600.0], [22.1, 601.0], [22.2, 602.0], [22.3, 602.0], [22.4, 603.0], [22.5, 604.0], [22.6, 604.0], [22.7, 604.0], [22.8, 605.0], [22.9, 605.0], [23.0, 606.0], [23.1, 607.0], [23.2, 607.0], [23.3, 607.0], [23.4, 608.0], [23.5, 609.0], [23.6, 609.0], [23.7, 610.0], [23.8, 610.0], [23.9, 611.0], [24.0, 611.0], [24.1, 612.0], [24.2, 613.0], [24.3, 613.0], [24.4, 614.0], [24.5, 614.0], [24.6, 615.0], [24.7, 615.0], [24.8, 616.0], [24.9, 616.0], [25.0, 617.0], [25.1, 617.0], [25.2, 618.0], [25.3, 619.0], [25.4, 619.0], [25.5, 620.0], [25.6, 621.0], [25.7, 622.0], [25.8, 622.0], [25.9, 623.0], [26.0, 623.0], [26.1, 623.0], [26.2, 623.0], [26.3, 624.0], [26.4, 624.0], [26.5, 625.0], [26.6, 626.0], [26.7, 626.0], [26.8, 626.0], [26.9, 627.0], [27.0, 627.0], [27.1, 628.0], [27.2, 628.0], [27.3, 629.0], [27.4, 629.0], [27.5, 629.0], [27.6, 630.0], [27.7, 631.0], [27.8, 631.0], [27.9, 631.0], [28.0, 632.0], [28.1, 632.0], [28.2, 632.0], [28.3, 633.0], [28.4, 634.0], [28.5, 634.0], [28.6, 635.0], [28.7, 636.0], [28.8, 637.0], [28.9, 637.0], [29.0, 638.0], [29.1, 638.0], [29.2, 639.0], [29.3, 639.0], [29.4, 639.0], [29.5, 640.0], [29.6, 640.0], [29.7, 641.0], [29.8, 641.0], [29.9, 642.0], [30.0, 642.0], [30.1, 643.0], [30.2, 643.0], [30.3, 643.0], [30.4, 644.0], [30.5, 645.0], [30.6, 645.0], [30.7, 645.0], [30.8, 645.0], [30.9, 646.0], [31.0, 646.0], [31.1, 647.0], [31.2, 647.0], [31.3, 647.0], [31.4, 647.0], [31.5, 648.0], [31.6, 648.0], [31.7, 648.0], [31.8, 649.0], [31.9, 649.0], [32.0, 650.0], [32.1, 650.0], [32.2, 651.0], [32.3, 652.0], [32.4, 653.0], [32.5, 653.0], [32.6, 654.0], [32.7, 654.0], [32.8, 655.0], [32.9, 655.0], [33.0, 656.0], [33.1, 656.0], [33.2, 657.0], [33.3, 657.0], [33.4, 658.0], [33.5, 658.0], [33.6, 658.0], [33.7, 659.0], [33.8, 659.0], [33.9, 660.0], [34.0, 660.0], [34.1, 661.0], [34.2, 661.0], [34.3, 661.0], [34.4, 662.0], [34.5, 663.0], [34.6, 663.0], [34.7, 664.0], [34.8, 664.0], [34.9, 665.0], [35.0, 666.0], [35.1, 666.0], [35.2, 667.0], [35.3, 667.0], [35.4, 667.0], [35.5, 668.0], [35.6, 668.0], [35.7, 669.0], [35.8, 669.0], [35.9, 669.0], [36.0, 670.0], [36.1, 670.0], [36.2, 670.0], [36.3, 670.0], [36.4, 671.0], [36.5, 672.0], [36.6, 672.0], [36.7, 673.0], [36.8, 673.0], [36.9, 674.0], [37.0, 675.0], [37.1, 675.0], [37.2, 675.0], [37.3, 676.0], [37.4, 677.0], [37.5, 678.0], [37.6, 678.0], [37.7, 678.0], [37.8, 679.0], [37.9, 679.0], [38.0, 680.0], [38.1, 680.0], [38.2, 680.0], [38.3, 681.0], [38.4, 682.0], [38.5, 682.0], [38.6, 682.0], [38.7, 683.0], [38.8, 683.0], [38.9, 684.0], [39.0, 684.0], [39.1, 685.0], [39.2, 685.0], [39.3, 686.0], [39.4, 686.0], [39.5, 687.0], [39.6, 687.0], [39.7, 688.0], [39.8, 689.0], [39.9, 690.0], [40.0, 690.0], [40.1, 691.0], [40.2, 691.0], [40.3, 692.0], [40.4, 692.0], [40.5, 693.0], [40.6, 693.0], [40.7, 694.0], [40.8, 694.0], [40.9, 695.0], [41.0, 695.0], [41.1, 696.0], [41.2, 696.0], [41.3, 697.0], [41.4, 697.0], [41.5, 698.0], [41.6, 698.0], [41.7, 698.0], [41.8, 699.0], [41.9, 699.0], [42.0, 700.0], [42.1, 700.0], [42.2, 700.0], [42.3, 701.0], [42.4, 702.0], [42.5, 702.0], [42.6, 702.0], [42.7, 703.0], [42.8, 703.0], [42.9, 704.0], [43.0, 704.0], [43.1, 704.0], [43.2, 705.0], [43.3, 705.0], [43.4, 705.0], [43.5, 706.0], [43.6, 706.0], [43.7, 707.0], [43.8, 707.0], [43.9, 708.0], [44.0, 708.0], [44.1, 708.0], [44.2, 709.0], [44.3, 709.0], [44.4, 710.0], [44.5, 710.0], [44.6, 710.0], [44.7, 711.0], [44.8, 712.0], [44.9, 712.0], [45.0, 712.0], [45.1, 713.0], [45.2, 713.0], [45.3, 713.0], [45.4, 713.0], [45.5, 714.0], [45.6, 714.0], [45.7, 714.0], [45.8, 715.0], [45.9, 715.0], [46.0, 716.0], [46.1, 716.0], [46.2, 716.0], [46.3, 717.0], [46.4, 717.0], [46.5, 718.0], [46.6, 718.0], [46.7, 719.0], [46.8, 719.0], [46.9, 719.0], [47.0, 720.0], [47.1, 720.0], [47.2, 720.0], [47.3, 721.0], [47.4, 721.0], [47.5, 722.0], [47.6, 722.0], [47.7, 722.0], [47.8, 723.0], [47.9, 724.0], [48.0, 724.0], [48.1, 725.0], [48.2, 726.0], [48.3, 726.0], [48.4, 726.0], [48.5, 727.0], [48.6, 727.0], [48.7, 727.0], [48.8, 728.0], [48.9, 728.0], [49.0, 729.0], [49.1, 729.0], [49.2, 729.0], [49.3, 730.0], [49.4, 730.0], [49.5, 731.0], [49.6, 731.0], [49.7, 732.0], [49.8, 732.0], [49.9, 733.0], [50.0, 733.0], [50.1, 733.0], [50.2, 734.0], [50.3, 735.0], [50.4, 735.0], [50.5, 735.0], [50.6, 736.0], [50.7, 736.0], [50.8, 736.0], [50.9, 737.0], [51.0, 737.0], [51.1, 737.0], [51.2, 738.0], [51.3, 738.0], [51.4, 739.0], [51.5, 740.0], [51.6, 740.0], [51.7, 741.0], [51.8, 741.0], [51.9, 741.0], [52.0, 742.0], [52.1, 742.0], [52.2, 742.0], [52.3, 743.0], [52.4, 743.0], [52.5, 744.0], [52.6, 744.0], [52.7, 745.0], [52.8, 745.0], [52.9, 745.0], [53.0, 746.0], [53.1, 746.0], [53.2, 747.0], [53.3, 747.0], [53.4, 748.0], [53.5, 748.0], [53.6, 749.0], [53.7, 749.0], [53.8, 750.0], [53.9, 750.0], [54.0, 750.0], [54.1, 751.0], [54.2, 751.0], [54.3, 751.0], [54.4, 751.0], [54.5, 752.0], [54.6, 752.0], [54.7, 752.0], [54.8, 753.0], [54.9, 754.0], [55.0, 755.0], [55.1, 755.0], [55.2, 756.0], [55.3, 756.0], [55.4, 756.0], [55.5, 757.0], [55.6, 757.0], [55.7, 757.0], [55.8, 758.0], [55.9, 758.0], [56.0, 759.0], [56.1, 759.0], [56.2, 760.0], [56.3, 760.0], [56.4, 761.0], [56.5, 761.0], [56.6, 762.0], [56.7, 762.0], [56.8, 762.0], [56.9, 763.0], [57.0, 763.0], [57.1, 764.0], [57.2, 764.0], [57.3, 765.0], [57.4, 765.0], [57.5, 766.0], [57.6, 766.0], [57.7, 767.0], [57.8, 767.0], [57.9, 768.0], [58.0, 769.0], [58.1, 769.0], [58.2, 770.0], [58.3, 771.0], [58.4, 771.0], [58.5, 772.0], [58.6, 773.0], [58.7, 773.0], [58.8, 774.0], [58.9, 774.0], [59.0, 775.0], [59.1, 775.0], [59.2, 777.0], [59.3, 777.0], [59.4, 778.0], [59.5, 778.0], [59.6, 779.0], [59.7, 780.0], [59.8, 780.0], [59.9, 781.0], [60.0, 782.0], [60.1, 782.0], [60.2, 782.0], [60.3, 783.0], [60.4, 784.0], [60.5, 785.0], [60.6, 785.0], [60.7, 785.0], [60.8, 786.0], [60.9, 787.0], [61.0, 787.0], [61.1, 789.0], [61.2, 789.0], [61.3, 790.0], [61.4, 791.0], [61.5, 792.0], [61.6, 793.0], [61.7, 793.0], [61.8, 794.0], [61.9, 794.0], [62.0, 795.0], [62.1, 796.0], [62.2, 796.0], [62.3, 796.0], [62.4, 797.0], [62.5, 797.0], [62.6, 798.0], [62.7, 798.0], [62.8, 799.0], [62.9, 799.0], [63.0, 800.0], [63.1, 801.0], [63.2, 801.0], [63.3, 802.0], [63.4, 802.0], [63.5, 803.0], [63.6, 803.0], [63.7, 804.0], [63.8, 804.0], [63.9, 806.0], [64.0, 806.0], [64.1, 807.0], [64.2, 807.0], [64.3, 807.0], [64.4, 808.0], [64.5, 808.0], [64.6, 809.0], [64.7, 809.0], [64.8, 810.0], [64.9, 810.0], [65.0, 811.0], [65.1, 811.0], [65.2, 812.0], [65.3, 813.0], [65.4, 813.0], [65.5, 814.0], [65.6, 814.0], [65.7, 815.0], [65.8, 815.0], [65.9, 816.0], [66.0, 816.0], [66.1, 817.0], [66.2, 817.0], [66.3, 818.0], [66.4, 819.0], [66.5, 820.0], [66.6, 820.0], [66.7, 821.0], [66.8, 822.0], [66.9, 822.0], [67.0, 823.0], [67.1, 824.0], [67.2, 825.0], [67.3, 825.0], [67.4, 826.0], [67.5, 826.0], [67.6, 827.0], [67.7, 827.0], [67.8, 828.0], [67.9, 828.0], [68.0, 829.0], [68.1, 830.0], [68.2, 830.0], [68.3, 831.0], [68.4, 832.0], [68.5, 832.0], [68.6, 833.0], [68.7, 834.0], [68.8, 834.0], [68.9, 835.0], [69.0, 836.0], [69.1, 836.0], [69.2, 837.0], [69.3, 837.0], [69.4, 838.0], [69.5, 839.0], [69.6, 839.0], [69.7, 840.0], [69.8, 840.0], [69.9, 841.0], [70.0, 841.0], [70.1, 842.0], [70.2, 842.0], [70.3, 843.0], [70.4, 843.0], [70.5, 844.0], [70.6, 845.0], [70.7, 846.0], [70.8, 847.0], [70.9, 848.0], [71.0, 848.0], [71.1, 848.0], [71.2, 849.0], [71.3, 850.0], [71.4, 851.0], [71.5, 851.0], [71.6, 852.0], [71.7, 853.0], [71.8, 854.0], [71.9, 854.0], [72.0, 856.0], [72.1, 856.0], [72.2, 857.0], [72.3, 858.0], [72.4, 859.0], [72.5, 860.0], [72.6, 860.0], [72.7, 861.0], [72.8, 863.0], [72.9, 864.0], [73.0, 864.0], [73.1, 866.0], [73.2, 867.0], [73.3, 867.0], [73.4, 868.0], [73.5, 870.0], [73.6, 870.0], [73.7, 871.0], [73.8, 871.0], [73.9, 873.0], [74.0, 874.0], [74.1, 874.0], [74.2, 875.0], [74.3, 876.0], [74.4, 876.0], [74.5, 878.0], [74.6, 878.0], [74.7, 879.0], [74.8, 880.0], [74.9, 882.0], [75.0, 883.0], [75.1, 884.0], [75.2, 885.0], [75.3, 886.0], [75.4, 887.0], [75.5, 888.0], [75.6, 889.0], [75.7, 889.0], [75.8, 891.0], [75.9, 892.0], [76.0, 893.0], [76.1, 894.0], [76.2, 894.0], [76.3, 895.0], [76.4, 896.0], [76.5, 899.0], [76.6, 899.0], [76.7, 900.0], [76.8, 900.0], [76.9, 901.0], [77.0, 903.0], [77.1, 903.0], [77.2, 904.0], [77.3, 906.0], [77.4, 906.0], [77.5, 907.0], [77.6, 908.0], [77.7, 909.0], [77.8, 909.0], [77.9, 911.0], [78.0, 913.0], [78.1, 914.0], [78.2, 915.0], [78.3, 916.0], [78.4, 918.0], [78.5, 919.0], [78.6, 919.0], [78.7, 921.0], [78.8, 922.0], [78.9, 923.0], [79.0, 924.0], [79.1, 926.0], [79.2, 929.0], [79.3, 932.0], [79.4, 933.0], [79.5, 934.0], [79.6, 936.0], [79.7, 937.0], [79.8, 938.0], [79.9, 939.0], [80.0, 941.0], [80.1, 943.0], [80.2, 945.0], [80.3, 947.0], [80.4, 947.0], [80.5, 951.0], [80.6, 953.0], [80.7, 956.0], [80.8, 958.0], [80.9, 962.0], [81.0, 964.0], [81.1, 967.0], [81.2, 967.0], [81.3, 971.0], [81.4, 975.0], [81.5, 978.0], [81.6, 979.0], [81.7, 980.0], [81.8, 985.0], [81.9, 989.0], [82.0, 991.0], [82.1, 995.0], [82.2, 998.0], [82.3, 1001.0], [82.4, 1006.0], [82.5, 1010.0], [82.6, 1011.0], [82.7, 1017.0], [82.8, 1022.0], [82.9, 1026.0], [83.0, 1030.0], [83.1, 1035.0], [83.2, 1037.0], [83.3, 1042.0], [83.4, 1045.0], [83.5, 1049.0], [83.6, 1051.0], [83.7, 1054.0], [83.8, 1059.0], [83.9, 1067.0], [84.0, 1071.0], [84.1, 1075.0], [84.2, 1081.0], [84.3, 1085.0], [84.4, 1088.0], [84.5, 1092.0], [84.6, 1097.0], [84.7, 1100.0], [84.8, 1102.0], [84.9, 1104.0], [85.0, 1106.0], [85.1, 1110.0], [85.2, 1113.0], [85.3, 1116.0], [85.4, 1119.0], [85.5, 1121.0], [85.6, 1125.0], [85.7, 1129.0], [85.8, 1133.0], [85.9, 1137.0], [86.0, 1140.0], [86.1, 1145.0], [86.2, 1147.0], [86.3, 1148.0], [86.4, 1150.0], [86.5, 1152.0], [86.6, 1155.0], [86.7, 1157.0], [86.8, 1160.0], [86.9, 1166.0], [87.0, 1170.0], [87.1, 1171.0], [87.2, 1172.0], [87.3, 1175.0], [87.4, 1178.0], [87.5, 1181.0], [87.6, 1182.0], [87.7, 1185.0], [87.8, 1188.0], [87.9, 1190.0], [88.0, 1195.0], [88.1, 1198.0], [88.2, 1200.0], [88.3, 1201.0], [88.4, 1206.0], [88.5, 1210.0], [88.6, 1212.0], [88.7, 1214.0], [88.8, 1215.0], [88.9, 1218.0], [89.0, 1222.0], [89.1, 1224.0], [89.2, 1226.0], [89.3, 1230.0], [89.4, 1233.0], [89.5, 1236.0], [89.6, 1238.0], [89.7, 1239.0], [89.8, 1244.0], [89.9, 1247.0], [90.0, 1252.0], [90.1, 1255.0], [90.2, 1258.0], [90.3, 1264.0], [90.4, 1265.0], [90.5, 1269.0], [90.6, 1271.0], [90.7, 1273.0], [90.8, 1276.0], [90.9, 1279.0], [91.0, 1282.0], [91.1, 1286.0], [91.2, 1289.0], [91.3, 1292.0], [91.4, 1296.0], [91.5, 1303.0], [91.6, 1305.0], [91.7, 1308.0], [91.8, 1311.0], [91.9, 1315.0], [92.0, 1320.0], [92.1, 1328.0], [92.2, 1331.0], [92.3, 1337.0], [92.4, 1342.0], [92.5, 1346.0], [92.6, 1349.0], [92.7, 1353.0], [92.8, 1357.0], [92.9, 1360.0], [93.0, 1366.0], [93.1, 1369.0], [93.2, 1374.0], [93.3, 1379.0], [93.4, 1386.0], [93.5, 1392.0], [93.6, 1395.0], [93.7, 1400.0], [93.8, 1403.0], [93.9, 1409.0], [94.0, 1412.0], [94.1, 1416.0], [94.2, 1421.0], [94.3, 1431.0], [94.4, 1436.0], [94.5, 1442.0], [94.6, 1446.0], [94.7, 1451.0], [94.8, 1454.0], [94.9, 1459.0], [95.0, 1464.0], [95.1, 1473.0], [95.2, 1484.0], [95.3, 1489.0], [95.4, 1501.0], [95.5, 1505.0], [95.6, 1509.0], [95.7, 1517.0], [95.8, 1526.0], [95.9, 1537.0], [96.0, 1538.0], [96.1, 1542.0], [96.2, 1550.0], [96.3, 1558.0], [96.4, 1569.0], [96.5, 1573.0], [96.6, 1598.0], [96.7, 1614.0], [96.8, 1622.0], [96.9, 1655.0], [97.0, 1673.0], [97.1, 1684.0], [97.2, 1697.0], [97.3, 1712.0], [97.4, 1736.0], [97.5, 1747.0], [97.6, 1755.0], [97.7, 1776.0], [97.8, 1806.0], [97.9, 1827.0], [98.0, 1853.0], [98.1, 1879.0], [98.2, 1904.0], [98.3, 1923.0], [98.4, 1952.0], [98.5, 1967.0], [98.6, 1982.0], [98.7, 2002.0], [98.8, 2021.0], [98.9, 2056.0], [99.0, 2083.0], [99.1, 2127.0], [99.2, 2155.0], [99.3, 2207.0], [99.4, 2243.0], [99.5, 2289.0], [99.6, 2350.0], [99.7, 2423.0], [99.8, 2656.0], [99.9, 2697.0]], "isOverall": false, "label": "HTTP Request - GET /hammock/all", "isController": false}, {"data": [[0.0, 1.0], [0.1, 1.0], [0.2, 1.0], [0.3, 1.0], [0.4, 1.0], [0.5, 1.0], [0.6, 1.0], [0.7, 2.0], [0.8, 2.0], [0.9, 2.0], [1.0, 2.0], [1.1, 2.0], [1.2, 2.0], [1.3, 2.0], [1.4, 2.0], [1.5, 2.0], [1.6, 2.0], [1.7, 2.0], [1.8, 2.0], [1.9, 2.0], [2.0, 2.0], [2.1, 2.0], [2.2, 2.0], [2.3, 2.0], [2.4, 2.0], [2.5, 2.0], [2.6, 2.0], [2.7, 2.0], [2.8, 2.0], [2.9, 2.0], [3.0, 2.0], [3.1, 2.0], [3.2, 2.0], [3.3, 2.0], [3.4, 2.0], [3.5, 2.0], [3.6, 2.0], [3.7, 2.0], [3.8, 2.0], [3.9, 2.0], [4.0, 2.0], [4.1, 2.0], [4.2, 2.0], [4.3, 2.0], [4.4, 2.0], [4.5, 2.0], [4.6, 2.0], [4.7, 2.0], [4.8, 2.0], [4.9, 2.0], [5.0, 2.0], [5.1, 2.0], [5.2, 2.0], [5.3, 2.0], [5.4, 2.0], [5.5, 2.0], [5.6, 2.0], [5.7, 2.0], [5.8, 2.0], [5.9, 2.0], [6.0, 2.0], [6.1, 2.0], [6.2, 2.0], [6.3, 2.0], [6.4, 2.0], [6.5, 2.0], [6.6, 2.0], [6.7, 2.0], [6.8, 2.0], [6.9, 2.0], [7.0, 2.0], [7.1, 2.0], [7.2, 2.0], [7.3, 2.0], [7.4, 2.0], [7.5, 2.0], [7.6, 2.0], [7.7, 2.0], [7.8, 2.0], [7.9, 2.0], [8.0, 2.0], [8.1, 2.0], [8.2, 2.0], [8.3, 2.0], [8.4, 2.0], [8.5, 2.0], [8.6, 2.0], [8.7, 2.0], [8.8, 2.0], [8.9, 2.0], [9.0, 2.0], [9.1, 2.0], [9.2, 2.0], [9.3, 2.0], [9.4, 2.0], [9.5, 2.0], [9.6, 2.0], [9.7, 2.0], [9.8, 2.0], [9.9, 2.0], [10.0, 2.0], [10.1, 2.0], [10.2, 2.0], [10.3, 2.0], [10.4, 2.0], [10.5, 2.0], [10.6, 2.0], [10.7, 2.0], [10.8, 2.0], [10.9, 2.0], [11.0, 2.0], [11.1, 2.0], [11.2, 2.0], [11.3, 2.0], [11.4, 2.0], [11.5, 2.0], [11.6, 2.0], [11.7, 2.0], [11.8, 2.0], [11.9, 2.0], [12.0, 2.0], [12.1, 2.0], [12.2, 2.0], [12.3, 2.0], [12.4, 2.0], [12.5, 2.0], [12.6, 2.0], [12.7, 2.0], [12.8, 2.0], [12.9, 2.0], [13.0, 2.0], [13.1, 2.0], [13.2, 2.0], [13.3, 2.0], [13.4, 2.0], [13.5, 2.0], [13.6, 2.0], [13.7, 2.0], [13.8, 2.0], [13.9, 2.0], [14.0, 2.0], [14.1, 2.0], [14.2, 2.0], [14.3, 2.0], [14.4, 2.0], [14.5, 2.0], [14.6, 2.0], [14.7, 2.0], [14.8, 2.0], [14.9, 2.0], [15.0, 2.0], [15.1, 2.0], [15.2, 2.0], [15.3, 2.0], [15.4, 2.0], [15.5, 2.0], [15.6, 2.0], [15.7, 2.0], [15.8, 2.0], [15.9, 2.0], [16.0, 2.0], [16.1, 2.0], [16.2, 2.0], [16.3, 2.0], [16.4, 2.0], [16.5, 2.0], [16.6, 2.0], [16.7, 2.0], [16.8, 2.0], [16.9, 2.0], [17.0, 2.0], [17.1, 2.0], [17.2, 2.0], [17.3, 2.0], [17.4, 2.0], [17.5, 2.0], [17.6, 2.0], [17.7, 2.0], [17.8, 2.0], [17.9, 2.0], [18.0, 2.0], [18.1, 2.0], [18.2, 2.0], [18.3, 2.0], [18.4, 2.0], [18.5, 2.0], [18.6, 2.0], [18.7, 2.0], [18.8, 2.0], [18.9, 2.0], [19.0, 2.0], [19.1, 2.0], [19.2, 2.0], [19.3, 2.0], [19.4, 2.0], [19.5, 2.0], [19.6, 2.0], [19.7, 2.0], [19.8, 2.0], [19.9, 2.0], [20.0, 2.0], [20.1, 2.0], [20.2, 2.0], [20.3, 2.0], [20.4, 2.0], [20.5, 2.0], [20.6, 2.0], [20.7, 2.0], [20.8, 2.0], [20.9, 2.0], [21.0, 2.0], [21.1, 2.0], [21.2, 2.0], [21.3, 2.0], [21.4, 2.0], [21.5, 2.0], [21.6, 2.0], [21.7, 2.0], [21.8, 2.0], [21.9, 2.0], [22.0, 2.0], [22.1, 2.0], [22.2, 2.0], [22.3, 2.0], [22.4, 2.0], [22.5, 2.0], [22.6, 2.0], [22.7, 2.0], [22.8, 2.0], [22.9, 2.0], [23.0, 2.0], [23.1, 2.0], [23.2, 2.0], [23.3, 2.0], [23.4, 2.0], [23.5, 2.0], [23.6, 2.0], [23.7, 2.0], [23.8, 2.0], [23.9, 2.0], [24.0, 2.0], [24.1, 2.0], [24.2, 2.0], [24.3, 2.0], [24.4, 2.0], [24.5, 2.0], [24.6, 2.0], [24.7, 2.0], [24.8, 2.0], [24.9, 2.0], [25.0, 2.0], [25.1, 2.0], [25.2, 2.0], [25.3, 2.0], [25.4, 3.0], [25.5, 3.0], [25.6, 3.0], [25.7, 3.0], [25.8, 3.0], [25.9, 3.0], [26.0, 3.0], [26.1, 3.0], [26.2, 3.0], [26.3, 3.0], [26.4, 3.0], [26.5, 3.0], [26.6, 3.0], [26.7, 3.0], [26.8, 3.0], [26.9, 3.0], [27.0, 3.0], [27.1, 3.0], [27.2, 3.0], [27.3, 3.0], [27.4, 3.0], [27.5, 3.0], [27.6, 3.0], [27.7, 3.0], [27.8, 3.0], [27.9, 3.0], [28.0, 3.0], [28.1, 3.0], [28.2, 3.0], [28.3, 3.0], [28.4, 3.0], [28.5, 3.0], [28.6, 3.0], [28.7, 3.0], [28.8, 3.0], [28.9, 3.0], [29.0, 3.0], [29.1, 3.0], [29.2, 3.0], [29.3, 3.0], [29.4, 3.0], [29.5, 3.0], [29.6, 3.0], [29.7, 3.0], [29.8, 3.0], [29.9, 3.0], [30.0, 3.0], [30.1, 3.0], [30.2, 3.0], [30.3, 3.0], [30.4, 3.0], [30.5, 3.0], [30.6, 3.0], [30.7, 3.0], [30.8, 3.0], [30.9, 3.0], [31.0, 3.0], [31.1, 3.0], [31.2, 3.0], [31.3, 3.0], [31.4, 3.0], [31.5, 3.0], [31.6, 3.0], [31.7, 3.0], [31.8, 3.0], [31.9, 3.0], [32.0, 3.0], [32.1, 3.0], [32.2, 3.0], [32.3, 3.0], [32.4, 3.0], [32.5, 3.0], [32.6, 3.0], [32.7, 3.0], [32.8, 3.0], [32.9, 3.0], [33.0, 3.0], [33.1, 3.0], [33.2, 3.0], [33.3, 3.0], [33.4, 3.0], [33.5, 3.0], [33.6, 3.0], [33.7, 3.0], [33.8, 3.0], [33.9, 3.0], [34.0, 3.0], [34.1, 3.0], [34.2, 3.0], [34.3, 3.0], [34.4, 3.0], [34.5, 3.0], [34.6, 3.0], [34.7, 3.0], [34.8, 3.0], [34.9, 3.0], [35.0, 3.0], [35.1, 3.0], [35.2, 3.0], [35.3, 3.0], [35.4, 3.0], [35.5, 3.0], [35.6, 3.0], [35.7, 3.0], [35.8, 3.0], [35.9, 3.0], [36.0, 3.0], [36.1, 3.0], [36.2, 3.0], [36.3, 3.0], [36.4, 3.0], [36.5, 3.0], [36.6, 3.0], [36.7, 3.0], [36.8, 3.0], [36.9, 3.0], [37.0, 3.0], [37.1, 3.0], [37.2, 3.0], [37.3, 3.0], [37.4, 3.0], [37.5, 3.0], [37.6, 3.0], [37.7, 3.0], [37.8, 3.0], [37.9, 3.0], [38.0, 3.0], [38.1, 3.0], [38.2, 3.0], [38.3, 3.0], [38.4, 3.0], [38.5, 3.0], [38.6, 3.0], [38.7, 3.0], [38.8, 3.0], [38.9, 3.0], [39.0, 3.0], [39.1, 3.0], [39.2, 3.0], [39.3, 3.0], [39.4, 3.0], [39.5, 3.0], [39.6, 3.0], [39.7, 3.0], [39.8, 3.0], [39.9, 3.0], [40.0, 3.0], [40.1, 3.0], [40.2, 3.0], [40.3, 3.0], [40.4, 3.0], [40.5, 3.0], [40.6, 3.0], [40.7, 3.0], [40.8, 3.0], [40.9, 3.0], [41.0, 3.0], [41.1, 3.0], [41.2, 3.0], [41.3, 3.0], [41.4, 3.0], [41.5, 3.0], [41.6, 3.0], [41.7, 3.0], [41.8, 3.0], [41.9, 3.0], [42.0, 3.0], [42.1, 3.0], [42.2, 3.0], [42.3, 3.0], [42.4, 3.0], [42.5, 3.0], [42.6, 3.0], [42.7, 3.0], [42.8, 3.0], [42.9, 3.0], [43.0, 3.0], [43.1, 3.0], [43.2, 3.0], [43.3, 3.0], [43.4, 3.0], [43.5, 3.0], [43.6, 3.0], [43.7, 3.0], [43.8, 3.0], [43.9, 3.0], [44.0, 3.0], [44.1, 3.0], [44.2, 3.0], [44.3, 3.0], [44.4, 3.0], [44.5, 3.0], [44.6, 3.0], [44.7, 3.0], [44.8, 3.0], [44.9, 3.0], [45.0, 3.0], [45.1, 3.0], [45.2, 3.0], [45.3, 3.0], [45.4, 3.0], [45.5, 3.0], [45.6, 3.0], [45.7, 3.0], [45.8, 3.0], [45.9, 3.0], [46.0, 3.0], [46.1, 3.0], [46.2, 3.0], [46.3, 3.0], [46.4, 3.0], [46.5, 3.0], [46.6, 3.0], [46.7, 3.0], [46.8, 3.0], [46.9, 3.0], [47.0, 3.0], [47.1, 3.0], [47.2, 3.0], [47.3, 3.0], [47.4, 3.0], [47.5, 3.0], [47.6, 3.0], [47.7, 3.0], [47.8, 3.0], [47.9, 3.0], [48.0, 3.0], [48.1, 3.0], [48.2, 3.0], [48.3, 3.0], [48.4, 3.0], [48.5, 3.0], [48.6, 3.0], [48.7, 3.0], [48.8, 3.0], [48.9, 3.0], [49.0, 3.0], [49.1, 3.0], [49.2, 3.0], [49.3, 3.0], [49.4, 3.0], [49.5, 3.0], [49.6, 3.0], [49.7, 3.0], [49.8, 3.0], [49.9, 3.0], [50.0, 3.0], [50.1, 3.0], [50.2, 3.0], [50.3, 3.0], [50.4, 3.0], [50.5, 3.0], [50.6, 3.0], [50.7, 3.0], [50.8, 3.0], [50.9, 3.0], [51.0, 3.0], [51.1, 3.0], [51.2, 3.0], [51.3, 3.0], [51.4, 3.0], [51.5, 3.0], [51.6, 3.0], [51.7, 3.0], [51.8, 3.0], [51.9, 3.0], [52.0, 3.0], [52.1, 3.0], [52.2, 3.0], [52.3, 3.0], [52.4, 3.0], [52.5, 3.0], [52.6, 3.0], [52.7, 3.0], [52.8, 3.0], [52.9, 3.0], [53.0, 3.0], [53.1, 3.0], [53.2, 3.0], [53.3, 3.0], [53.4, 3.0], [53.5, 3.0], [53.6, 3.0], [53.7, 3.0], [53.8, 3.0], [53.9, 3.0], [54.0, 3.0], [54.1, 3.0], [54.2, 3.0], [54.3, 3.0], [54.4, 3.0], [54.5, 3.0], [54.6, 3.0], [54.7, 3.0], [54.8, 3.0], [54.9, 3.0], [55.0, 3.0], [55.1, 3.0], [55.2, 3.0], [55.3, 3.0], [55.4, 3.0], [55.5, 3.0], [55.6, 3.0], [55.7, 3.0], [55.8, 3.0], [55.9, 3.0], [56.0, 3.0], [56.1, 3.0], [56.2, 3.0], [56.3, 3.0], [56.4, 3.0], [56.5, 3.0], [56.6, 3.0], [56.7, 3.0], [56.8, 3.0], [56.9, 3.0], [57.0, 3.0], [57.1, 3.0], [57.2, 3.0], [57.3, 3.0], [57.4, 3.0], [57.5, 3.0], [57.6, 3.0], [57.7, 3.0], [57.8, 3.0], [57.9, 3.0], [58.0, 3.0], [58.1, 3.0], [58.2, 3.0], [58.3, 3.0], [58.4, 3.0], [58.5, 3.0], [58.6, 3.0], [58.7, 3.0], [58.8, 3.0], [58.9, 3.0], [59.0, 3.0], [59.1, 3.0], [59.2, 3.0], [59.3, 3.0], [59.4, 3.0], [59.5, 3.0], [59.6, 3.0], [59.7, 3.0], [59.8, 3.0], [59.9, 4.0], [60.0, 4.0], [60.1, 4.0], [60.2, 4.0], [60.3, 4.0], [60.4, 4.0], [60.5, 4.0], [60.6, 4.0], [60.7, 4.0], [60.8, 4.0], [60.9, 4.0], [61.0, 4.0], [61.1, 4.0], [61.2, 4.0], [61.3, 4.0], [61.4, 4.0], [61.5, 4.0], [61.6, 4.0], [61.7, 4.0], [61.8, 4.0], [61.9, 4.0], [62.0, 4.0], [62.1, 4.0], [62.2, 4.0], [62.3, 4.0], [62.4, 4.0], [62.5, 4.0], [62.6, 4.0], [62.7, 4.0], [62.8, 4.0], [62.9, 4.0], [63.0, 4.0], [63.1, 4.0], [63.2, 4.0], [63.3, 4.0], [63.4, 4.0], [63.5, 4.0], [63.6, 4.0], [63.7, 4.0], [63.8, 4.0], [63.9, 4.0], [64.0, 4.0], [64.1, 4.0], [64.2, 4.0], [64.3, 4.0], [64.4, 4.0], [64.5, 4.0], [64.6, 4.0], [64.7, 4.0], [64.8, 4.0], [64.9, 4.0], [65.0, 4.0], [65.1, 4.0], [65.2, 4.0], [65.3, 4.0], [65.4, 4.0], [65.5, 4.0], [65.6, 4.0], [65.7, 4.0], [65.8, 4.0], [65.9, 4.0], [66.0, 4.0], [66.1, 4.0], [66.2, 4.0], [66.3, 4.0], [66.4, 4.0], [66.5, 4.0], [66.6, 4.0], [66.7, 4.0], [66.8, 4.0], [66.9, 4.0], [67.0, 4.0], [67.1, 4.0], [67.2, 4.0], [67.3, 4.0], [67.4, 4.0], [67.5, 4.0], [67.6, 4.0], [67.7, 4.0], [67.8, 4.0], [67.9, 4.0], [68.0, 4.0], [68.1, 4.0], [68.2, 4.0], [68.3, 4.0], [68.4, 4.0], [68.5, 4.0], [68.6, 4.0], [68.7, 4.0], [68.8, 4.0], [68.9, 4.0], [69.0, 4.0], [69.1, 4.0], [69.2, 4.0], [69.3, 4.0], [69.4, 4.0], [69.5, 4.0], [69.6, 4.0], [69.7, 4.0], [69.8, 4.0], [69.9, 4.0], [70.0, 4.0], [70.1, 4.0], [70.2, 4.0], [70.3, 4.0], [70.4, 4.0], [70.5, 4.0], [70.6, 4.0], [70.7, 4.0], [70.8, 4.0], [70.9, 4.0], [71.0, 4.0], [71.1, 4.0], [71.2, 4.0], [71.3, 4.0], [71.4, 4.0], [71.5, 4.0], [71.6, 4.0], [71.7, 4.0], [71.8, 4.0], [71.9, 4.0], [72.0, 4.0], [72.1, 4.0], [72.2, 4.0], [72.3, 4.0], [72.4, 4.0], [72.5, 4.0], [72.6, 4.0], [72.7, 4.0], [72.8, 4.0], [72.9, 4.0], [73.0, 4.0], [73.1, 4.0], [73.2, 4.0], [73.3, 4.0], [73.4, 4.0], [73.5, 4.0], [73.6, 4.0], [73.7, 4.0], [73.8, 4.0], [73.9, 4.0], [74.0, 4.0], [74.1, 4.0], [74.2, 4.0], [74.3, 4.0], [74.4, 4.0], [74.5, 4.0], [74.6, 4.0], [74.7, 4.0], [74.8, 4.0], [74.9, 4.0], [75.0, 4.0], [75.1, 4.0], [75.2, 4.0], [75.3, 4.0], [75.4, 4.0], [75.5, 4.0], [75.6, 4.0], [75.7, 4.0], [75.8, 4.0], [75.9, 4.0], [76.0, 4.0], [76.1, 4.0], [76.2, 4.0], [76.3, 4.0], [76.4, 4.0], [76.5, 4.0], [76.6, 4.0], [76.7, 4.0], [76.8, 4.0], [76.9, 4.0], [77.0, 4.0], [77.1, 5.0], [77.2, 5.0], [77.3, 5.0], [77.4, 5.0], [77.5, 5.0], [77.6, 5.0], [77.7, 5.0], [77.8, 5.0], [77.9, 5.0], [78.0, 5.0], [78.1, 5.0], [78.2, 5.0], [78.3, 5.0], [78.4, 5.0], [78.5, 5.0], [78.6, 5.0], [78.7, 5.0], [78.8, 5.0], [78.9, 5.0], [79.0, 5.0], [79.1, 5.0], [79.2, 5.0], [79.3, 5.0], [79.4, 5.0], [79.5, 5.0], [79.6, 5.0], [79.7, 5.0], [79.8, 5.0], [79.9, 5.0], [80.0, 5.0], [80.1, 5.0], [80.2, 5.0], [80.3, 5.0], [80.4, 5.0], [80.5, 5.0], [80.6, 5.0], [80.7, 5.0], [80.8, 5.0], [80.9, 5.0], [81.0, 5.0], [81.1, 5.0], [81.2, 5.0], [81.3, 5.0], [81.4, 5.0], [81.5, 5.0], [81.6, 5.0], [81.7, 5.0], [81.8, 5.0], [81.9, 5.0], [82.0, 5.0], [82.1, 5.0], [82.2, 5.0], [82.3, 5.0], [82.4, 5.0], [82.5, 5.0], [82.6, 5.0], [82.7, 5.0], [82.8, 5.0], [82.9, 5.0], [83.0, 5.0], [83.1, 5.0], [83.2, 5.0], [83.3, 5.0], [83.4, 5.0], [83.5, 5.0], [83.6, 5.0], [83.7, 5.0], [83.8, 5.0], [83.9, 5.0], [84.0, 5.0], [84.1, 5.0], [84.2, 5.0], [84.3, 5.0], [84.4, 5.0], [84.5, 5.0], [84.6, 5.0], [84.7, 5.0], [84.8, 5.0], [84.9, 5.0], [85.0, 5.0], [85.1, 5.0], [85.2, 5.0], [85.3, 5.0], [85.4, 5.0], [85.5, 5.0], [85.6, 5.0], [85.7, 5.0], [85.8, 6.0], [85.9, 6.0], [86.0, 6.0], [86.1, 6.0], [86.2, 6.0], [86.3, 6.0], [86.4, 6.0], [86.5, 6.0], [86.6, 6.0], [86.7, 6.0], [86.8, 6.0], [86.9, 6.0], [87.0, 6.0], [87.1, 6.0], [87.2, 6.0], [87.3, 6.0], [87.4, 6.0], [87.5, 6.0], [87.6, 6.0], [87.7, 6.0], [87.8, 6.0], [87.9, 6.0], [88.0, 6.0], [88.1, 6.0], [88.2, 6.0], [88.3, 6.0], [88.4, 6.0], [88.5, 6.0], [88.6, 6.0], [88.7, 6.0], [88.8, 6.0], [88.9, 6.0], [89.0, 6.0], [89.1, 6.0], [89.2, 6.0], [89.3, 6.0], [89.4, 6.0], [89.5, 6.0], [89.6, 6.0], [89.7, 6.0], [89.8, 6.0], [89.9, 6.0], [90.0, 6.0], [90.1, 6.0], [90.2, 6.0], [90.3, 6.0], [90.4, 6.0], [90.5, 6.0], [90.6, 6.0], [90.7, 7.0], [90.8, 7.0], [90.9, 7.0], [91.0, 7.0], [91.1, 7.0], [91.2, 7.0], [91.3, 7.0], [91.4, 7.0], [91.5, 7.0], [91.6, 7.0], [91.7, 7.0], [91.8, 7.0], [91.9, 7.0], [92.0, 7.0], [92.1, 7.0], [92.2, 7.0], [92.3, 7.0], [92.4, 7.0], [92.5, 7.0], [92.6, 7.0], [92.7, 7.0], [92.8, 7.0], [92.9, 7.0], [93.0, 7.0], [93.1, 7.0], [93.2, 7.0], [93.3, 8.0], [93.4, 8.0], [93.5, 8.0], [93.6, 8.0], [93.7, 8.0], [93.8, 8.0], [93.9, 8.0], [94.0, 8.0], [94.1, 8.0], [94.2, 8.0], [94.3, 8.0], [94.4, 8.0], [94.5, 8.0], [94.6, 8.0], [94.7, 8.0], [94.8, 8.0], [94.9, 8.0], [95.0, 8.0], [95.1, 9.0], [95.2, 9.0], [95.3, 9.0], [95.4, 9.0], [95.5, 9.0], [95.6, 9.0], [95.7, 9.0], [95.8, 9.0], [95.9, 9.0], [96.0, 9.0], [96.1, 9.0], [96.2, 9.0], [96.3, 10.0], [96.4, 10.0], [96.5, 10.0], [96.6, 10.0], [96.7, 10.0], [96.8, 10.0], [96.9, 10.0], [97.0, 10.0], [97.1, 11.0], [97.2, 11.0], [97.3, 11.0], [97.4, 11.0], [97.5, 11.0], [97.6, 12.0], [97.7, 12.0], [97.8, 12.0], [97.9, 13.0], [98.0, 13.0], [98.1, 13.0], [98.2, 14.0], [98.3, 14.0], [98.4, 14.0], [98.5, 15.0], [98.6, 15.0], [98.7, 16.0], [98.8, 16.0], [98.9, 18.0], [99.0, 18.0], [99.1, 19.0], [99.2, 20.0], [99.3, 22.0], [99.4, 23.0], [99.5, 24.0], [99.6, 25.0], [99.7, 29.0], [99.8, 38.0], [99.9, 44.0]], "isOverall": false, "label": "HTTP Request -DELETE /hammock/delete/3", "isController": false}, {"data": [[0.0, 3.0], [0.1, 4.0], [0.2, 5.0], [0.3, 5.0], [0.4, 6.0], [0.5, 6.0], [0.6, 7.0], [0.7, 7.0], [0.8, 8.0], [0.9, 8.0], [1.0, 9.0], [1.1, 9.0], [1.2, 9.0], [1.3, 10.0], [1.4, 10.0], [1.5, 11.0], [1.6, 11.0], [1.7, 11.0], [1.8, 12.0], [1.9, 12.0], [2.0, 12.0], [2.1, 12.0], [2.2, 13.0], [2.3, 13.0], [2.4, 13.0], [2.5, 13.0], [2.6, 13.0], [2.7, 14.0], [2.8, 14.0], [2.9, 14.0], [3.0, 14.0], [3.1, 15.0], [3.2, 15.0], [3.3, 15.0], [3.4, 16.0], [3.5, 16.0], [3.6, 16.0], [3.7, 16.0], [3.8, 17.0], [3.9, 17.0], [4.0, 17.0], [4.1, 17.0], [4.2, 17.0], [4.3, 18.0], [4.4, 18.0], [4.5, 18.0], [4.6, 19.0], [4.7, 19.0], [4.8, 19.0], [4.9, 19.0], [5.0, 20.0], [5.1, 20.0], [5.2, 20.0], [5.3, 20.0], [5.4, 21.0], [5.5, 21.0], [5.6, 21.0], [5.7, 21.0], [5.8, 21.0], [5.9, 21.0], [6.0, 22.0], [6.1, 22.0], [6.2, 22.0], [6.3, 22.0], [6.4, 23.0], [6.5, 23.0], [6.6, 23.0], [6.7, 23.0], [6.8, 23.0], [6.9, 24.0], [7.0, 24.0], [7.1, 24.0], [7.2, 24.0], [7.3, 24.0], [7.4, 25.0], [7.5, 25.0], [7.6, 25.0], [7.7, 25.0], [7.8, 25.0], [7.9, 25.0], [8.0, 25.0], [8.1, 25.0], [8.2, 26.0], [8.3, 26.0], [8.4, 26.0], [8.5, 26.0], [8.6, 26.0], [8.7, 26.0], [8.8, 27.0], [8.9, 27.0], [9.0, 27.0], [9.1, 27.0], [9.2, 27.0], [9.3, 27.0], [9.4, 28.0], [9.5, 28.0], [9.6, 28.0], [9.7, 28.0], [9.8, 29.0], [9.9, 29.0], [10.0, 29.0], [10.1, 29.0], [10.2, 30.0], [10.3, 30.0], [10.4, 30.0], [10.5, 30.0], [10.6, 30.0], [10.7, 30.0], [10.8, 30.0], [10.9, 30.0], [11.0, 31.0], [11.1, 31.0], [11.2, 31.0], [11.3, 31.0], [11.4, 31.0], [11.5, 32.0], [11.6, 32.0], [11.7, 33.0], [11.8, 33.0], [11.9, 33.0], [12.0, 34.0], [12.1, 34.0], [12.2, 34.0], [12.3, 34.0], [12.4, 34.0], [12.5, 34.0], [12.6, 35.0], [12.7, 35.0], [12.8, 35.0], [12.9, 35.0], [13.0, 35.0], [13.1, 35.0], [13.2, 36.0], [13.3, 36.0], [13.4, 36.0], [13.5, 36.0], [13.6, 37.0], [13.7, 37.0], [13.8, 37.0], [13.9, 38.0], [14.0, 38.0], [14.1, 39.0], [14.2, 39.0], [14.3, 39.0], [14.4, 40.0], [14.5, 40.0], [14.6, 40.0], [14.7, 40.0], [14.8, 41.0], [14.9, 41.0], [15.0, 42.0], [15.1, 42.0], [15.2, 42.0], [15.3, 42.0], [15.4, 43.0], [15.5, 43.0], [15.6, 43.0], [15.7, 44.0], [15.8, 44.0], [15.9, 44.0], [16.0, 45.0], [16.1, 45.0], [16.2, 45.0], [16.3, 46.0], [16.4, 46.0], [16.5, 47.0], [16.6, 47.0], [16.7, 48.0], [16.8, 48.0], [16.9, 48.0], [17.0, 49.0], [17.1, 50.0], [17.2, 51.0], [17.3, 51.0], [17.4, 51.0], [17.5, 52.0], [17.6, 52.0], [17.7, 52.0], [17.8, 53.0], [17.9, 54.0], [18.0, 56.0], [18.1, 57.0], [18.2, 58.0], [18.3, 59.0], [18.4, 60.0], [18.5, 60.0], [18.6, 61.0], [18.7, 63.0], [18.8, 64.0], [18.9, 65.0], [19.0, 67.0], [19.1, 67.0], [19.2, 69.0], [19.3, 70.0], [19.4, 72.0], [19.5, 73.0], [19.6, 82.0], [19.7, 87.0], [19.8, 91.0], [19.9, 99.0], [20.0, 102.0], [20.1, 108.0], [20.2, 111.0], [20.3, 115.0], [20.4, 119.0], [20.5, 124.0], [20.6, 134.0], [20.7, 151.0], [20.8, 165.0], [20.9, 171.0], [21.0, 191.0], [21.1, 203.0], [21.2, 213.0], [21.3, 225.0], [21.4, 234.0], [21.5, 243.0], [21.6, 255.0], [21.7, 261.0], [21.8, 270.0], [21.9, 280.0], [22.0, 295.0], [22.1, 308.0], [22.2, 320.0], [22.3, 329.0], [22.4, 336.0], [22.5, 339.0], [22.6, 344.0], [22.7, 351.0], [22.8, 356.0], [22.9, 361.0], [23.0, 368.0], [23.1, 371.0], [23.2, 373.0], [23.3, 379.0], [23.4, 384.0], [23.5, 388.0], [23.6, 391.0], [23.7, 393.0], [23.8, 398.0], [23.9, 399.0], [24.0, 401.0], [24.1, 404.0], [24.2, 409.0], [24.3, 412.0], [24.4, 414.0], [24.5, 416.0], [24.6, 417.0], [24.7, 418.0], [24.8, 419.0], [24.9, 421.0], [25.0, 422.0], [25.1, 424.0], [25.2, 426.0], [25.3, 427.0], [25.4, 429.0], [25.5, 430.0], [25.6, 431.0], [25.7, 431.0], [25.8, 432.0], [25.9, 433.0], [26.0, 434.0], [26.1, 435.0], [26.2, 437.0], [26.3, 438.0], [26.4, 439.0], [26.5, 439.0], [26.6, 440.0], [26.7, 442.0], [26.8, 443.0], [26.9, 444.0], [27.0, 445.0], [27.1, 446.0], [27.2, 447.0], [27.3, 449.0], [27.4, 450.0], [27.5, 451.0], [27.6, 452.0], [27.7, 453.0], [27.8, 455.0], [27.9, 455.0], [28.0, 456.0], [28.1, 457.0], [28.2, 458.0], [28.3, 459.0], [28.4, 460.0], [28.5, 461.0], [28.6, 462.0], [28.7, 463.0], [28.8, 464.0], [28.9, 464.0], [29.0, 465.0], [29.1, 466.0], [29.2, 467.0], [29.3, 467.0], [29.4, 468.0], [29.5, 468.0], [29.6, 470.0], [29.7, 470.0], [29.8, 471.0], [29.9, 471.0], [30.0, 472.0], [30.1, 472.0], [30.2, 473.0], [30.3, 474.0], [30.4, 474.0], [30.5, 475.0], [30.6, 476.0], [30.7, 477.0], [30.8, 478.0], [30.9, 479.0], [31.0, 479.0], [31.1, 480.0], [31.2, 481.0], [31.3, 482.0], [31.4, 483.0], [31.5, 483.0], [31.6, 484.0], [31.7, 484.0], [31.8, 485.0], [31.9, 486.0], [32.0, 487.0], [32.1, 488.0], [32.2, 488.0], [32.3, 489.0], [32.4, 490.0], [32.5, 490.0], [32.6, 491.0], [32.7, 491.0], [32.8, 491.0], [32.9, 492.0], [33.0, 492.0], [33.1, 493.0], [33.2, 494.0], [33.3, 495.0], [33.4, 495.0], [33.5, 496.0], [33.6, 496.0], [33.7, 496.0], [33.8, 497.0], [33.9, 497.0], [34.0, 498.0], [34.1, 499.0], [34.2, 499.0], [34.3, 500.0], [34.4, 501.0], [34.5, 501.0], [34.6, 502.0], [34.7, 503.0], [34.8, 503.0], [34.9, 504.0], [35.0, 504.0], [35.1, 504.0], [35.2, 505.0], [35.3, 506.0], [35.4, 506.0], [35.5, 506.0], [35.6, 507.0], [35.7, 507.0], [35.8, 508.0], [35.9, 508.0], [36.0, 510.0], [36.1, 510.0], [36.2, 511.0], [36.3, 511.0], [36.4, 512.0], [36.5, 512.0], [36.6, 513.0], [36.7, 513.0], [36.8, 514.0], [36.9, 514.0], [37.0, 514.0], [37.1, 515.0], [37.2, 515.0], [37.3, 516.0], [37.4, 516.0], [37.5, 517.0], [37.6, 518.0], [37.7, 518.0], [37.8, 519.0], [37.9, 519.0], [38.0, 520.0], [38.1, 521.0], [38.2, 521.0], [38.3, 522.0], [38.4, 522.0], [38.5, 523.0], [38.6, 524.0], [38.7, 524.0], [38.8, 524.0], [38.9, 525.0], [39.0, 525.0], [39.1, 526.0], [39.2, 526.0], [39.3, 527.0], [39.4, 527.0], [39.5, 528.0], [39.6, 528.0], [39.7, 529.0], [39.8, 529.0], [39.9, 530.0], [40.0, 531.0], [40.1, 532.0], [40.2, 532.0], [40.3, 533.0], [40.4, 533.0], [40.5, 533.0], [40.6, 534.0], [40.7, 534.0], [40.8, 534.0], [40.9, 535.0], [41.0, 535.0], [41.1, 536.0], [41.2, 536.0], [41.3, 536.0], [41.4, 537.0], [41.5, 538.0], [41.6, 538.0], [41.7, 538.0], [41.8, 539.0], [41.9, 539.0], [42.0, 539.0], [42.1, 540.0], [42.2, 541.0], [42.3, 541.0], [42.4, 542.0], [42.5, 542.0], [42.6, 543.0], [42.7, 543.0], [42.8, 543.0], [42.9, 544.0], [43.0, 544.0], [43.1, 544.0], [43.2, 545.0], [43.3, 545.0], [43.4, 546.0], [43.5, 546.0], [43.6, 546.0], [43.7, 547.0], [43.8, 548.0], [43.9, 548.0], [44.0, 549.0], [44.1, 549.0], [44.2, 550.0], [44.3, 550.0], [44.4, 551.0], [44.5, 551.0], [44.6, 551.0], [44.7, 552.0], [44.8, 552.0], [44.9, 553.0], [45.0, 553.0], [45.1, 553.0], [45.2, 554.0], [45.3, 554.0], [45.4, 554.0], [45.5, 555.0], [45.6, 555.0], [45.7, 556.0], [45.8, 556.0], [45.9, 556.0], [46.0, 557.0], [46.1, 557.0], [46.2, 557.0], [46.3, 558.0], [46.4, 559.0], [46.5, 559.0], [46.6, 559.0], [46.7, 560.0], [46.8, 560.0], [46.9, 561.0], [47.0, 561.0], [47.1, 562.0], [47.2, 562.0], [47.3, 562.0], [47.4, 563.0], [47.5, 563.0], [47.6, 564.0], [47.7, 564.0], [47.8, 564.0], [47.9, 565.0], [48.0, 565.0], [48.1, 566.0], [48.2, 566.0], [48.3, 567.0], [48.4, 568.0], [48.5, 568.0], [48.6, 569.0], [48.7, 569.0], [48.8, 569.0], [48.9, 570.0], [49.0, 570.0], [49.1, 570.0], [49.2, 571.0], [49.3, 571.0], [49.4, 572.0], [49.5, 572.0], [49.6, 573.0], [49.7, 573.0], [49.8, 574.0], [49.9, 574.0], [50.0, 575.0], [50.1, 576.0], [50.2, 576.0], [50.3, 577.0], [50.4, 577.0], [50.5, 578.0], [50.6, 578.0], [50.7, 578.0], [50.8, 579.0], [50.9, 579.0], [51.0, 579.0], [51.1, 580.0], [51.2, 581.0], [51.3, 582.0], [51.4, 582.0], [51.5, 583.0], [51.6, 583.0], [51.7, 584.0], [51.8, 584.0], [51.9, 585.0], [52.0, 585.0], [52.1, 585.0], [52.2, 586.0], [52.3, 586.0], [52.4, 587.0], [52.5, 587.0], [52.6, 588.0], [52.7, 588.0], [52.8, 588.0], [52.9, 589.0], [53.0, 589.0], [53.1, 590.0], [53.2, 590.0], [53.3, 591.0], [53.4, 592.0], [53.5, 592.0], [53.6, 593.0], [53.7, 593.0], [53.8, 594.0], [53.9, 594.0], [54.0, 595.0], [54.1, 595.0], [54.2, 596.0], [54.3, 596.0], [54.4, 597.0], [54.5, 597.0], [54.6, 597.0], [54.7, 598.0], [54.8, 599.0], [54.9, 599.0], [55.0, 599.0], [55.1, 600.0], [55.2, 600.0], [55.3, 600.0], [55.4, 601.0], [55.5, 601.0], [55.6, 602.0], [55.7, 602.0], [55.8, 602.0], [55.9, 603.0], [56.0, 603.0], [56.1, 604.0], [56.2, 604.0], [56.3, 605.0], [56.4, 605.0], [56.5, 605.0], [56.6, 606.0], [56.7, 606.0], [56.8, 607.0], [56.9, 607.0], [57.0, 608.0], [57.1, 608.0], [57.2, 609.0], [57.3, 609.0], [57.4, 610.0], [57.5, 610.0], [57.6, 611.0], [57.7, 612.0], [57.8, 612.0], [57.9, 612.0], [58.0, 613.0], [58.1, 613.0], [58.2, 614.0], [58.3, 614.0], [58.4, 615.0], [58.5, 615.0], [58.6, 616.0], [58.7, 616.0], [58.8, 616.0], [58.9, 617.0], [59.0, 617.0], [59.1, 617.0], [59.2, 618.0], [59.3, 619.0], [59.4, 619.0], [59.5, 620.0], [59.6, 620.0], [59.7, 621.0], [59.8, 621.0], [59.9, 622.0], [60.0, 622.0], [60.1, 622.0], [60.2, 623.0], [60.3, 623.0], [60.4, 624.0], [60.5, 624.0], [60.6, 625.0], [60.7, 625.0], [60.8, 626.0], [60.9, 626.0], [61.0, 627.0], [61.1, 627.0], [61.2, 628.0], [61.3, 628.0], [61.4, 629.0], [61.5, 629.0], [61.6, 629.0], [61.7, 630.0], [61.8, 630.0], [61.9, 631.0], [62.0, 631.0], [62.1, 632.0], [62.2, 632.0], [62.3, 633.0], [62.4, 634.0], [62.5, 634.0], [62.6, 634.0], [62.7, 635.0], [62.8, 635.0], [62.9, 636.0], [63.0, 636.0], [63.1, 636.0], [63.2, 637.0], [63.3, 637.0], [63.4, 638.0], [63.5, 638.0], [63.6, 638.0], [63.7, 639.0], [63.8, 639.0], [63.9, 639.0], [64.0, 640.0], [64.1, 640.0], [64.2, 641.0], [64.3, 642.0], [64.4, 642.0], [64.5, 642.0], [64.6, 642.0], [64.7, 643.0], [64.8, 643.0], [64.9, 644.0], [65.0, 644.0], [65.1, 645.0], [65.2, 646.0], [65.3, 646.0], [65.4, 647.0], [65.5, 648.0], [65.6, 648.0], [65.7, 649.0], [65.8, 649.0], [65.9, 650.0], [66.0, 650.0], [66.1, 650.0], [66.2, 650.0], [66.3, 651.0], [66.4, 651.0], [66.5, 652.0], [66.6, 653.0], [66.7, 653.0], [66.8, 654.0], [66.9, 655.0], [67.0, 655.0], [67.1, 655.0], [67.2, 656.0], [67.3, 656.0], [67.4, 656.0], [67.5, 657.0], [67.6, 658.0], [67.7, 659.0], [67.8, 660.0], [67.9, 660.0], [68.0, 661.0], [68.1, 661.0], [68.2, 662.0], [68.3, 662.0], [68.4, 663.0], [68.5, 663.0], [68.6, 664.0], [68.7, 665.0], [68.8, 665.0], [68.9, 666.0], [69.0, 666.0], [69.1, 667.0], [69.2, 667.0], [69.3, 668.0], [69.4, 668.0], [69.5, 669.0], [69.6, 670.0], [69.7, 671.0], [69.8, 672.0], [69.9, 672.0], [70.0, 672.0], [70.1, 673.0], [70.2, 673.0], [70.3, 674.0], [70.4, 675.0], [70.5, 676.0], [70.6, 676.0], [70.7, 677.0], [70.8, 678.0], [70.9, 678.0], [71.0, 679.0], [71.1, 680.0], [71.2, 681.0], [71.3, 682.0], [71.4, 683.0], [71.5, 683.0], [71.6, 683.0], [71.7, 684.0], [71.8, 685.0], [71.9, 686.0], [72.0, 686.0], [72.1, 687.0], [72.2, 687.0], [72.3, 688.0], [72.4, 689.0], [72.5, 689.0], [72.6, 691.0], [72.7, 692.0], [72.8, 693.0], [72.9, 693.0], [73.0, 694.0], [73.1, 695.0], [73.2, 696.0], [73.3, 696.0], [73.4, 696.0], [73.5, 697.0], [73.6, 698.0], [73.7, 698.0], [73.8, 699.0], [73.9, 700.0], [74.0, 700.0], [74.1, 701.0], [74.2, 702.0], [74.3, 703.0], [74.4, 704.0], [74.5, 704.0], [74.6, 705.0], [74.7, 706.0], [74.8, 707.0], [74.9, 707.0], [75.0, 709.0], [75.1, 710.0], [75.2, 710.0], [75.3, 712.0], [75.4, 713.0], [75.5, 714.0], [75.6, 714.0], [75.7, 714.0], [75.8, 715.0], [75.9, 716.0], [76.0, 716.0], [76.1, 717.0], [76.2, 717.0], [76.3, 718.0], [76.4, 719.0], [76.5, 720.0], [76.6, 720.0], [76.7, 721.0], [76.8, 722.0], [76.9, 723.0], [77.0, 724.0], [77.1, 724.0], [77.2, 725.0], [77.3, 726.0], [77.4, 727.0], [77.5, 728.0], [77.6, 730.0], [77.7, 731.0], [77.8, 732.0], [77.9, 733.0], [78.0, 733.0], [78.1, 734.0], [78.2, 735.0], [78.3, 735.0], [78.4, 737.0], [78.5, 738.0], [78.6, 739.0], [78.7, 740.0], [78.8, 740.0], [78.9, 741.0], [79.0, 742.0], [79.1, 743.0], [79.2, 744.0], [79.3, 745.0], [79.4, 746.0], [79.5, 748.0], [79.6, 749.0], [79.7, 751.0], [79.8, 752.0], [79.9, 754.0], [80.0, 756.0], [80.1, 757.0], [80.2, 759.0], [80.3, 760.0], [80.4, 761.0], [80.5, 761.0], [80.6, 762.0], [80.7, 763.0], [80.8, 764.0], [80.9, 764.0], [81.0, 765.0], [81.1, 767.0], [81.2, 768.0], [81.3, 769.0], [81.4, 770.0], [81.5, 772.0], [81.6, 773.0], [81.7, 775.0], [81.8, 776.0], [81.9, 778.0], [82.0, 779.0], [82.1, 781.0], [82.2, 782.0], [82.3, 783.0], [82.4, 785.0], [82.5, 787.0], [82.6, 787.0], [82.7, 789.0], [82.8, 790.0], [82.9, 791.0], [83.0, 792.0], [83.1, 794.0], [83.2, 795.0], [83.3, 797.0], [83.4, 799.0], [83.5, 802.0], [83.6, 805.0], [83.7, 807.0], [83.8, 810.0], [83.9, 813.0], [84.0, 814.0], [84.1, 817.0], [84.2, 818.0], [84.3, 819.0], [84.4, 821.0], [84.5, 823.0], [84.6, 825.0], [84.7, 826.0], [84.8, 829.0], [84.9, 832.0], [85.0, 834.0], [85.1, 841.0], [85.2, 843.0], [85.3, 844.0], [85.4, 850.0], [85.5, 854.0], [85.6, 861.0], [85.7, 867.0], [85.8, 872.0], [85.9, 877.0], [86.0, 880.0], [86.1, 885.0], [86.2, 893.0], [86.3, 899.0], [86.4, 908.0], [86.5, 914.0], [86.6, 918.0], [86.7, 923.0], [86.8, 928.0], [86.9, 933.0], [87.0, 936.0], [87.1, 942.0], [87.2, 950.0], [87.3, 958.0], [87.4, 964.0], [87.5, 966.0], [87.6, 971.0], [87.7, 972.0], [87.8, 978.0], [87.9, 981.0], [88.0, 989.0], [88.1, 991.0], [88.2, 995.0], [88.3, 1002.0], [88.4, 1007.0], [88.5, 1012.0], [88.6, 1014.0], [88.7, 1020.0], [88.8, 1024.0], [88.9, 1026.0], [89.0, 1031.0], [89.1, 1034.0], [89.2, 1036.0], [89.3, 1038.0], [89.4, 1043.0], [89.5, 1046.0], [89.6, 1049.0], [89.7, 1052.0], [89.8, 1058.0], [89.9, 1064.0], [90.0, 1066.0], [90.1, 1068.0], [90.2, 1076.0], [90.3, 1078.0], [90.4, 1081.0], [90.5, 1083.0], [90.6, 1087.0], [90.7, 1088.0], [90.8, 1091.0], [90.9, 1094.0], [91.0, 1096.0], [91.1, 1098.0], [91.2, 1099.0], [91.3, 1102.0], [91.4, 1105.0], [91.5, 1108.0], [91.6, 1112.0], [91.7, 1113.0], [91.8, 1117.0], [91.9, 1119.0], [92.0, 1124.0], [92.1, 1130.0], [92.2, 1139.0], [92.3, 1145.0], [92.4, 1149.0], [92.5, 1151.0], [92.6, 1154.0], [92.7, 1158.0], [92.8, 1160.0], [92.9, 1168.0], [93.0, 1175.0], [93.1, 1180.0], [93.2, 1183.0], [93.3, 1189.0], [93.4, 1193.0], [93.5, 1202.0], [93.6, 1205.0], [93.7, 1213.0], [93.8, 1218.0], [93.9, 1230.0], [94.0, 1233.0], [94.1, 1240.0], [94.2, 1247.0], [94.3, 1251.0], [94.4, 1254.0], [94.5, 1255.0], [94.6, 1258.0], [94.7, 1262.0], [94.8, 1269.0], [94.9, 1279.0], [95.0, 1281.0], [95.1, 1288.0], [95.2, 1294.0], [95.3, 1302.0], [95.4, 1306.0], [95.5, 1311.0], [95.6, 1312.0], [95.7, 1315.0], [95.8, 1328.0], [95.9, 1335.0], [96.0, 1340.0], [96.1, 1352.0], [96.2, 1367.0], [96.3, 1374.0], [96.4, 1383.0], [96.5, 1387.0], [96.6, 1393.0], [96.7, 1399.0], [96.8, 1403.0], [96.9, 1416.0], [97.0, 1436.0], [97.1, 1452.0], [97.2, 1470.0], [97.3, 1480.0], [97.4, 1505.0], [97.5, 1534.0], [97.6, 1548.0], [97.7, 1569.0], [97.8, 1588.0], [97.9, 1613.0], [98.0, 1627.0], [98.1, 1634.0], [98.2, 1651.0], [98.3, 1687.0], [98.4, 1726.0], [98.5, 1740.0], [98.6, 1777.0], [98.7, 1824.0], [98.8, 1863.0], [98.9, 1890.0], [99.0, 1911.0], [99.1, 1937.0], [99.2, 1992.0], [99.3, 2058.0], [99.4, 2073.0], [99.5, 2109.0], [99.6, 2205.0], [99.7, 2362.0], [99.8, 2545.0], [99.9, 2770.0]], "isOverall": false, "label": "HTTP Request - POST /hammock/update", "isController": false}, {"data": [[0.0, 2.0], [0.1, 3.0], [0.2, 4.0], [0.3, 4.0], [0.4, 5.0], [0.5, 5.0], [0.6, 6.0], [0.7, 6.0], [0.8, 6.0], [0.9, 7.0], [1.0, 7.0], [1.1, 8.0], [1.2, 8.0], [1.3, 8.0], [1.4, 8.0], [1.5, 8.0], [1.6, 9.0], [1.7, 9.0], [1.8, 9.0], [1.9, 9.0], [2.0, 9.0], [2.1, 10.0], [2.2, 10.0], [2.3, 10.0], [2.4, 10.0], [2.5, 10.0], [2.6, 10.0], [2.7, 11.0], [2.8, 11.0], [2.9, 11.0], [3.0, 11.0], [3.1, 11.0], [3.2, 12.0], [3.3, 12.0], [3.4, 12.0], [3.5, 12.0], [3.6, 13.0], [3.7, 13.0], [3.8, 13.0], [3.9, 13.0], [4.0, 14.0], [4.1, 14.0], [4.2, 14.0], [4.3, 14.0], [4.4, 15.0], [4.5, 15.0], [4.6, 15.0], [4.7, 15.0], [4.8, 15.0], [4.9, 16.0], [5.0, 16.0], [5.1, 16.0], [5.2, 17.0], [5.3, 17.0], [5.4, 17.0], [5.5, 17.0], [5.6, 18.0], [5.7, 18.0], [5.8, 18.0], [5.9, 18.0], [6.0, 19.0], [6.1, 19.0], [6.2, 19.0], [6.3, 19.0], [6.4, 19.0], [6.5, 20.0], [6.6, 20.0], [6.7, 20.0], [6.8, 21.0], [6.9, 21.0], [7.0, 21.0], [7.1, 22.0], [7.2, 22.0], [7.3, 22.0], [7.4, 23.0], [7.5, 23.0], [7.6, 24.0], [7.7, 24.0], [7.8, 25.0], [7.9, 25.0], [8.0, 25.0], [8.1, 26.0], [8.2, 26.0], [8.3, 27.0], [8.4, 27.0], [8.5, 28.0], [8.6, 28.0], [8.7, 29.0], [8.8, 30.0], [8.9, 31.0], [9.0, 31.0], [9.1, 33.0], [9.2, 33.0], [9.3, 35.0], [9.4, 35.0], [9.5, 36.0], [9.6, 41.0], [9.7, 42.0], [9.8, 44.0], [9.9, 49.0], [10.0, 54.0], [10.1, 59.0], [10.2, 64.0], [10.3, 78.0], [10.4, 92.0], [10.5, 109.0], [10.6, 114.0], [10.7, 128.0], [10.8, 140.0], [10.9, 150.0], [11.0, 163.0], [11.1, 183.0], [11.2, 194.0], [11.3, 202.0], [11.4, 228.0], [11.5, 244.0], [11.6, 257.0], [11.7, 264.0], [11.8, 279.0], [11.9, 291.0], [12.0, 306.0], [12.1, 319.0], [12.2, 324.0], [12.3, 329.0], [12.4, 336.0], [12.5, 344.0], [12.6, 346.0], [12.7, 353.0], [12.8, 358.0], [12.9, 363.0], [13.0, 369.0], [13.1, 370.0], [13.2, 371.0], [13.3, 373.0], [13.4, 375.0], [13.5, 381.0], [13.6, 385.0], [13.7, 387.0], [13.8, 392.0], [13.9, 395.0], [14.0, 395.0], [14.1, 399.0], [14.2, 401.0], [14.3, 403.0], [14.4, 405.0], [14.5, 407.0], [14.6, 409.0], [14.7, 411.0], [14.8, 412.0], [14.9, 413.0], [15.0, 414.0], [15.1, 415.0], [15.2, 416.0], [15.3, 416.0], [15.4, 417.0], [15.5, 420.0], [15.6, 421.0], [15.7, 422.0], [15.8, 423.0], [15.9, 424.0], [16.0, 426.0], [16.1, 427.0], [16.2, 427.0], [16.3, 428.0], [16.4, 429.0], [16.5, 430.0], [16.6, 431.0], [16.7, 432.0], [16.8, 433.0], [16.9, 433.0], [17.0, 434.0], [17.1, 434.0], [17.2, 435.0], [17.3, 436.0], [17.4, 437.0], [17.5, 437.0], [17.6, 438.0], [17.7, 440.0], [17.8, 440.0], [17.9, 441.0], [18.0, 442.0], [18.1, 443.0], [18.2, 443.0], [18.3, 444.0], [18.4, 445.0], [18.5, 446.0], [18.6, 446.0], [18.7, 447.0], [18.8, 447.0], [18.9, 448.0], [19.0, 449.0], [19.1, 450.0], [19.2, 450.0], [19.3, 450.0], [19.4, 451.0], [19.5, 452.0], [19.6, 453.0], [19.7, 454.0], [19.8, 454.0], [19.9, 455.0], [20.0, 456.0], [20.1, 456.0], [20.2, 457.0], [20.3, 457.0], [20.4, 458.0], [20.5, 459.0], [20.6, 459.0], [20.7, 460.0], [20.8, 461.0], [20.9, 462.0], [21.0, 462.0], [21.1, 463.0], [21.2, 463.0], [21.3, 464.0], [21.4, 464.0], [21.5, 465.0], [21.6, 465.0], [21.7, 466.0], [21.8, 467.0], [21.9, 467.0], [22.0, 468.0], [22.1, 469.0], [22.2, 469.0], [22.3, 469.0], [22.4, 470.0], [22.5, 471.0], [22.6, 471.0], [22.7, 472.0], [22.8, 472.0], [22.9, 473.0], [23.0, 473.0], [23.1, 474.0], [23.2, 474.0], [23.3, 474.0], [23.4, 475.0], [23.5, 475.0], [23.6, 476.0], [23.7, 476.0], [23.8, 477.0], [23.9, 477.0], [24.0, 477.0], [24.1, 478.0], [24.2, 479.0], [24.3, 479.0], [24.4, 480.0], [24.5, 480.0], [24.6, 480.0], [24.7, 481.0], [24.8, 481.0], [24.9, 482.0], [25.0, 482.0], [25.1, 483.0], [25.2, 483.0], [25.3, 484.0], [25.4, 484.0], [25.5, 485.0], [25.6, 485.0], [25.7, 486.0], [25.8, 486.0], [25.9, 487.0], [26.0, 487.0], [26.1, 488.0], [26.2, 488.0], [26.3, 489.0], [26.4, 489.0], [26.5, 490.0], [26.6, 490.0], [26.7, 491.0], [26.8, 492.0], [26.9, 492.0], [27.0, 492.0], [27.1, 493.0], [27.2, 493.0], [27.3, 494.0], [27.4, 494.0], [27.5, 495.0], [27.6, 495.0], [27.7, 496.0], [27.8, 496.0], [27.9, 496.0], [28.0, 497.0], [28.1, 497.0], [28.2, 498.0], [28.3, 498.0], [28.4, 499.0], [28.5, 499.0], [28.6, 500.0], [28.7, 500.0], [28.8, 501.0], [28.9, 501.0], [29.0, 501.0], [29.1, 502.0], [29.2, 502.0], [29.3, 502.0], [29.4, 503.0], [29.5, 504.0], [29.6, 504.0], [29.7, 504.0], [29.8, 505.0], [29.9, 505.0], [30.0, 505.0], [30.1, 506.0], [30.2, 506.0], [30.3, 507.0], [30.4, 508.0], [30.5, 508.0], [30.6, 508.0], [30.7, 509.0], [30.8, 509.0], [30.9, 510.0], [31.0, 510.0], [31.1, 511.0], [31.2, 511.0], [31.3, 512.0], [31.4, 513.0], [31.5, 513.0], [31.6, 514.0], [31.7, 514.0], [31.8, 515.0], [31.9, 515.0], [32.0, 516.0], [32.1, 516.0], [32.2, 517.0], [32.3, 517.0], [32.4, 518.0], [32.5, 518.0], [32.6, 519.0], [32.7, 519.0], [32.8, 520.0], [32.9, 520.0], [33.0, 520.0], [33.1, 521.0], [33.2, 521.0], [33.3, 522.0], [33.4, 522.0], [33.5, 523.0], [33.6, 523.0], [33.7, 524.0], [33.8, 524.0], [33.9, 525.0], [34.0, 526.0], [34.1, 526.0], [34.2, 526.0], [34.3, 527.0], [34.4, 527.0], [34.5, 527.0], [34.6, 528.0], [34.7, 529.0], [34.8, 529.0], [34.9, 529.0], [35.0, 530.0], [35.1, 531.0], [35.2, 531.0], [35.3, 531.0], [35.4, 532.0], [35.5, 532.0], [35.6, 533.0], [35.7, 533.0], [35.8, 534.0], [35.9, 534.0], [36.0, 535.0], [36.1, 536.0], [36.2, 536.0], [36.3, 536.0], [36.4, 537.0], [36.5, 537.0], [36.6, 538.0], [36.7, 538.0], [36.8, 539.0], [36.9, 539.0], [37.0, 540.0], [37.1, 540.0], [37.2, 541.0], [37.3, 541.0], [37.4, 541.0], [37.5, 542.0], [37.6, 542.0], [37.7, 543.0], [37.8, 543.0], [37.9, 543.0], [38.0, 544.0], [38.1, 545.0], [38.2, 545.0], [38.3, 545.0], [38.4, 546.0], [38.5, 546.0], [38.6, 546.0], [38.7, 546.0], [38.8, 547.0], [38.9, 547.0], [39.0, 547.0], [39.1, 547.0], [39.2, 548.0], [39.3, 548.0], [39.4, 549.0], [39.5, 549.0], [39.6, 550.0], [39.7, 550.0], [39.8, 550.0], [39.9, 550.0], [40.0, 551.0], [40.1, 551.0], [40.2, 552.0], [40.3, 552.0], [40.4, 553.0], [40.5, 553.0], [40.6, 554.0], [40.7, 554.0], [40.8, 554.0], [40.9, 555.0], [41.0, 555.0], [41.1, 555.0], [41.2, 556.0], [41.3, 556.0], [41.4, 557.0], [41.5, 557.0], [41.6, 557.0], [41.7, 558.0], [41.8, 558.0], [41.9, 558.0], [42.0, 559.0], [42.1, 559.0], [42.2, 559.0], [42.3, 560.0], [42.4, 560.0], [42.5, 561.0], [42.6, 561.0], [42.7, 561.0], [42.8, 562.0], [42.9, 562.0], [43.0, 562.0], [43.1, 563.0], [43.2, 563.0], [43.3, 563.0], [43.4, 564.0], [43.5, 564.0], [43.6, 564.0], [43.7, 564.0], [43.8, 565.0], [43.9, 565.0], [44.0, 565.0], [44.1, 565.0], [44.2, 566.0], [44.3, 566.0], [44.4, 567.0], [44.5, 567.0], [44.6, 568.0], [44.7, 568.0], [44.8, 568.0], [44.9, 568.0], [45.0, 569.0], [45.1, 569.0], [45.2, 569.0], [45.3, 570.0], [45.4, 570.0], [45.5, 570.0], [45.6, 571.0], [45.7, 571.0], [45.8, 571.0], [45.9, 572.0], [46.0, 573.0], [46.1, 573.0], [46.2, 574.0], [46.3, 574.0], [46.4, 574.0], [46.5, 575.0], [46.6, 576.0], [46.7, 576.0], [46.8, 576.0], [46.9, 577.0], [47.0, 577.0], [47.1, 578.0], [47.2, 578.0], [47.3, 579.0], [47.4, 579.0], [47.5, 579.0], [47.6, 580.0], [47.7, 580.0], [47.8, 581.0], [47.9, 581.0], [48.0, 582.0], [48.1, 582.0], [48.2, 582.0], [48.3, 583.0], [48.4, 583.0], [48.5, 583.0], [48.6, 584.0], [48.7, 584.0], [48.8, 585.0], [48.9, 585.0], [49.0, 585.0], [49.1, 585.0], [49.2, 586.0], [49.3, 586.0], [49.4, 586.0], [49.5, 587.0], [49.6, 587.0], [49.7, 588.0], [49.8, 588.0], [49.9, 589.0], [50.0, 589.0], [50.1, 590.0], [50.2, 591.0], [50.3, 591.0], [50.4, 591.0], [50.5, 592.0], [50.6, 592.0], [50.7, 592.0], [50.8, 593.0], [50.9, 593.0], [51.0, 593.0], [51.1, 594.0], [51.2, 595.0], [51.3, 595.0], [51.4, 595.0], [51.5, 596.0], [51.6, 597.0], [51.7, 598.0], [51.8, 598.0], [51.9, 598.0], [52.0, 599.0], [52.1, 600.0], [52.2, 600.0], [52.3, 601.0], [52.4, 602.0], [52.5, 602.0], [52.6, 602.0], [52.7, 603.0], [52.8, 603.0], [52.9, 604.0], [53.0, 604.0], [53.1, 604.0], [53.2, 605.0], [53.3, 605.0], [53.4, 606.0], [53.5, 606.0], [53.6, 607.0], [53.7, 607.0], [53.8, 607.0], [53.9, 608.0], [54.0, 608.0], [54.1, 609.0], [54.2, 609.0], [54.3, 609.0], [54.4, 609.0], [54.5, 610.0], [54.6, 610.0], [54.7, 611.0], [54.8, 612.0], [54.9, 612.0], [55.0, 612.0], [55.1, 613.0], [55.2, 613.0], [55.3, 613.0], [55.4, 614.0], [55.5, 614.0], [55.6, 614.0], [55.7, 614.0], [55.8, 614.0], [55.9, 615.0], [56.0, 615.0], [56.1, 615.0], [56.2, 616.0], [56.3, 616.0], [56.4, 616.0], [56.5, 616.0], [56.6, 617.0], [56.7, 617.0], [56.8, 617.0], [56.9, 618.0], [57.0, 618.0], [57.1, 619.0], [57.2, 619.0], [57.3, 619.0], [57.4, 620.0], [57.5, 620.0], [57.6, 621.0], [57.7, 621.0], [57.8, 621.0], [57.9, 622.0], [58.0, 622.0], [58.1, 622.0], [58.2, 622.0], [58.3, 623.0], [58.4, 624.0], [58.5, 624.0], [58.6, 624.0], [58.7, 625.0], [58.8, 625.0], [58.9, 625.0], [59.0, 625.0], [59.1, 626.0], [59.2, 626.0], [59.3, 626.0], [59.4, 627.0], [59.5, 627.0], [59.6, 628.0], [59.7, 628.0], [59.8, 628.0], [59.9, 629.0], [60.0, 629.0], [60.1, 630.0], [60.2, 631.0], [60.3, 631.0], [60.4, 631.0], [60.5, 632.0], [60.6, 633.0], [60.7, 633.0], [60.8, 633.0], [60.9, 634.0], [61.0, 634.0], [61.1, 634.0], [61.2, 635.0], [61.3, 636.0], [61.4, 637.0], [61.5, 637.0], [61.6, 638.0], [61.7, 639.0], [61.8, 640.0], [61.9, 640.0], [62.0, 640.0], [62.1, 640.0], [62.2, 641.0], [62.3, 642.0], [62.4, 643.0], [62.5, 643.0], [62.6, 644.0], [62.7, 644.0], [62.8, 645.0], [62.9, 647.0], [63.0, 647.0], [63.1, 647.0], [63.2, 648.0], [63.3, 648.0], [63.4, 648.0], [63.5, 649.0], [63.6, 650.0], [63.7, 650.0], [63.8, 650.0], [63.9, 651.0], [64.0, 651.0], [64.1, 652.0], [64.2, 653.0], [64.3, 653.0], [64.4, 654.0], [64.5, 654.0], [64.6, 655.0], [64.7, 655.0], [64.8, 656.0], [64.9, 656.0], [65.0, 657.0], [65.1, 657.0], [65.2, 658.0], [65.3, 659.0], [65.4, 659.0], [65.5, 660.0], [65.6, 660.0], [65.7, 661.0], [65.8, 661.0], [65.9, 662.0], [66.0, 662.0], [66.1, 662.0], [66.2, 663.0], [66.3, 664.0], [66.4, 664.0], [66.5, 665.0], [66.6, 666.0], [66.7, 666.0], [66.8, 666.0], [66.9, 667.0], [67.0, 667.0], [67.1, 668.0], [67.2, 668.0], [67.3, 669.0], [67.4, 669.0], [67.5, 670.0], [67.6, 670.0], [67.7, 671.0], [67.8, 672.0], [67.9, 672.0], [68.0, 672.0], [68.1, 673.0], [68.2, 674.0], [68.3, 674.0], [68.4, 675.0], [68.5, 675.0], [68.6, 676.0], [68.7, 676.0], [68.8, 677.0], [68.9, 678.0], [69.0, 678.0], [69.1, 680.0], [69.2, 680.0], [69.3, 680.0], [69.4, 681.0], [69.5, 682.0], [69.6, 682.0], [69.7, 683.0], [69.8, 683.0], [69.9, 684.0], [70.0, 685.0], [70.1, 685.0], [70.2, 686.0], [70.3, 686.0], [70.4, 687.0], [70.5, 688.0], [70.6, 688.0], [70.7, 688.0], [70.8, 689.0], [70.9, 690.0], [71.0, 690.0], [71.1, 691.0], [71.2, 691.0], [71.3, 692.0], [71.4, 692.0], [71.5, 693.0], [71.6, 693.0], [71.7, 694.0], [71.8, 695.0], [71.9, 695.0], [72.0, 695.0], [72.1, 696.0], [72.2, 697.0], [72.3, 698.0], [72.4, 699.0], [72.5, 700.0], [72.6, 700.0], [72.7, 701.0], [72.8, 702.0], [72.9, 702.0], [73.0, 703.0], [73.1, 703.0], [73.2, 704.0], [73.3, 704.0], [73.4, 705.0], [73.5, 705.0], [73.6, 706.0], [73.7, 706.0], [73.8, 707.0], [73.9, 708.0], [74.0, 708.0], [74.1, 709.0], [74.2, 709.0], [74.3, 711.0], [74.4, 712.0], [74.5, 713.0], [74.6, 713.0], [74.7, 714.0], [74.8, 715.0], [74.9, 715.0], [75.0, 715.0], [75.1, 716.0], [75.2, 717.0], [75.3, 718.0], [75.4, 719.0], [75.5, 721.0], [75.6, 722.0], [75.7, 723.0], [75.8, 724.0], [75.9, 725.0], [76.0, 726.0], [76.1, 726.0], [76.2, 727.0], [76.3, 729.0], [76.4, 729.0], [76.5, 730.0], [76.6, 730.0], [76.7, 731.0], [76.8, 731.0], [76.9, 732.0], [77.0, 733.0], [77.1, 733.0], [77.2, 734.0], [77.3, 735.0], [77.4, 736.0], [77.5, 737.0], [77.6, 739.0], [77.7, 740.0], [77.8, 741.0], [77.9, 742.0], [78.0, 743.0], [78.1, 745.0], [78.2, 747.0], [78.3, 748.0], [78.4, 749.0], [78.5, 749.0], [78.6, 751.0], [78.7, 752.0], [78.8, 753.0], [78.9, 754.0], [79.0, 755.0], [79.1, 756.0], [79.2, 756.0], [79.3, 758.0], [79.4, 759.0], [79.5, 760.0], [79.6, 762.0], [79.7, 763.0], [79.8, 763.0], [79.9, 765.0], [80.0, 766.0], [80.1, 768.0], [80.2, 768.0], [80.3, 770.0], [80.4, 771.0], [80.5, 772.0], [80.6, 773.0], [80.7, 774.0], [80.8, 775.0], [80.9, 776.0], [81.0, 777.0], [81.1, 778.0], [81.2, 780.0], [81.3, 781.0], [81.4, 782.0], [81.5, 783.0], [81.6, 784.0], [81.7, 786.0], [81.8, 787.0], [81.9, 788.0], [82.0, 791.0], [82.1, 793.0], [82.2, 793.0], [82.3, 796.0], [82.4, 797.0], [82.5, 798.0], [82.6, 800.0], [82.7, 803.0], [82.8, 805.0], [82.9, 811.0], [83.0, 813.0], [83.1, 814.0], [83.2, 816.0], [83.3, 818.0], [83.4, 820.0], [83.5, 821.0], [83.6, 825.0], [83.7, 828.0], [83.8, 830.0], [83.9, 832.0], [84.0, 838.0], [84.1, 839.0], [84.2, 844.0], [84.3, 848.0], [84.4, 850.0], [84.5, 854.0], [84.6, 858.0], [84.7, 860.0], [84.8, 863.0], [84.9, 868.0], [85.0, 877.0], [85.1, 881.0], [85.2, 883.0], [85.3, 888.0], [85.4, 893.0], [85.5, 899.0], [85.6, 901.0], [85.7, 906.0], [85.8, 910.0], [85.9, 919.0], [86.0, 929.0], [86.1, 933.0], [86.2, 936.0], [86.3, 940.0], [86.4, 942.0], [86.5, 948.0], [86.6, 956.0], [86.7, 965.0], [86.8, 970.0], [86.9, 974.0], [87.0, 977.0], [87.1, 983.0], [87.2, 989.0], [87.3, 991.0], [87.4, 996.0], [87.5, 1000.0], [87.6, 1004.0], [87.7, 1010.0], [87.8, 1013.0], [87.9, 1016.0], [88.0, 1020.0], [88.1, 1022.0], [88.2, 1028.0], [88.3, 1031.0], [88.4, 1034.0], [88.5, 1041.0], [88.6, 1048.0], [88.7, 1050.0], [88.8, 1053.0], [88.9, 1055.0], [89.0, 1060.0], [89.1, 1063.0], [89.2, 1065.0], [89.3, 1067.0], [89.4, 1068.0], [89.5, 1072.0], [89.6, 1075.0], [89.7, 1076.0], [89.8, 1079.0], [89.9, 1081.0], [90.0, 1082.0], [90.1, 1084.0], [90.2, 1087.0], [90.3, 1088.0], [90.4, 1091.0], [90.5, 1093.0], [90.6, 1095.0], [90.7, 1099.0], [90.8, 1104.0], [90.9, 1112.0], [91.0, 1115.0], [91.1, 1121.0], [91.2, 1124.0], [91.3, 1127.0], [91.4, 1130.0], [91.5, 1133.0], [91.6, 1136.0], [91.7, 1141.0], [91.8, 1151.0], [91.9, 1156.0], [92.0, 1163.0], [92.1, 1165.0], [92.2, 1178.0], [92.3, 1183.0], [92.4, 1188.0], [92.5, 1192.0], [92.6, 1197.0], [92.7, 1206.0], [92.8, 1213.0], [92.9, 1217.0], [93.0, 1221.0], [93.1, 1226.0], [93.2, 1229.0], [93.3, 1233.0], [93.4, 1236.0], [93.5, 1240.0], [93.6, 1244.0], [93.7, 1247.0], [93.8, 1254.0], [93.9, 1259.0], [94.0, 1261.0], [94.1, 1267.0], [94.2, 1274.0], [94.3, 1275.0], [94.4, 1278.0], [94.5, 1280.0], [94.6, 1284.0], [94.7, 1293.0], [94.8, 1297.0], [94.9, 1303.0], [95.0, 1315.0], [95.1, 1322.0], [95.2, 1329.0], [95.3, 1334.0], [95.4, 1338.0], [95.5, 1342.0], [95.6, 1350.0], [95.7, 1354.0], [95.8, 1356.0], [95.9, 1363.0], [96.0, 1367.0], [96.1, 1375.0], [96.2, 1383.0], [96.3, 1389.0], [96.4, 1415.0], [96.5, 1422.0], [96.6, 1443.0], [96.7, 1464.0], [96.8, 1485.0], [96.9, 1504.0], [97.0, 1515.0], [97.1, 1562.0], [97.2, 1569.0], [97.3, 1585.0], [97.4, 1593.0], [97.5, 1605.0], [97.6, 1610.0], [97.7, 1635.0], [97.8, 1650.0], [97.9, 1664.0], [98.0, 1675.0], [98.1, 1690.0], [98.2, 1704.0], [98.3, 1728.0], [98.4, 1764.0], [98.5, 1790.0], [98.6, 1799.0], [98.7, 1819.0], [98.8, 1837.0], [98.9, 1851.0], [99.0, 1884.0], [99.1, 1921.0], [99.2, 1971.0], [99.3, 2065.0], [99.4, 2108.0], [99.5, 2133.0], [99.6, 2295.0], [99.7, 2468.0], [99.8, 2612.0], [99.9, 2858.0]], "isOverall": false, "label": "HTTP Request - GET /hammock/find/1", "isController": false}, {"data": [[0.0, 5.0], [0.1, 8.0], [0.2, 16.0], [0.3, 18.0], [0.4, 21.0], [0.5, 22.0], [0.6, 24.0], [0.7, 24.0], [0.8, 26.0], [0.9, 27.0], [1.0, 28.0], [1.1, 28.0], [1.2, 29.0], [1.3, 30.0], [1.4, 30.0], [1.5, 31.0], [1.6, 31.0], [1.7, 32.0], [1.8, 32.0], [1.9, 33.0], [2.0, 33.0], [2.1, 33.0], [2.2, 34.0], [2.3, 35.0], [2.4, 35.0], [2.5, 36.0], [2.6, 36.0], [2.7, 36.0], [2.8, 36.0], [2.9, 37.0], [3.0, 37.0], [3.1, 38.0], [3.2, 38.0], [3.3, 38.0], [3.4, 39.0], [3.5, 39.0], [3.6, 40.0], [3.7, 40.0], [3.8, 40.0], [3.9, 40.0], [4.0, 40.0], [4.1, 41.0], [4.2, 41.0], [4.3, 41.0], [4.4, 42.0], [4.5, 42.0], [4.6, 42.0], [4.7, 43.0], [4.8, 43.0], [4.9, 43.0], [5.0, 44.0], [5.1, 44.0], [5.2, 44.0], [5.3, 44.0], [5.4, 45.0], [5.5, 45.0], [5.6, 45.0], [5.7, 46.0], [5.8, 46.0], [5.9, 46.0], [6.0, 47.0], [6.1, 47.0], [6.2, 47.0], [6.3, 47.0], [6.4, 48.0], [6.5, 48.0], [6.6, 48.0], [6.7, 49.0], [6.8, 49.0], [6.9, 49.0], [7.0, 49.0], [7.1, 50.0], [7.2, 50.0], [7.3, 50.0], [7.4, 51.0], [7.5, 51.0], [7.6, 51.0], [7.7, 51.0], [7.8, 52.0], [7.9, 52.0], [8.0, 52.0], [8.1, 52.0], [8.2, 53.0], [8.3, 53.0], [8.4, 53.0], [8.5, 53.0], [8.6, 53.0], [8.7, 54.0], [8.8, 54.0], [8.9, 54.0], [9.0, 54.0], [9.1, 55.0], [9.2, 55.0], [9.3, 55.0], [9.4, 55.0], [9.5, 55.0], [9.6, 56.0], [9.7, 56.0], [9.8, 56.0], [9.9, 56.0], [10.0, 57.0], [10.1, 57.0], [10.2, 57.0], [10.3, 58.0], [10.4, 58.0], [10.5, 58.0], [10.6, 59.0], [10.7, 59.0], [10.8, 59.0], [10.9, 59.0], [11.0, 59.0], [11.1, 60.0], [11.2, 60.0], [11.3, 60.0], [11.4, 60.0], [11.5, 61.0], [11.6, 61.0], [11.7, 61.0], [11.8, 62.0], [11.9, 62.0], [12.0, 62.0], [12.1, 63.0], [12.2, 63.0], [12.3, 64.0], [12.4, 64.0], [12.5, 64.0], [12.6, 64.0], [12.7, 65.0], [12.8, 65.0], [12.9, 66.0], [13.0, 66.0], [13.1, 66.0], [13.2, 67.0], [13.3, 67.0], [13.4, 67.0], [13.5, 68.0], [13.6, 68.0], [13.7, 69.0], [13.8, 69.0], [13.9, 70.0], [14.0, 70.0], [14.1, 70.0], [14.2, 70.0], [14.3, 71.0], [14.4, 71.0], [14.5, 72.0], [14.6, 72.0], [14.7, 72.0], [14.8, 73.0], [14.9, 73.0], [15.0, 73.0], [15.1, 74.0], [15.2, 74.0], [15.3, 75.0], [15.4, 76.0], [15.5, 76.0], [15.6, 76.0], [15.7, 77.0], [15.8, 77.0], [15.9, 78.0], [16.0, 78.0], [16.1, 78.0], [16.2, 79.0], [16.3, 80.0], [16.4, 80.0], [16.5, 81.0], [16.6, 81.0], [16.7, 81.0], [16.8, 82.0], [16.9, 82.0], [17.0, 82.0], [17.1, 83.0], [17.2, 84.0], [17.3, 84.0], [17.4, 84.0], [17.5, 85.0], [17.6, 86.0], [17.7, 86.0], [17.8, 87.0], [17.9, 87.0], [18.0, 88.0], [18.1, 89.0], [18.2, 90.0], [18.3, 90.0], [18.4, 91.0], [18.5, 91.0], [18.6, 93.0], [18.7, 94.0], [18.8, 95.0], [18.9, 96.0], [19.0, 97.0], [19.1, 97.0], [19.2, 98.0], [19.3, 99.0], [19.4, 100.0], [19.5, 102.0], [19.6, 103.0], [19.7, 105.0], [19.8, 109.0], [19.9, 110.0], [20.0, 111.0], [20.1, 112.0], [20.2, 113.0], [20.3, 115.0], [20.4, 118.0], [20.5, 121.0], [20.6, 122.0], [20.7, 123.0], [20.8, 125.0], [20.9, 127.0], [21.0, 129.0], [21.1, 131.0], [21.2, 132.0], [21.3, 134.0], [21.4, 139.0], [21.5, 143.0], [21.6, 144.0], [21.7, 152.0], [21.8, 159.0], [21.9, 170.0], [22.0, 181.0], [22.1, 192.0], [22.2, 201.0], [22.3, 209.0], [22.4, 212.0], [22.5, 219.0], [22.6, 234.0], [22.7, 237.0], [22.8, 249.0], [22.9, 260.0], [23.0, 278.0], [23.1, 293.0], [23.2, 299.0], [23.3, 314.0], [23.4, 322.0], [23.5, 329.0], [23.6, 335.0], [23.7, 342.0], [23.8, 347.0], [23.9, 355.0], [24.0, 363.0], [24.1, 366.0], [24.2, 375.0], [24.3, 380.0], [24.4, 395.0], [24.5, 397.0], [24.6, 403.0], [24.7, 408.0], [24.8, 410.0], [24.9, 415.0], [25.0, 419.0], [25.1, 422.0], [25.2, 425.0], [25.3, 427.0], [25.4, 428.0], [25.5, 429.0], [25.6, 431.0], [25.7, 432.0], [25.8, 433.0], [25.9, 436.0], [26.0, 438.0], [26.1, 439.0], [26.2, 441.0], [26.3, 443.0], [26.4, 448.0], [26.5, 450.0], [26.6, 452.0], [26.7, 453.0], [26.8, 455.0], [26.9, 455.0], [27.0, 456.0], [27.1, 457.0], [27.2, 459.0], [27.3, 460.0], [27.4, 462.0], [27.5, 464.0], [27.6, 464.0], [27.7, 465.0], [27.8, 466.0], [27.9, 467.0], [28.0, 468.0], [28.1, 468.0], [28.2, 469.0], [28.3, 469.0], [28.4, 470.0], [28.5, 471.0], [28.6, 471.0], [28.7, 472.0], [28.8, 472.0], [28.9, 473.0], [29.0, 474.0], [29.1, 475.0], [29.2, 476.0], [29.3, 477.0], [29.4, 477.0], [29.5, 478.0], [29.6, 478.0], [29.7, 478.0], [29.8, 480.0], [29.9, 481.0], [30.0, 482.0], [30.1, 483.0], [30.2, 484.0], [30.3, 484.0], [30.4, 485.0], [30.5, 486.0], [30.6, 486.0], [30.7, 487.0], [30.8, 489.0], [30.9, 489.0], [31.0, 490.0], [31.1, 491.0], [31.2, 491.0], [31.3, 493.0], [31.4, 494.0], [31.5, 495.0], [31.6, 496.0], [31.7, 496.0], [31.8, 497.0], [31.9, 498.0], [32.0, 499.0], [32.1, 500.0], [32.2, 501.0], [32.3, 501.0], [32.4, 502.0], [32.5, 502.0], [32.6, 503.0], [32.7, 504.0], [32.8, 505.0], [32.9, 506.0], [33.0, 507.0], [33.1, 507.0], [33.2, 507.0], [33.3, 508.0], [33.4, 508.0], [33.5, 508.0], [33.6, 508.0], [33.7, 509.0], [33.8, 509.0], [33.9, 510.0], [34.0, 513.0], [34.1, 513.0], [34.2, 514.0], [34.3, 515.0], [34.4, 515.0], [34.5, 516.0], [34.6, 517.0], [34.7, 518.0], [34.8, 519.0], [34.9, 520.0], [35.0, 521.0], [35.1, 521.0], [35.2, 521.0], [35.3, 522.0], [35.4, 522.0], [35.5, 523.0], [35.6, 523.0], [35.7, 524.0], [35.8, 525.0], [35.9, 526.0], [36.0, 526.0], [36.1, 526.0], [36.2, 527.0], [36.3, 527.0], [36.4, 528.0], [36.5, 528.0], [36.6, 529.0], [36.7, 530.0], [36.8, 531.0], [36.9, 531.0], [37.0, 532.0], [37.1, 533.0], [37.2, 533.0], [37.3, 534.0], [37.4, 535.0], [37.5, 535.0], [37.6, 536.0], [37.7, 536.0], [37.8, 536.0], [37.9, 537.0], [38.0, 538.0], [38.1, 539.0], [38.2, 539.0], [38.3, 540.0], [38.4, 540.0], [38.5, 540.0], [38.6, 541.0], [38.7, 541.0], [38.8, 542.0], [38.9, 542.0], [39.0, 542.0], [39.1, 544.0], [39.2, 544.0], [39.3, 544.0], [39.4, 544.0], [39.5, 545.0], [39.6, 545.0], [39.7, 546.0], [39.8, 546.0], [39.9, 547.0], [40.0, 547.0], [40.1, 547.0], [40.2, 548.0], [40.3, 549.0], [40.4, 549.0], [40.5, 550.0], [40.6, 550.0], [40.7, 551.0], [40.8, 551.0], [40.9, 552.0], [41.0, 552.0], [41.1, 553.0], [41.2, 553.0], [41.3, 554.0], [41.4, 554.0], [41.5, 554.0], [41.6, 555.0], [41.7, 555.0], [41.8, 556.0], [41.9, 556.0], [42.0, 557.0], [42.1, 557.0], [42.2, 557.0], [42.3, 558.0], [42.4, 559.0], [42.5, 560.0], [42.6, 561.0], [42.7, 561.0], [42.8, 561.0], [42.9, 562.0], [43.0, 563.0], [43.1, 564.0], [43.2, 564.0], [43.3, 564.0], [43.4, 565.0], [43.5, 565.0], [43.6, 565.0], [43.7, 566.0], [43.8, 566.0], [43.9, 567.0], [44.0, 568.0], [44.1, 569.0], [44.2, 570.0], [44.3, 570.0], [44.4, 571.0], [44.5, 572.0], [44.6, 572.0], [44.7, 573.0], [44.8, 573.0], [44.9, 573.0], [45.0, 574.0], [45.1, 574.0], [45.2, 575.0], [45.3, 575.0], [45.4, 576.0], [45.5, 576.0], [45.6, 577.0], [45.7, 577.0], [45.8, 578.0], [45.9, 578.0], [46.0, 579.0], [46.1, 579.0], [46.2, 579.0], [46.3, 579.0], [46.4, 579.0], [46.5, 580.0], [46.6, 580.0], [46.7, 581.0], [46.8, 581.0], [46.9, 582.0], [47.0, 583.0], [47.1, 583.0], [47.2, 583.0], [47.3, 584.0], [47.4, 584.0], [47.5, 585.0], [47.6, 585.0], [47.7, 586.0], [47.8, 586.0], [47.9, 587.0], [48.0, 587.0], [48.1, 588.0], [48.2, 588.0], [48.3, 589.0], [48.4, 590.0], [48.5, 590.0], [48.6, 590.0], [48.7, 591.0], [48.8, 591.0], [48.9, 592.0], [49.0, 592.0], [49.1, 593.0], [49.2, 593.0], [49.3, 594.0], [49.4, 595.0], [49.5, 595.0], [49.6, 596.0], [49.7, 596.0], [49.8, 596.0], [49.9, 597.0], [50.0, 597.0], [50.1, 598.0], [50.2, 598.0], [50.3, 599.0], [50.4, 599.0], [50.5, 599.0], [50.6, 599.0], [50.7, 600.0], [50.8, 601.0], [50.9, 601.0], [51.0, 602.0], [51.1, 602.0], [51.2, 602.0], [51.3, 603.0], [51.4, 603.0], [51.5, 604.0], [51.6, 604.0], [51.7, 605.0], [51.8, 605.0], [51.9, 606.0], [52.0, 606.0], [52.1, 606.0], [52.2, 606.0], [52.3, 607.0], [52.4, 608.0], [52.5, 608.0], [52.6, 609.0], [52.7, 609.0], [52.8, 609.0], [52.9, 610.0], [53.0, 611.0], [53.1, 611.0], [53.2, 612.0], [53.3, 613.0], [53.4, 613.0], [53.5, 614.0], [53.6, 614.0], [53.7, 615.0], [53.8, 616.0], [53.9, 616.0], [54.0, 617.0], [54.1, 618.0], [54.2, 618.0], [54.3, 619.0], [54.4, 619.0], [54.5, 620.0], [54.6, 621.0], [54.7, 621.0], [54.8, 622.0], [54.9, 622.0], [55.0, 623.0], [55.1, 623.0], [55.2, 624.0], [55.3, 625.0], [55.4, 626.0], [55.5, 627.0], [55.6, 627.0], [55.7, 628.0], [55.8, 628.0], [55.9, 628.0], [56.0, 629.0], [56.1, 629.0], [56.2, 630.0], [56.3, 630.0], [56.4, 631.0], [56.5, 632.0], [56.6, 632.0], [56.7, 633.0], [56.8, 633.0], [56.9, 634.0], [57.0, 634.0], [57.1, 635.0], [57.2, 635.0], [57.3, 636.0], [57.4, 637.0], [57.5, 637.0], [57.6, 638.0], [57.7, 638.0], [57.8, 638.0], [57.9, 639.0], [58.0, 639.0], [58.1, 639.0], [58.2, 640.0], [58.3, 641.0], [58.4, 641.0], [58.5, 641.0], [58.6, 642.0], [58.7, 642.0], [58.8, 643.0], [58.9, 643.0], [59.0, 644.0], [59.1, 644.0], [59.2, 645.0], [59.3, 646.0], [59.4, 646.0], [59.5, 647.0], [59.6, 647.0], [59.7, 648.0], [59.8, 648.0], [59.9, 649.0], [60.0, 649.0], [60.1, 650.0], [60.2, 650.0], [60.3, 650.0], [60.4, 651.0], [60.5, 651.0], [60.6, 652.0], [60.7, 653.0], [60.8, 653.0], [60.9, 654.0], [61.0, 654.0], [61.1, 654.0], [61.2, 655.0], [61.3, 656.0], [61.4, 657.0], [61.5, 658.0], [61.6, 658.0], [61.7, 658.0], [61.8, 659.0], [61.9, 659.0], [62.0, 660.0], [62.1, 660.0], [62.2, 661.0], [62.3, 662.0], [62.4, 662.0], [62.5, 663.0], [62.6, 663.0], [62.7, 664.0], [62.8, 664.0], [62.9, 665.0], [63.0, 665.0], [63.1, 666.0], [63.2, 666.0], [63.3, 666.0], [63.4, 667.0], [63.5, 667.0], [63.6, 668.0], [63.7, 668.0], [63.8, 669.0], [63.9, 669.0], [64.0, 670.0], [64.1, 671.0], [64.2, 672.0], [64.3, 672.0], [64.4, 672.0], [64.5, 673.0], [64.6, 673.0], [64.7, 674.0], [64.8, 674.0], [64.9, 675.0], [65.0, 675.0], [65.1, 675.0], [65.2, 677.0], [65.3, 677.0], [65.4, 677.0], [65.5, 678.0], [65.6, 679.0], [65.7, 679.0], [65.8, 680.0], [65.9, 680.0], [66.0, 681.0], [66.1, 681.0], [66.2, 682.0], [66.3, 683.0], [66.4, 684.0], [66.5, 684.0], [66.6, 685.0], [66.7, 685.0], [66.8, 686.0], [66.9, 686.0], [67.0, 686.0], [67.1, 687.0], [67.2, 688.0], [67.3, 688.0], [67.4, 689.0], [67.5, 690.0], [67.6, 690.0], [67.7, 691.0], [67.8, 692.0], [67.9, 693.0], [68.0, 694.0], [68.1, 694.0], [68.2, 695.0], [68.3, 696.0], [68.4, 696.0], [68.5, 697.0], [68.6, 698.0], [68.7, 699.0], [68.8, 700.0], [68.9, 701.0], [69.0, 701.0], [69.1, 702.0], [69.2, 702.0], [69.3, 703.0], [69.4, 704.0], [69.5, 705.0], [69.6, 706.0], [69.7, 707.0], [69.8, 708.0], [69.9, 709.0], [70.0, 709.0], [70.1, 709.0], [70.2, 710.0], [70.3, 711.0], [70.4, 711.0], [70.5, 712.0], [70.6, 713.0], [70.7, 714.0], [70.8, 715.0], [70.9, 715.0], [71.0, 715.0], [71.1, 716.0], [71.2, 717.0], [71.3, 718.0], [71.4, 719.0], [71.5, 720.0], [71.6, 721.0], [71.7, 721.0], [71.8, 722.0], [71.9, 723.0], [72.0, 723.0], [72.1, 723.0], [72.2, 724.0], [72.3, 725.0], [72.4, 725.0], [72.5, 726.0], [72.6, 727.0], [72.7, 728.0], [72.8, 729.0], [72.9, 729.0], [73.0, 730.0], [73.1, 731.0], [73.2, 732.0], [73.3, 732.0], [73.4, 733.0], [73.5, 734.0], [73.6, 735.0], [73.7, 737.0], [73.8, 738.0], [73.9, 738.0], [74.0, 739.0], [74.1, 740.0], [74.2, 740.0], [74.3, 741.0], [74.4, 742.0], [74.5, 742.0], [74.6, 743.0], [74.7, 745.0], [74.8, 745.0], [74.9, 746.0], [75.0, 747.0], [75.1, 747.0], [75.2, 748.0], [75.3, 749.0], [75.4, 749.0], [75.5, 750.0], [75.6, 750.0], [75.7, 751.0], [75.8, 752.0], [75.9, 753.0], [76.0, 754.0], [76.1, 755.0], [76.2, 757.0], [76.3, 757.0], [76.4, 758.0], [76.5, 759.0], [76.6, 760.0], [76.7, 760.0], [76.8, 762.0], [76.9, 762.0], [77.0, 763.0], [77.1, 764.0], [77.2, 765.0], [77.3, 767.0], [77.4, 767.0], [77.5, 768.0], [77.6, 770.0], [77.7, 771.0], [77.8, 772.0], [77.9, 773.0], [78.0, 775.0], [78.1, 776.0], [78.2, 777.0], [78.3, 779.0], [78.4, 780.0], [78.5, 781.0], [78.6, 782.0], [78.7, 784.0], [78.8, 786.0], [78.9, 788.0], [79.0, 790.0], [79.1, 791.0], [79.2, 791.0], [79.3, 793.0], [79.4, 797.0], [79.5, 798.0], [79.6, 799.0], [79.7, 801.0], [79.8, 803.0], [79.9, 804.0], [80.0, 805.0], [80.1, 808.0], [80.2, 809.0], [80.3, 809.0], [80.4, 811.0], [80.5, 811.0], [80.6, 813.0], [80.7, 814.0], [80.8, 816.0], [80.9, 819.0], [81.0, 820.0], [81.1, 821.0], [81.2, 822.0], [81.3, 825.0], [81.4, 826.0], [81.5, 826.0], [81.6, 829.0], [81.7, 830.0], [81.8, 831.0], [81.9, 833.0], [82.0, 834.0], [82.1, 835.0], [82.2, 836.0], [82.3, 837.0], [82.4, 840.0], [82.5, 842.0], [82.6, 843.0], [82.7, 844.0], [82.8, 846.0], [82.9, 847.0], [83.0, 849.0], [83.1, 849.0], [83.2, 851.0], [83.3, 852.0], [83.4, 854.0], [83.5, 856.0], [83.6, 857.0], [83.7, 859.0], [83.8, 860.0], [83.9, 862.0], [84.0, 864.0], [84.1, 869.0], [84.2, 871.0], [84.3, 874.0], [84.4, 875.0], [84.5, 877.0], [84.6, 883.0], [84.7, 888.0], [84.8, 892.0], [84.9, 895.0], [85.0, 900.0], [85.1, 910.0], [85.2, 914.0], [85.3, 918.0], [85.4, 923.0], [85.5, 931.0], [85.6, 934.0], [85.7, 938.0], [85.8, 944.0], [85.9, 949.0], [86.0, 954.0], [86.1, 963.0], [86.2, 968.0], [86.3, 975.0], [86.4, 980.0], [86.5, 989.0], [86.6, 994.0], [86.7, 1001.0], [86.8, 1009.0], [86.9, 1019.0], [87.0, 1024.0], [87.1, 1029.0], [87.2, 1033.0], [87.3, 1035.0], [87.4, 1038.0], [87.5, 1043.0], [87.6, 1045.0], [87.7, 1050.0], [87.8, 1056.0], [87.9, 1059.0], [88.0, 1061.0], [88.1, 1062.0], [88.2, 1068.0], [88.3, 1069.0], [88.4, 1073.0], [88.5, 1075.0], [88.6, 1078.0], [88.7, 1083.0], [88.8, 1088.0], [88.9, 1089.0], [89.0, 1092.0], [89.1, 1094.0], [89.2, 1096.0], [89.3, 1099.0], [89.4, 1103.0], [89.5, 1105.0], [89.6, 1110.0], [89.7, 1114.0], [89.8, 1115.0], [89.9, 1117.0], [90.0, 1119.0], [90.1, 1121.0], [90.2, 1121.0], [90.3, 1123.0], [90.4, 1127.0], [90.5, 1130.0], [90.6, 1133.0], [90.7, 1137.0], [90.8, 1140.0], [90.9, 1140.0], [91.0, 1146.0], [91.1, 1149.0], [91.2, 1155.0], [91.3, 1156.0], [91.4, 1159.0], [91.5, 1163.0], [91.6, 1166.0], [91.7, 1168.0], [91.8, 1170.0], [91.9, 1174.0], [92.0, 1177.0], [92.1, 1183.0], [92.2, 1192.0], [92.3, 1198.0], [92.4, 1206.0], [92.5, 1210.0], [92.6, 1211.0], [92.7, 1215.0], [92.8, 1221.0], [92.9, 1227.0], [93.0, 1231.0], [93.1, 1237.0], [93.2, 1240.0], [93.3, 1245.0], [93.4, 1256.0], [93.5, 1263.0], [93.6, 1269.0], [93.7, 1273.0], [93.8, 1277.0], [93.9, 1281.0], [94.0, 1294.0], [94.1, 1300.0], [94.2, 1304.0], [94.3, 1309.0], [94.4, 1312.0], [94.5, 1318.0], [94.6, 1323.0], [94.7, 1327.0], [94.8, 1336.0], [94.9, 1340.0], [95.0, 1355.0], [95.1, 1357.0], [95.2, 1361.0], [95.3, 1365.0], [95.4, 1368.0], [95.5, 1372.0], [95.6, 1378.0], [95.7, 1385.0], [95.8, 1391.0], [95.9, 1398.0], [96.0, 1405.0], [96.1, 1409.0], [96.2, 1411.0], [96.3, 1416.0], [96.4, 1418.0], [96.5, 1433.0], [96.6, 1444.0], [96.7, 1452.0], [96.8, 1465.0], [96.9, 1481.0], [97.0, 1494.0], [97.1, 1506.0], [97.2, 1532.0], [97.3, 1548.0], [97.4, 1554.0], [97.5, 1560.0], [97.6, 1595.0], [97.7, 1609.0], [97.8, 1628.0], [97.9, 1647.0], [98.0, 1674.0], [98.1, 1697.0], [98.2, 1720.0], [98.3, 1746.0], [98.4, 1763.0], [98.5, 1807.0], [98.6, 1844.0], [98.7, 1875.0], [98.8, 1905.0], [98.9, 1922.0], [99.0, 1934.0], [99.1, 1970.0], [99.2, 2013.0], [99.3, 2056.0], [99.4, 2135.0], [99.5, 2175.0], [99.6, 2300.0], [99.7, 2418.0], [99.8, 2609.0], [99.9, 2749.0]], "isOverall": false, "label": "HTTP Request - POST /hammock/add", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Response Time Percentiles"}},
        getOptions: function() {
            return {
                series: {
                    points: { show: false }
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentiles'
                },
                xaxis: {
                    tickDecimals: 1,
                    axisLabel: "Percentiles",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Percentile value in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : %x.2 percentile was %y ms"
                },
                selection: { mode: "xy" },
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentiles"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesPercentiles"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesPercentiles"), dataset, prepareOverviewOptions(options));
        }
};

/**
 * @param elementId Id of element where we display message
 */
function setEmptyGraph(elementId) {
    $(function() {
        $(elementId).text("No graph series with filter="+seriesFilter);
    });
}

// Response times percentiles
function refreshResponseTimePercentiles() {
    var infos = responseTimePercentilesInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimePercentiles");
        return;
    }
    if (isGraph($("#flotResponseTimesPercentiles"))){
        infos.createGraph();
    } else {
        var choiceContainer = $("#choicesResponseTimePercentiles");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesPercentiles", "#overviewResponseTimesPercentiles");
        $('#bodyResponseTimePercentiles .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimeDistributionInfos = {
        data: {"result": {"minY": 1.0, "minX": 0.0, "maxY": 5000.0, "series": [{"data": [[0.0, 12.0], [600.0, 1003.0], [700.0, 1049.0], [800.0, 687.0], [900.0, 276.0], [1000.0, 124.0], [1100.0, 175.0], [1200.0, 164.0], [1300.0, 110.0], [1400.0, 86.0], [1500.0, 61.0], [100.0, 439.0], [1600.0, 31.0], [1700.0, 27.0], [1800.0, 21.0], [1900.0, 26.0], [2000.0, 17.0], [2100.0, 11.0], [2200.0, 14.0], [2300.0, 6.0], [2400.0, 5.0], [2500.0, 1.0], [2600.0, 7.0], [2700.0, 1.0], [3100.0, 2.0], [200.0, 79.0], [300.0, 36.0], [5200.0, 1.0], [400.0, 60.0], [500.0, 469.0]], "isOverall": false, "label": "HTTP Request - GET /hammock/all", "isController": false}, {"data": [[0.0, 5000.0]], "isOverall": false, "label": "HTTP Request -DELETE /hammock/delete/3", "isController": false}, {"data": [[0.0, 996.0], [600.0, 942.0], [700.0, 478.0], [800.0, 144.0], [900.0, 96.0], [1000.0, 149.0], [1100.0, 113.0], [1200.0, 89.0], [1300.0, 72.0], [1400.0, 32.0], [1500.0, 25.0], [100.0, 57.0], [1600.0, 26.0], [1700.0, 12.0], [1800.0, 17.0], [1900.0, 13.0], [2000.0, 13.0], [2100.0, 6.0], [2200.0, 2.0], [2300.0, 5.0], [2400.0, 3.0], [2500.0, 2.0], [2600.0, 3.0], [2800.0, 1.0], [2700.0, 1.0], [3100.0, 1.0], [200.0, 49.0], [3600.0, 2.0], [300.0, 95.0], [400.0, 515.0], [500.0, 1041.0]], "isOverall": false, "label": "HTTP Request - POST /hammock/update", "isController": false}, {"data": [[0.0, 522.0], [600.0, 1019.0], [700.0, 509.0], [800.0, 147.0], [900.0, 98.0], [1000.0, 160.0], [1100.0, 95.0], [1200.0, 111.0], [1300.0, 76.0], [1400.0, 27.0], [1500.0, 30.0], [100.0, 42.0], [1600.0, 35.0], [1700.0, 22.0], [1800.0, 22.0], [1900.0, 9.0], [2000.0, 7.0], [2100.0, 9.0], [2300.0, 2.0], [2200.0, 3.0], [2400.0, 3.0], [2500.0, 4.0], [2600.0, 3.0], [2700.0, 1.0], [2800.0, 2.0], [2900.0, 1.0], [200.0, 35.0], [3200.0, 1.0], [3900.0, 1.0], [4300.0, 1.0], [300.0, 109.0], [400.0, 718.0], [500.0, 1176.0]], "isOverall": false, "label": "HTTP Request - GET /hammock/find/1", "isController": false}, {"data": [[0.0, 968.0], [600.0, 909.0], [700.0, 542.0], [800.0, 267.0], [900.0, 85.0], [1000.0, 132.0], [1100.0, 151.0], [1200.0, 88.0], [1300.0, 92.0], [1400.0, 57.0], [1500.0, 29.0], [100.0, 140.0], [1600.0, 25.0], [1700.0, 16.0], [1800.0, 14.0], [1900.0, 18.0], [2000.0, 11.0], [2100.0, 9.0], [2200.0, 4.0], [2300.0, 5.0], [2400.0, 2.0], [2500.0, 3.0], [2600.0, 4.0], [2800.0, 1.0], [2700.0, 2.0], [2900.0, 1.0], [200.0, 53.0], [3500.0, 2.0], [300.0, 66.0], [400.0, 378.0], [500.0, 926.0]], "isOverall": false, "label": "HTTP Request - POST /hammock/add", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 100, "maxX": 5200.0, "title": "Response Time Distribution"}},
        getOptions: function() {
            var granularity = this.data.result.granularity;
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    barWidth: this.data.result.granularity
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " responses for " + label + " were between " + xval + " and " + (xval + granularity) + " ms";
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimeDistribution"), prepareData(data.result.series, $("#choicesResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshResponseTimeDistribution() {
    var infos = responseTimeDistributionInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeDistribution");
        return;
    }
    if (isGraph($("#flotResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var syntheticResponseTimeDistributionInfos = {
        data: {"result": {"minY": 665.0, "minX": 0.0, "ticks": [[0, "Requests having \nresponse time <= 500ms"], [1, "Requests having \nresponse time > 500ms and <= 1,500ms"], [2, "Requests having \nresponse time > 1,500ms"], [3, "Requests in error"]], "maxY": 13944.0, "series": [{"data": [[0.0, 5391.0]], "color": "#9ACD32", "isOverall": false, "label": "Requests having \nresponse time <= 500ms", "isController": false}, {"data": [[1.0, 13944.0]], "color": "yellow", "isOverall": false, "label": "Requests having \nresponse time > 500ms and <= 1,500ms", "isController": false}, {"data": [[2.0, 665.0]], "color": "orange", "isOverall": false, "label": "Requests having \nresponse time > 1,500ms", "isController": false}, {"data": [[3.0, 5000.0]], "color": "#FF6347", "isOverall": false, "label": "Requests in error", "isController": false}], "supportsControllersDiscrimination": false, "maxX": 3.0, "title": "Synthetic Response Times Distribution"}},
        getOptions: function() {
            return {
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendSyntheticResponseTimeDistribution'
                },
                xaxis:{
                    axisLabel: "Response times ranges",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                    tickLength:0,
                    min:-0.5,
                    max:3.5
                },
                yaxis: {
                    axisLabel: "Number of responses",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                bars : {
                    show: true,
                    align: "center",
                    barWidth: 0.25,
                    fill:.75
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: function(label, xval, yval, flotItem){
                        return yval + " " + label;
                    }
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var options = this.getOptions();
            prepareOptions(options, data);
            options.xaxis.ticks = data.result.ticks;
            $.plot($("#flotSyntheticResponseTimeDistribution"), prepareData(data.result.series, $("#choicesSyntheticResponseTimeDistribution")), options);
        }

};

// Response time distribution
function refreshSyntheticResponseTimeDistribution() {
    var infos = syntheticResponseTimeDistributionInfos;
    prepareSeries(infos.data, true);
    if (isGraph($("#flotSyntheticResponseTimeDistribution"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        $('#footerSyntheticResponseTimeDistribution .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var activeThreadsOverTimeInfos = {
        data: {"result": {"minY": 27.18023255813953, "minX": 1.73685726E12, "maxY": 99.95078570195128, "series": [{"data": [[1.73685732E12, 98.46595184349128], [1.73685744E12, 73.15876052027555], [1.73685726E12, 27.18023255813953], [1.73685738E12, 99.95078570195128]], "isOverall": false, "label": "Thread Group", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73685744E12, "title": "Active Threads Over Time"}},
        getOptions: function() {
            return {
                series: {
                    stack: true,
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 6,
                    show: true,
                    container: '#legendActiveThreadsOverTime'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                selection: {
                    mode: 'xy'
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : At %x there were %y active threads"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesActiveThreadsOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotActiveThreadsOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewActiveThreadsOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Active Threads Over Time
function refreshActiveThreadsOverTime(fixTimestamps) {
    var infos = activeThreadsOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotActiveThreadsOverTime"))) {
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesActiveThreadsOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotActiveThreadsOverTime", "#overviewActiveThreadsOverTime");
        $('#footerActiveThreadsOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var timeVsThreadsInfos = {
        data: {"result": {"minY": 1.0, "minX": 1.0, "maxY": 1153.8333333333333, "series": [{"data": [[2.0, 89.0], [4.0, 110.0], [7.0, 188.33333333333334], [8.0, 182.5], [10.0, 144.0], [11.0, 237.0], [14.0, 416.0], [15.0, 1004.25], [16.0, 756.0], [17.0, 388.0], [18.0, 428.6], [19.0, 233.33333333333334], [22.0, 219.0], [24.0, 310.6666666666667], [25.0, 334.3333333333333], [26.0, 567.0], [27.0, 467.6666666666667], [28.0, 357.5], [29.0, 709.0], [30.0, 487.4], [31.0, 863.0], [33.0, 631.25], [32.0, 333.09090909090907], [34.0, 632.4], [35.0, 700.5], [37.0, 995.25], [36.0, 265.0], [38.0, 456.16666666666663], [40.0, 479.5], [41.0, 607.25], [42.0, 596.0], [43.0, 596.0], [44.0, 698.1000000000001], [45.0, 646.0], [46.0, 726.3333333333334], [47.0, 545.2], [48.0, 927.0], [49.0, 687.5555555555555], [50.0, 431.764705882353], [51.0, 856.0], [53.0, 685.3333333333334], [54.0, 719.0], [55.0, 882.0], [56.0, 664.4285714285714], [57.0, 693.8461538461539], [58.0, 646.1666666666667], [59.0, 587.6666666666666], [61.0, 675.3333333333334], [60.0, 590.0], [62.0, 936.5], [63.0, 594.6], [64.0, 690.6666666666666], [65.0, 910.0], [66.0, 670.3636363636364], [67.0, 1032.5], [68.0, 531.25], [69.0, 729.5714285714286], [70.0, 610.4], [71.0, 894.75], [72.0, 774.6666666666666], [73.0, 389.0], [74.0, 563.4], [75.0, 574.0], [76.0, 507.2307692307693], [77.0, 635.75], [78.0, 709.0769230769232], [79.0, 776.3157894736843], [80.0, 734.7307692307694], [81.0, 684.1666666666666], [82.0, 711.375], [83.0, 649.5555555555555], [84.0, 910.2], [85.0, 989.1333333333334], [87.0, 809.7692307692308], [86.0, 722.1034482758621], [88.0, 1147.8333333333335], [89.0, 785.304347826087], [90.0, 1096.6], [91.0, 730.3333333333334], [92.0, 941.6999999999999], [93.0, 775.6499999999997], [94.0, 1116.8999999999999], [95.0, 858.375], [96.0, 758.1311475409836], [97.0, 768.0], [98.0, 522.3333333333334], [99.0, 835.266233766234], [100.0, 790.5213145987153], [1.0, 75.0]], "isOverall": false, "label": "HTTP Request - GET /hammock/all", "isController": false}, {"data": [[96.04100000000014, 780.3233999999997]], "isOverall": false, "label": "HTTP Request - GET /hammock/all-Aggregated", "isController": false}, {"data": [[2.0, 3.0], [3.0, 2.0], [4.0, 1.5], [5.0, 2.5], [6.0, 2.0], [7.0, 3.6666666666666665], [8.0, 4.5], [9.0, 3.0], [10.0, 3.0], [11.0, 3.3333333333333335], [12.0, 7.333333333333334], [13.0, 11.0], [15.0, 3.5], [16.0, 7.0], [17.0, 3.0], [19.0, 3.5], [20.0, 5.0], [21.0, 5.0], [22.0, 25.23076923076923], [23.0, 8.333333333333334], [24.0, 19.0], [25.0, 4.0], [26.0, 24.0], [27.0, 6.0], [28.0, 3.5], [30.0, 3.0], [31.0, 3.0], [33.0, 2.0], [32.0, 4.375000000000001], [34.0, 4.818181818181818], [35.0, 5.0], [36.0, 14.5], [37.0, 13.333333333333334], [38.0, 7.555555555555556], [39.0, 2.0], [40.0, 6.0], [41.0, 4.166666666666667], [42.0, 3.5], [43.0, 5.0], [45.0, 11.0], [44.0, 3.5], [47.0, 2.4], [46.0, 2.0], [48.0, 6.0], [49.0, 4.333333333333333], [50.0, 3.6], [51.0, 5.333333333333333], [53.0, 5.0], [54.0, 5.3076923076923075], [55.0, 7.0], [56.0, 4.8], [57.0, 4.5], [58.0, 10.11111111111111], [59.0, 2.0], [60.0, 4.4], [61.0, 6.0], [62.0, 5.0], [63.0, 5.75], [66.0, 3.8333333333333335], [67.0, 6.25], [65.0, 4.333333333333333], [64.0, 2.6666666666666665], [69.0, 6.111111111111111], [70.0, 5.8], [71.0, 4.6], [68.0, 3.75], [72.0, 15.0], [73.0, 4.333333333333333], [74.0, 4.428571428571429], [75.0, 7.666666666666666], [76.0, 5.857142857142857], [77.0, 5.6], [78.0, 4.458333333333334], [79.0, 4.827586206896551], [80.0, 4.185185185185184], [81.0, 9.555555555555555], [82.0, 4.058823529411764], [83.0, 3.4444444444444446], [84.0, 6.4], [85.0, 4.894736842105264], [86.0, 3.6538461538461537], [87.0, 4.857142857142857], [89.0, 3.9374999999999996], [91.0, 4.538461538461538], [90.0, 5.0], [88.0, 3.0], [92.0, 3.5], [93.0, 3.7575757575757582], [94.0, 3.444444444444444], [95.0, 3.916666666666667], [96.0, 3.9830508474576276], [97.0, 5.5], [98.0, 6.0], [99.0, 2.9194630872483223], [100.0, 3.8390777275968495], [1.0, 1.0]], "isOverall": false, "label": "HTTP Request -DELETE /hammock/delete/3", "isController": false}, {"data": [[95.96679999999972, 4.008600000000001]], "isOverall": false, "label": "HTTP Request -DELETE /hammock/delete/3-Aggregated", "isController": false}, {"data": [[2.0, 3.0], [3.0, 5.0], [4.0, 3.0], [5.0, 4.0], [6.0, 4.0], [7.0, 11.5], [8.0, 6.0], [9.0, 13.0], [10.0, 33.0], [11.0, 37.333333333333336], [12.0, 51.5], [13.0, 28.0], [15.0, 16.5], [16.0, 73.0], [17.0, 86.5], [19.0, 99.0], [21.0, 106.83333333333333], [22.0, 104.30000000000003], [23.0, 168.0], [24.0, 110.0], [25.0, 125.0], [26.0, 354.0], [27.0, 271.6666666666667], [28.0, 121.0], [30.0, 232.0], [31.0, 154.0], [33.0, 119.0], [32.0, 175.5], [34.0, 327.36363636363643], [35.0, 116.0], [37.0, 57.0], [36.0, 199.0], [38.0, 268.90000000000003], [39.0, 151.0], [40.0, 341.0], [41.0, 156.5], [42.0, 154.5], [43.0, 230.8], [45.0, 452.8], [44.0, 369.5], [47.0, 395.33333333333337], [46.0, 320.0], [48.0, 336.125], [49.0, 228.87499999999997], [50.0, 339.31250000000006], [51.0, 129.5], [52.0, 101.0], [53.0, 190.33333333333334], [54.0, 392.2142857142858], [55.0, 613.5], [56.0, 621.6], [57.0, 220.0], [58.0, 420.3333333333333], [59.0, 392.5], [60.0, 472.8], [61.0, 71.0], [62.0, 560.0], [63.0, 535.25], [65.0, 527.0], [66.0, 319.8333333333333], [67.0, 1001.3333333333333], [64.0, 364.1666666666667], [68.0, 511.2], [69.0, 334.6666666666667], [70.0, 427.3999999999999], [71.0, 630.8], [72.0, 522.4285714285714], [73.0, 230.24999999999997], [74.0, 326.42857142857144], [75.0, 492.6666666666667], [76.0, 400.57142857142856], [77.0, 418.25], [78.0, 529.56], [79.0, 681.1333333333333], [80.0, 616.1153846153845], [81.0, 661.6666666666666], [82.0, 555.0588235294117], [83.0, 487.1111111111111], [84.0, 709.6], [85.0, 777.9473684210525], [86.0, 596.1153846153846], [87.0, 516.3571428571429], [89.0, 608.1875], [91.0, 569.2307692307693], [90.0, 537.0], [88.0, 631.0], [92.0, 544.6666666666667], [93.0, 502.06060606060595], [94.0, 598.1111111111111], [95.0, 752.5833333333333], [96.0, 573.7118644067798], [97.0, 722.125], [98.0, 322.3333333333333], [99.0, 641.2399999999999], [100.0, 587.550879695673], [1.0, 3.5]], "isOverall": false, "label": "HTTP Request - POST /hammock/update", "isController": false}, {"data": [[95.96740000000014, 572.7171999999997]], "isOverall": false, "label": "HTTP Request - POST /hammock/update-Aggregated", "isController": false}, {"data": [[2.0, 2.0], [4.0, 5.0], [6.0, 4.0], [7.0, 13.0], [8.0, 6.5], [9.0, 21.5], [13.0, 21.0], [16.0, 29.0], [17.0, 158.66666666666669], [18.0, 31.25], [19.0, 79.0], [20.0, 163.0], [21.0, 271.0], [22.0, 135.33333333333334], [24.0, 114.0], [25.0, 41.0], [27.0, 111.33333333333333], [28.0, 127.0], [29.0, 318.25], [30.0, 225.0], [31.0, 109.0], [32.0, 221.2], [33.0, 461.33333333333337], [34.0, 244.66666666666666], [35.0, 501.0], [36.0, 287.25], [38.0, 185.4], [39.0, 642.0], [40.0, 70.0], [41.0, 66.0], [42.0, 247.89999999999998], [43.0, 990.5], [44.0, 376.3333333333333], [46.0, 927.5], [47.0, 356.33333333333337], [48.0, 781.0], [49.0, 312.0], [50.0, 398.3846153846154], [51.0, 609.0], [52.0, 331.0], [53.0, 478.3333333333333], [54.0, 515.5], [55.0, 352.0], [56.0, 518.5714285714286], [57.0, 460.8571428571429], [58.0, 458.25], [59.0, 459.4], [60.0, 606.6666666666666], [61.0, 694.0], [62.0, 390.5], [63.0, 513.4], [64.0, 482.42857142857144], [65.0, 1149.5], [66.0, 476.90000000000003], [67.0, 883.6666666666666], [68.0, 823.5], [69.0, 488.7777777777777], [70.0, 540.3], [71.0, 164.0], [72.0, 433.3333333333333], [73.0, 356.6], [74.0, 884.8333333333334], [75.0, 343.0], [76.0, 386.5], [77.0, 745.6666666666666], [78.0, 552.6086956521739], [79.0, 636.65625], [80.0, 546.1304347826087], [83.0, 415.57142857142856], [82.0, 419.5833333333333], [81.0, 525.0], [84.0, 639.75], [85.0, 429.0], [87.0, 811.0], [86.0, 623.5882352941177], [88.0, 1004.0], [89.0, 790.6315789473686], [90.0, 638.0], [91.0, 541.5454545454546], [92.0, 725.0], [93.0, 551.9761904761903], [94.0, 638.8823529411765], [95.0, 681.2272727272729], [96.0, 626.3018867924528], [97.0, 301.0], [98.0, 608.0], [99.0, 689.1019108280257], [100.0, 646.9182359952314], [1.0, 2.0]], "isOverall": false, "label": "HTTP Request - GET /hammock/find/1", "isController": false}, {"data": [[96.06720000000026, 629.3081999999984]], "isOverall": false, "label": "HTTP Request - GET /hammock/find/1-Aggregated", "isController": false}, {"data": [[2.0, 5.0], [4.0, 7.0], [6.0, 12.333333333333334], [7.0, 29.0], [8.0, 32.333333333333336], [9.0, 46.0], [12.0, 54.0], [13.0, 64.5], [15.0, 121.0], [16.0, 59.0], [17.0, 98.5], [19.0, 30.0], [20.0, 287.8], [21.0, 416.3333333333333], [22.0, 295.6], [23.0, 212.0], [24.0, 219.5], [27.0, 133.5], [28.0, 128.16666666666666], [30.0, 264.6666666666667], [33.0, 791.0], [32.0, 236.0], [34.0, 227.875], [36.0, 568.5], [37.0, 503.0], [39.0, 523.0], [38.0, 199.0], [41.0, 186.9090909090909], [40.0, 275.0], [42.0, 341.4], [43.0, 256.0], [44.0, 379.25], [45.0, 343.0], [47.0, 377.0], [46.0, 197.0], [49.0, 273.5], [48.0, 227.33333333333334], [50.0, 326.65], [51.0, 567.3333333333334], [53.0, 474.5], [55.0, 459.5], [54.0, 336.0], [56.0, 620.8333333333333], [57.0, 469.84615384615387], [58.0, 612.0], [59.0, 433.0], [60.0, 606.3333333333334], [63.0, 505.0], [64.0, 586.4444444444445], [65.0, 482.3333333333333], [66.0, 366.375], [67.0, 745.1428571428571], [68.0, 741.25], [69.0, 667.6], [70.0, 730.2857142857142], [71.0, 665.75], [72.0, 480.3333333333333], [73.0, 457.0], [74.0, 606.9], [75.0, 435.8], [76.0, 409.3846153846154], [77.0, 768.0], [79.0, 681.9285714285714], [78.0, 862.5357142857144], [83.0, 521.5], [82.0, 555.7333333333333], [81.0, 572.5], [80.0, 580.2105263157895], [84.0, 745.0], [86.0, 562.9090909090907], [87.0, 794.5], [85.0, 654.7142857142857], [88.0, 504.4], [89.0, 687.6470588235293], [90.0, 1153.8333333333333], [91.0, 784.9090909090909], [92.0, 661.25], [94.0, 826.6363636363636], [95.0, 553.2222222222222], [93.0, 585.0232558139537], [96.0, 630.7656250000001], [97.0, 410.7142857142857], [98.0, 497.09090909090907], [99.0, 647.0135135135138], [100.0, 608.7318581965261], [1.0, 7.5]], "isOverall": false, "label": "HTTP Request - POST /hammock/add", "isController": false}, {"data": [[96.04399999999983, 599.9787999999991]], "isOverall": false, "label": "HTTP Request - POST /hammock/add-Aggregated", "isController": false}], "supportsControllersDiscrimination": true, "maxX": 100.0, "title": "Time VS Threads"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    axisLabel: "Number of active threads",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response times in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: { noColumns: 2,show: true, container: '#legendTimeVsThreads' },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s: At %x.2 active threads, Average response time was %y.2 ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesTimeVsThreads"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotTimesVsThreads"), dataset, options);
            // setup overview
            $.plot($("#overviewTimesVsThreads"), dataset, prepareOverviewOptions(options));
        }
};

// Time vs threads
function refreshTimeVsThreads(){
    var infos = timeVsThreadsInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTimeVsThreads");
        return;
    }
    if(isGraph($("#flotTimesVsThreads"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTimeVsThreads");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTimesVsThreads", "#overviewTimesVsThreads");
        $('#footerTimeVsThreads .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var bytesThroughputOverTimeInfos = {
        data : {"result": {"minY": 539.7833333333333, "minX": 1.73685726E12, "maxY": 2.64940654E7, "series": [{"data": [[1.73685732E12, 1.9292873916666668E7], [1.73685744E12, 6256893.866666666], [1.73685726E12, 373505.4166666667], [1.73685738E12, 2.64940654E7]], "isOverall": false, "label": "Bytes received per second", "isController": false}, {"data": [[1.73685732E12, 35822.083333333336], [1.73685744E12, 8944.85], [1.73685726E12, 539.7833333333333], [1.73685738E12, 39109.95]], "isOverall": false, "label": "Bytes sent per second", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73685744E12, "title": "Bytes Throughput Over Time"}},
        getOptions : function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity) ,
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Bytes / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendBytesThroughputOverTime'
                },
                selection: {
                    mode: "xy"
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y"
                }
            };
        },
        createGraph : function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesBytesThroughputOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotBytesThroughputOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewBytesThroughputOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Bytes throughput Over Time
function refreshBytesThroughputOverTime(fixTimestamps) {
    var infos = bytesThroughputOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotBytesThroughputOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesBytesThroughputOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotBytesThroughputOverTime", "#overviewBytesThroughputOverTime");
        $('#footerBytesThroughputOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var responseTimesOverTimeInfos = {
        data: {"result": {"minY": 3.1294777729823084, "minX": 1.73685726E12, "maxY": 802.7352531351596, "series": [{"data": [[1.73685732E12, 802.7352531351596], [1.73685744E12, 661.31392931393], [1.73685726E12, 679.6041666666665], [1.73685738E12, 786.287748058671]], "isOverall": false, "label": "HTTP Request - GET /hammock/all", "isController": false}, {"data": [[1.73685732E12, 4.846774193548389], [1.73685744E12, 3.69398907103825], [1.73685726E12, 21.038461538461537], [1.73685738E12, 3.1294777729823084]], "isOverall": false, "label": "HTTP Request -DELETE /hammock/delete/3", "isController": false}, {"data": [[1.73685732E12, 602.2580645161294], [1.73685744E12, 464.6284153005456], [1.73685726E12, 275.6538461538462], [1.73685738E12, 574.785498489426]], "isOverall": false, "label": "HTTP Request - POST /hammock/update", "isController": false}, {"data": [[1.73685732E12, 670.7924263674619], [1.73685744E12, 485.5415019762849], [1.73685726E12, 283.8048780487805], [1.73685738E12, 628.5203111495248]], "isOverall": false, "label": "HTTP Request - GET /hammock/find/1", "isController": false}, {"data": [[1.73685732E12, 627.8648775894538], [1.73685744E12, 512.6994328922491], [1.73685726E12, 463.8064516129033], [1.73685738E12, 596.1627806563037]], "isOverall": false, "label": "HTTP Request - POST /hammock/add", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73685744E12, "title": "Response Time Over Time"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average response time was %y ms"
                }
            };
        },
        createGraph: function() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Times Over Time
function refreshResponseTimeOverTime(fixTimestamps) {
    var infos = responseTimesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyResponseTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimesOverTime"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimesOverTime", "#overviewResponseTimesOverTime");
        $('#footerResponseTimesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var latenciesOverTimeInfos = {
        data: {"result": {"minY": 3.0487699611566694, "minX": 1.73685726E12, "maxY": 785.047375754761, "series": [{"data": [[1.73685732E12, 785.047375754761], [1.73685744E12, 634.964656964657], [1.73685726E12, 647.4374999999999], [1.73685738E12, 764.1367558239859]], "isOverall": false, "label": "HTTP Request - GET /hammock/all", "isController": false}, {"data": [[1.73685732E12, 4.760436432637565], [1.73685744E12, 3.6029143897996327], [1.73685726E12, 20.53846153846154], [1.73685738E12, 3.0487699611566694]], "isOverall": false, "label": "HTTP Request -DELETE /hammock/delete/3", "isController": false}, {"data": [[1.73685732E12, 602.18311195446], [1.73685744E12, 464.5610200364304], [1.73685726E12, 275.4615384615385], [1.73685738E12, 574.7160120845917]], "isOverall": false, "label": "HTTP Request - POST /hammock/update", "isController": false}, {"data": [[1.73685732E12, 670.7050023375409], [1.73685744E12, 485.48221343873576], [1.73685726E12, 283.5121951219512], [1.73685738E12, 628.4563526361268]], "isOverall": false, "label": "HTTP Request - GET /hammock/find/1", "isController": false}, {"data": [[1.73685732E12, 627.7725988700566], [1.73685744E12, 512.5916824196598], [1.73685726E12, 463.0322580645161], [1.73685738E12, 596.0984455958546]], "isOverall": false, "label": "HTTP Request - POST /hammock/add", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73685744E12, "title": "Latencies Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average response latencies in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendLatenciesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average latency was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesLatenciesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotLatenciesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewLatenciesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Latencies Over Time
function refreshLatenciesOverTime(fixTimestamps) {
    var infos = latenciesOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyLatenciesOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotLatenciesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesLatenciesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotLatenciesOverTime", "#overviewLatenciesOverTime");
        $('#footerLatenciesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var connectTimeOverTimeInfos = {
        data: {"result": {"minY": 0.0, "minX": 1.73685726E12, "maxY": 5.291666666666666, "series": [{"data": [[1.73685732E12, 0.12354853692522084], [1.73685744E12, 0.0], [1.73685726E12, 5.291666666666666], [1.73685738E12, 0.05004314063848152]], "isOverall": false, "label": "HTTP Request - GET /hammock/all", "isController": false}, {"data": [[1.73685732E12, 0.001423149905123339], [1.73685744E12, 0.0], [1.73685726E12, 0.0], [1.73685738E12, 0.001726370306430731]], "isOverall": false, "label": "HTTP Request -DELETE /hammock/delete/3", "isController": false}, {"data": [[1.73685732E12, 4.743833017077801E-4], [1.73685744E12, 0.0], [1.73685726E12, 0.0], [1.73685738E12, 0.003021148036253775]], "isOverall": false, "label": "HTTP Request - POST /hammock/update", "isController": false}, {"data": [[1.73685732E12, 0.0], [1.73685744E12, 0.0], [1.73685726E12, 0.0], [1.73685738E12, 0.0017286084701815046]], "isOverall": false, "label": "HTTP Request - GET /hammock/find/1", "isController": false}, {"data": [[1.73685732E12, 0.0], [1.73685744E12, 0.0018903591682419667], [1.73685726E12, 0.0], [1.73685738E12, 0.0021588946459412863]], "isOverall": false, "label": "HTTP Request - POST /hammock/add", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73685744E12, "title": "Connect Time Over Time"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getConnectTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Average Connect Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendConnectTimeOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Average connect time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesConnectTimeOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotConnectTimeOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewConnectTimeOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Connect Time Over Time
function refreshConnectTimeOverTime(fixTimestamps) {
    var infos = connectTimeOverTimeInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyConnectTimeOverTime");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotConnectTimeOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesConnectTimeOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotConnectTimeOverTime", "#overviewConnectTimeOverTime");
        $('#footerConnectTimeOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var responseTimePercentilesOverTimeInfos = {
        data: {"result": {"minY": 2.0, "minX": 1.73685726E12, "maxY": 5221.0, "series": [{"data": [[1.73685732E12, 5221.0], [1.73685744E12, 2289.0], [1.73685726E12, 1409.0], [1.73685738E12, 2702.0]], "isOverall": false, "label": "Max", "isController": false}, {"data": [[1.73685732E12, 4.0], [1.73685744E12, 2.0], [1.73685726E12, 21.0], [1.73685738E12, 3.0]], "isOverall": false, "label": "Min", "isController": false}, {"data": [[1.73685732E12, 1233.5], [1.73685744E12, 861.8000000000002], [1.73685726E12, 999.7000000000003], [1.73685738E12, 1092.0]], "isOverall": false, "label": "90th percentile", "isController": false}, {"data": [[1.73685732E12, 2123.25], [1.73685744E12, 1596.4799999999982], [1.73685726E12, 1339.44], [1.73685738E12, 1790.3400000000001]], "isOverall": false, "label": "99th percentile", "isController": false}, {"data": [[1.73685732E12, 642.0], [1.73685744E12, 546.0], [1.73685726E12, 386.0], [1.73685738E12, 626.0]], "isOverall": false, "label": "Median", "isController": false}, {"data": [[1.73685732E12, 1482.75], [1.73685744E12, 1086.3999999999996], [1.73685726E12, 1151.0500000000002], [1.73685738E12, 1294.699999999999]], "isOverall": false, "label": "95th percentile", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73685744E12, "title": "Response Time Percentiles Over Time (successful requests only)"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true,
                        fill: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Response Time in ms",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: '#legendResponseTimePercentilesOverTime'
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s : at %x Response time was %y ms"
                }
            };
        },
        createGraph: function () {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesResponseTimePercentilesOverTime"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotResponseTimePercentilesOverTime"), dataset, options);
            // setup overview
            $.plot($("#overviewResponseTimePercentilesOverTime"), dataset, prepareOverviewOptions(options));
        }
};

// Response Time Percentiles Over Time
function refreshResponseTimePercentilesOverTime(fixTimestamps) {
    var infos = responseTimePercentilesOverTimeInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotResponseTimePercentilesOverTime"))) {
        infos.createGraph();
    }else {
        var choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimePercentilesOverTime", "#overviewResponseTimePercentilesOverTime");
        $('#footerResponseTimePercentilesOverTime .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var responseTimeVsRequestInfos = {
    data: {"result": {"minY": 2.0, "minX": 36.0, "maxY": 1271.0, "series": [{"data": [[36.0, 264.5], [66.0, 271.0], [70.0, 585.0], [69.0, 1040.0], [73.0, 643.0], [76.0, 724.5], [82.0, 1271.0], [100.0, 1014.0], [103.0, 850.0], [115.0, 699.0], [117.0, 1058.0], [118.0, 840.0], [122.0, 555.0], [134.0, 1048.0], [136.0, 825.0], [141.0, 855.0], [140.0, 778.0], [151.0, 728.0], [145.0, 709.0], [155.0, 564.0], [153.0, 990.0], [154.0, 763.5], [156.0, 639.0], [160.0, 680.0], [165.0, 770.5], [166.0, 715.0], [162.0, 734.0], [161.0, 581.0], [175.0, 662.0], [173.0, 634.0], [168.0, 740.0], [169.0, 746.0], [172.0, 673.0], [170.0, 831.5], [178.0, 713.0], [180.0, 648.0], [179.0, 708.5], [177.0, 688.5], [182.0, 628.0], [181.0, 692.5], [176.0, 648.5], [191.0, 638.0], [184.0, 694.5], [187.0, 786.0], [186.0, 656.0], [192.0, 614.0], [198.0, 608.0], [193.0, 605.5], [199.0, 630.0], [196.0, 823.0], [194.0, 619.0], [195.0, 575.0], [207.0, 588.0], [203.0, 601.0], [200.0, 625.0], [204.0, 679.0], [201.0, 648.0], [206.0, 260.0], [209.0, 604.0], [208.0, 604.0], [214.0, 543.0], [210.0, 595.0], [215.0, 576.0], [213.0, 590.5], [212.0, 458.5], [219.0, 545.0], [217.0, 569.0], [222.0, 518.0], [216.0, 568.5], [220.0, 250.0], [221.0, 514.0], [225.0, 585.0], [227.0, 572.0], [231.0, 475.0], [229.0, 618.0], [226.0, 517.5], [239.0, 537.5], [236.0, 531.5], [233.0, 535.0], [250.0, 533.5], [253.0, 497.0], [248.0, 511.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[66.0, 18.0], [70.0, 11.0], [69.0, 3.0], [73.0, 9.5], [76.0, 7.5], [82.0, 4.0], [100.0, 7.0], [103.0, 2.0], [115.0, 6.0], [117.0, 5.0], [118.0, 3.0], [122.0, 7.5], [134.0, 4.0], [136.0, 4.0], [141.0, 3.0], [140.0, 3.0], [151.0, 5.0], [145.0, 3.0], [155.0, 4.0], [153.0, 4.0], [154.0, 3.0], [156.0, 3.0], [160.0, 6.0], [165.0, 3.0], [166.0, 3.0], [162.0, 3.0], [161.0, 3.0], [175.0, 4.0], [173.0, 5.0], [168.0, 3.0], [169.0, 3.0], [172.0, 3.0], [170.0, 2.0], [178.0, 4.0], [180.0, 3.0], [179.0, 3.0], [177.0, 3.0], [182.0, 3.5], [181.0, 3.0], [176.0, 3.5], [191.0, 3.0], [184.0, 3.5], [187.0, 3.0], [186.0, 3.0], [192.0, 4.0], [198.0, 3.0], [193.0, 3.0], [199.0, 3.0], [196.0, 3.0], [194.0, 3.0], [195.0, 3.0], [207.0, 3.0], [203.0, 3.0], [200.0, 3.0], [204.0, 3.0], [201.0, 3.0], [206.0, 3.0], [209.0, 4.0], [208.0, 3.0], [214.0, 3.0], [210.0, 3.0], [215.0, 3.0], [213.0, 3.0], [212.0, 3.0], [219.0, 3.0], [217.0, 3.0], [222.0, 3.0], [216.0, 3.0], [220.0, 3.0], [221.0, 3.0], [225.0, 4.0], [227.0, 3.0], [231.0, 3.0], [229.0, 3.0], [226.0, 3.0], [239.0, 3.0], [236.0, 3.0], [233.0, 2.0], [250.0, 4.0], [253.0, 3.0], [248.0, 3.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 253.0, "title": "Response Time Vs Request"}},
    getOptions: function() {
        return {
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Response Time in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: {
                noColumns: 2,
                show: true,
                container: '#legendResponseTimeVsRequest'
            },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median response time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesResponseTimeVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotResponseTimeVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewResponseTimeVsRequest"), dataset, prepareOverviewOptions(options));

    }
};

// Response Time vs Request
function refreshResponseTimeVsRequest() {
    var infos = responseTimeVsRequestInfos;
    prepareSeries(infos.data);
    if (isGraph($("#flotResponseTimeVsRequest"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesResponseTimeVsRequest");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotResponseTimeVsRequest", "#overviewResponseTimeVsRequest");
        $('#footerResponseRimeVsRequest .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};


var latenciesVsRequestInfos = {
    data: {"result": {"minY": 2.0, "minX": 36.0, "maxY": 1264.0, "series": [{"data": [[36.0, 264.0], [66.0, 268.0], [70.0, 585.0], [69.0, 1040.0], [73.0, 643.0], [76.0, 724.5], [82.0, 1264.0], [100.0, 1014.0], [103.0, 846.5], [115.0, 699.0], [117.0, 1058.0], [118.0, 820.0], [122.0, 555.0], [134.0, 1048.0], [136.0, 825.0], [141.0, 849.0], [140.0, 775.0], [151.0, 723.0], [145.0, 696.5], [155.0, 564.0], [153.0, 984.0], [154.0, 760.0], [156.0, 639.0], [160.0, 672.5], [165.0, 762.0], [166.0, 709.0], [162.0, 728.0], [161.0, 578.0], [175.0, 660.0], [173.0, 629.0], [168.0, 739.0], [169.0, 746.0], [172.0, 664.0], [170.0, 825.5], [178.0, 713.0], [180.0, 639.0], [179.0, 703.5], [177.0, 683.0], [182.0, 628.0], [181.0, 687.0], [176.0, 648.5], [191.0, 637.0], [184.0, 692.0], [187.0, 786.0], [186.0, 643.0], [192.0, 608.0], [198.0, 604.0], [193.0, 596.5], [199.0, 629.0], [196.0, 823.0], [194.0, 609.0], [195.0, 572.0], [207.0, 579.0], [203.0, 598.0], [200.0, 616.0], [204.0, 675.0], [201.0, 641.0], [206.0, 249.0], [209.0, 594.0], [208.0, 596.0], [214.0, 534.5], [210.0, 591.0], [215.0, 574.0], [213.0, 589.0], [212.0, 456.5], [219.0, 544.0], [217.0, 568.5], [222.0, 516.0], [216.0, 568.0], [220.0, 235.5], [221.0, 506.0], [225.0, 578.5], [227.0, 567.0], [231.0, 475.0], [229.0, 616.0], [226.0, 515.0], [239.0, 532.0], [236.0, 529.0], [233.0, 535.0], [250.0, 529.5], [253.0, 493.0], [248.0, 511.0]], "isOverall": false, "label": "Successes", "isController": false}, {"data": [[66.0, 18.0], [70.0, 11.0], [69.0, 3.0], [73.0, 9.5], [76.0, 7.0], [82.0, 4.0], [100.0, 7.0], [103.0, 2.0], [115.0, 6.0], [117.0, 4.5], [118.0, 3.0], [122.0, 7.5], [134.0, 4.0], [136.0, 4.0], [141.0, 3.0], [140.0, 3.0], [151.0, 5.0], [145.0, 3.0], [155.0, 4.0], [153.0, 3.5], [154.0, 3.0], [156.0, 3.0], [160.0, 6.0], [165.0, 3.0], [166.0, 3.0], [162.0, 3.0], [161.0, 3.0], [175.0, 4.0], [173.0, 5.0], [168.0, 3.0], [169.0, 3.0], [172.0, 3.0], [170.0, 2.0], [178.0, 4.0], [180.0, 3.0], [179.0, 3.0], [177.0, 3.0], [182.0, 3.0], [181.0, 3.0], [176.0, 3.0], [191.0, 3.0], [184.0, 3.5], [187.0, 3.0], [186.0, 3.0], [192.0, 4.0], [198.0, 3.0], [193.0, 3.0], [199.0, 3.0], [196.0, 3.0], [194.0, 3.0], [195.0, 3.0], [207.0, 3.0], [203.0, 3.0], [200.0, 3.0], [204.0, 2.5], [201.0, 3.0], [206.0, 3.0], [209.0, 4.0], [208.0, 3.0], [214.0, 3.0], [210.0, 3.0], [215.0, 2.0], [213.0, 3.0], [212.0, 3.0], [219.0, 3.0], [217.0, 3.0], [222.0, 3.0], [216.0, 3.0], [220.0, 3.0], [221.0, 3.0], [225.0, 3.5], [227.0, 3.0], [231.0, 3.0], [229.0, 3.0], [226.0, 3.0], [239.0, 3.0], [236.0, 3.0], [233.0, 2.0], [250.0, 4.0], [253.0, 2.0], [248.0, 2.0]], "isOverall": false, "label": "Failures", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 1000, "maxX": 253.0, "title": "Latencies Vs Request"}},
    getOptions: function() {
        return{
            series: {
                lines: {
                    show: false
                },
                points: {
                    show: true
                }
            },
            xaxis: {
                axisLabel: "Global number of requests per second",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            yaxis: {
                axisLabel: "Median Latency in ms",
                axisLabelUseCanvas: true,
                axisLabelFontSizePixels: 12,
                axisLabelFontFamily: 'Verdana, Arial',
                axisLabelPadding: 20,
            },
            legend: { noColumns: 2,show: true, container: '#legendLatencyVsRequest' },
            selection: {
                mode: 'xy'
            },
            grid: {
                hoverable: true // IMPORTANT! this is needed for tooltip to work
            },
            tooltip: true,
            tooltipOpts: {
                content: "%s : Median Latency time at %x req/s was %y ms"
            },
            colors: ["#9ACD32", "#FF6347"]
        };
    },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesLatencyVsRequest"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotLatenciesVsRequest"), dataset, options);
        // setup overview
        $.plot($("#overviewLatenciesVsRequest"), dataset, prepareOverviewOptions(options));
    }
};

// Latencies vs Request
function refreshLatenciesVsRequest() {
        var infos = latenciesVsRequestInfos;
        prepareSeries(infos.data);
        if(isGraph($("#flotLatenciesVsRequest"))){
            infos.createGraph();
        }else{
            var choiceContainer = $("#choicesLatencyVsRequest");
            createLegend(choiceContainer, infos);
            infos.createGraph();
            setGraphZoomable("#flotLatenciesVsRequest", "#overviewLatenciesVsRequest");
            $('#footerLatenciesVsRequest .legendColorBox > div').each(function(i){
                $(this).clone().prependTo(choiceContainer.find("li").eq(i));
            });
        }
};

var hitsPerSecondInfos = {
        data: {"result": {"minY": 3.533333333333333, "minX": 1.73685726E12, "maxY": 193.01666666666668, "series": [{"data": [[1.73685732E12, 178.2], [1.73685744E12, 41.916666666666664], [1.73685726E12, 3.533333333333333], [1.73685738E12, 193.01666666666668]], "isOverall": false, "label": "hitsPerSecond", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73685744E12, "title": "Hits Per Second"}},
        getOptions: function() {
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of hits / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendHitsPerSecond"
                },
                selection: {
                    mode : 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y.2 hits/sec"
                }
            };
        },
        createGraph: function createGraph() {
            var data = this.data;
            var dataset = prepareData(data.result.series, $("#choicesHitsPerSecond"));
            var options = this.getOptions();
            prepareOptions(options, data);
            $.plot($("#flotHitsPerSecond"), dataset, options);
            // setup overview
            $.plot($("#overviewHitsPerSecond"), dataset, prepareOverviewOptions(options));
        }
};

// Hits per second
function refreshHitsPerSecond(fixTimestamps) {
    var infos = hitsPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if (isGraph($("#flotHitsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesHitsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotHitsPerSecond", "#overviewHitsPerSecond");
        $('#footerHitsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
}

var codesPerSecondInfos = {
        data: {"result": {"minY": 0.43333333333333335, "minX": 1.73685726E12, "maxY": 115.81666666666666, "series": [{"data": [[1.73685732E12, 106.66666666666667], [1.73685744E12, 25.6], [1.73685726E12, 1.9166666666666667], [1.73685738E12, 115.81666666666666]], "isOverall": false, "label": "200", "isController": false}, {"data": [[1.73685732E12, 35.4], [1.73685744E12, 8.816666666666666], [1.73685726E12, 0.5166666666666667], [1.73685738E12, 38.6]], "isOverall": false, "label": "201", "isController": false}, {"data": [[1.73685732E12, 35.13333333333333], [1.73685744E12, 9.15], [1.73685726E12, 0.43333333333333335], [1.73685738E12, 38.61666666666667]], "isOverall": false, "label": "404", "isController": false}], "supportsControllersDiscrimination": false, "granularity": 60000, "maxX": 1.73685744E12, "title": "Codes Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of responses / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendCodesPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "Number of Response Codes %s at %x was %y.2 responses / sec"
                }
            };
        },
    createGraph: function() {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesCodesPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotCodesPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewCodesPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Codes per second
function refreshCodesPerSecond(fixTimestamps) {
    var infos = codesPerSecondInfos;
    prepareSeries(infos.data);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotCodesPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesCodesPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotCodesPerSecond", "#overviewCodesPerSecond");
        $('#footerCodesPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var transactionsPerSecondInfos = {
        data: {"result": {"minY": 0.43333333333333335, "minX": 1.73685726E12, "maxY": 38.63333333333333, "series": [{"data": [[1.73685732E12, 35.65], [1.73685744E12, 8.433333333333334], [1.73685726E12, 0.6833333333333333], [1.73685738E12, 38.56666666666667]], "isOverall": false, "label": "HTTP Request - GET /hammock/find/1-success", "isController": false}, {"data": [[1.73685732E12, 35.88333333333333], [1.73685744E12, 8.016666666666667], [1.73685726E12, 0.8], [1.73685738E12, 38.63333333333333]], "isOverall": false, "label": "HTTP Request - GET /hammock/all-success", "isController": false}, {"data": [[1.73685732E12, 35.13333333333333], [1.73685744E12, 9.15], [1.73685726E12, 0.43333333333333335], [1.73685738E12, 38.61666666666667]], "isOverall": false, "label": "HTTP Request -DELETE /hammock/delete/3-failure", "isController": false}, {"data": [[1.73685732E12, 35.4], [1.73685744E12, 8.816666666666666], [1.73685726E12, 0.5166666666666667], [1.73685738E12, 38.6]], "isOverall": false, "label": "HTTP Request - POST /hammock/add-success", "isController": false}, {"data": [[1.73685732E12, 35.13333333333333], [1.73685744E12, 9.15], [1.73685726E12, 0.43333333333333335], [1.73685738E12, 38.61666666666667]], "isOverall": false, "label": "HTTP Request - POST /hammock/update-success", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73685744E12, "title": "Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTransactionsPerSecond"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                }
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTransactionsPerSecond"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTransactionsPerSecond"), dataset, options);
        // setup overview
        $.plot($("#overviewTransactionsPerSecond"), dataset, prepareOverviewOptions(options));
    }
};

// Transactions per second
function refreshTransactionsPerSecond(fixTimestamps) {
    var infos = transactionsPerSecondInfos;
    prepareSeries(infos.data);
    if(infos.data.result.series.length == 0) {
        setEmptyGraph("#bodyTransactionsPerSecond");
        return;
    }
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTransactionsPerSecond"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTransactionsPerSecond");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTransactionsPerSecond", "#overviewTransactionsPerSecond");
        $('#footerTransactionsPerSecond .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

var totalTPSInfos = {
        data: {"result": {"minY": 0.43333333333333335, "minX": 1.73685726E12, "maxY": 154.41666666666666, "series": [{"data": [[1.73685732E12, 142.06666666666666], [1.73685744E12, 34.416666666666664], [1.73685726E12, 2.433333333333333], [1.73685738E12, 154.41666666666666]], "isOverall": false, "label": "Transaction-success", "isController": false}, {"data": [[1.73685732E12, 35.13333333333333], [1.73685744E12, 9.15], [1.73685726E12, 0.43333333333333335], [1.73685738E12, 38.61666666666667]], "isOverall": false, "label": "Transaction-failure", "isController": false}], "supportsControllersDiscrimination": true, "granularity": 60000, "maxX": 1.73685744E12, "title": "Total Transactions Per Second"}},
        getOptions: function(){
            return {
                series: {
                    lines: {
                        show: true
                    },
                    points: {
                        show: true
                    }
                },
                xaxis: {
                    mode: "time",
                    timeformat: getTimeFormat(this.data.result.granularity),
                    axisLabel: getElapsedTimeLabel(this.data.result.granularity),
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20,
                },
                yaxis: {
                    axisLabel: "Number of transactions / sec",
                    axisLabelUseCanvas: true,
                    axisLabelFontSizePixels: 12,
                    axisLabelFontFamily: 'Verdana, Arial',
                    axisLabelPadding: 20
                },
                legend: {
                    noColumns: 2,
                    show: true,
                    container: "#legendTotalTPS"
                },
                selection: {
                    mode: 'xy'
                },
                grid: {
                    hoverable: true // IMPORTANT! this is needed for tooltip to
                                    // work
                },
                tooltip: true,
                tooltipOpts: {
                    content: "%s at %x was %y transactions / sec"
                },
                colors: ["#9ACD32", "#FF6347"]
            };
        },
    createGraph: function () {
        var data = this.data;
        var dataset = prepareData(data.result.series, $("#choicesTotalTPS"));
        var options = this.getOptions();
        prepareOptions(options, data);
        $.plot($("#flotTotalTPS"), dataset, options);
        // setup overview
        $.plot($("#overviewTotalTPS"), dataset, prepareOverviewOptions(options));
    }
};

// Total Transactions per second
function refreshTotalTPS(fixTimestamps) {
    var infos = totalTPSInfos;
    // We want to ignore seriesFilter
    prepareSeries(infos.data, false, true);
    if(fixTimestamps) {
        fixTimeStamps(infos.data.result.series, 7200000);
    }
    if(isGraph($("#flotTotalTPS"))){
        infos.createGraph();
    }else{
        var choiceContainer = $("#choicesTotalTPS");
        createLegend(choiceContainer, infos);
        infos.createGraph();
        setGraphZoomable("#flotTotalTPS", "#overviewTotalTPS");
        $('#footerTotalTPS .legendColorBox > div').each(function(i){
            $(this).clone().prependTo(choiceContainer.find("li").eq(i));
        });
    }
};

// Collapse the graph matching the specified DOM element depending the collapsed
// status
function collapse(elem, collapsed){
    if(collapsed){
        $(elem).parent().find(".fa-chevron-up").removeClass("fa-chevron-up").addClass("fa-chevron-down");
    } else {
        $(elem).parent().find(".fa-chevron-down").removeClass("fa-chevron-down").addClass("fa-chevron-up");
        if (elem.id == "bodyBytesThroughputOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshBytesThroughputOverTime(true);
            }
            document.location.href="#bytesThroughputOverTime";
        } else if (elem.id == "bodyLatenciesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesOverTime(true);
            }
            document.location.href="#latenciesOverTime";
        } else if (elem.id == "bodyCustomGraph") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCustomGraph(true);
            }
            document.location.href="#responseCustomGraph";
        } else if (elem.id == "bodyConnectTimeOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshConnectTimeOverTime(true);
            }
            document.location.href="#connectTimeOverTime";
        } else if (elem.id == "bodyResponseTimePercentilesOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimePercentilesOverTime(true);
            }
            document.location.href="#responseTimePercentilesOverTime";
        } else if (elem.id == "bodyResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeDistribution();
            }
            document.location.href="#responseTimeDistribution" ;
        } else if (elem.id == "bodySyntheticResponseTimeDistribution") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshSyntheticResponseTimeDistribution();
            }
            document.location.href="#syntheticResponseTimeDistribution" ;
        } else if (elem.id == "bodyActiveThreadsOverTime") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshActiveThreadsOverTime(true);
            }
            document.location.href="#activeThreadsOverTime";
        } else if (elem.id == "bodyTimeVsThreads") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTimeVsThreads();
            }
            document.location.href="#timeVsThreads" ;
        } else if (elem.id == "bodyCodesPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshCodesPerSecond(true);
            }
            document.location.href="#codesPerSecond";
        } else if (elem.id == "bodyTransactionsPerSecond") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTransactionsPerSecond(true);
            }
            document.location.href="#transactionsPerSecond";
        } else if (elem.id == "bodyTotalTPS") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshTotalTPS(true);
            }
            document.location.href="#totalTPS";
        } else if (elem.id == "bodyResponseTimeVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshResponseTimeVsRequest();
            }
            document.location.href="#responseTimeVsRequest";
        } else if (elem.id == "bodyLatenciesVsRequest") {
            if (isGraph($(elem).find('.flot-chart-content')) == false) {
                refreshLatenciesVsRequest();
            }
            document.location.href="#latencyVsRequest";
        }
    }
}

/*
 * Activates or deactivates all series of the specified graph (represented by id parameter)
 * depending on checked argument.
 */
function toggleAll(id, checked){
    var placeholder = document.getElementById(id);

    var cases = $(placeholder).find(':checkbox');
    cases.prop('checked', checked);
    $(cases).parent().children().children().toggleClass("legend-disabled", !checked);

    var choiceContainer;
    if ( id == "choicesBytesThroughputOverTime"){
        choiceContainer = $("#choicesBytesThroughputOverTime");
        refreshBytesThroughputOverTime(false);
    } else if(id == "choicesResponseTimesOverTime"){
        choiceContainer = $("#choicesResponseTimesOverTime");
        refreshResponseTimeOverTime(false);
    }else if(id == "choicesResponseCustomGraph"){
        choiceContainer = $("#choicesResponseCustomGraph");
        refreshCustomGraph(false);
    } else if ( id == "choicesLatenciesOverTime"){
        choiceContainer = $("#choicesLatenciesOverTime");
        refreshLatenciesOverTime(false);
    } else if ( id == "choicesConnectTimeOverTime"){
        choiceContainer = $("#choicesConnectTimeOverTime");
        refreshConnectTimeOverTime(false);
    } else if ( id == "choicesResponseTimePercentilesOverTime"){
        choiceContainer = $("#choicesResponseTimePercentilesOverTime");
        refreshResponseTimePercentilesOverTime(false);
    } else if ( id == "choicesResponseTimePercentiles"){
        choiceContainer = $("#choicesResponseTimePercentiles");
        refreshResponseTimePercentiles();
    } else if(id == "choicesActiveThreadsOverTime"){
        choiceContainer = $("#choicesActiveThreadsOverTime");
        refreshActiveThreadsOverTime(false);
    } else if ( id == "choicesTimeVsThreads"){
        choiceContainer = $("#choicesTimeVsThreads");
        refreshTimeVsThreads();
    } else if ( id == "choicesSyntheticResponseTimeDistribution"){
        choiceContainer = $("#choicesSyntheticResponseTimeDistribution");
        refreshSyntheticResponseTimeDistribution();
    } else if ( id == "choicesResponseTimeDistribution"){
        choiceContainer = $("#choicesResponseTimeDistribution");
        refreshResponseTimeDistribution();
    } else if ( id == "choicesHitsPerSecond"){
        choiceContainer = $("#choicesHitsPerSecond");
        refreshHitsPerSecond(false);
    } else if(id == "choicesCodesPerSecond"){
        choiceContainer = $("#choicesCodesPerSecond");
        refreshCodesPerSecond(false);
    } else if ( id == "choicesTransactionsPerSecond"){
        choiceContainer = $("#choicesTransactionsPerSecond");
        refreshTransactionsPerSecond(false);
    } else if ( id == "choicesTotalTPS"){
        choiceContainer = $("#choicesTotalTPS");
        refreshTotalTPS(false);
    } else if ( id == "choicesResponseTimeVsRequest"){
        choiceContainer = $("#choicesResponseTimeVsRequest");
        refreshResponseTimeVsRequest();
    } else if ( id == "choicesLatencyVsRequest"){
        choiceContainer = $("#choicesLatencyVsRequest");
        refreshLatenciesVsRequest();
    }
    var color = checked ? "black" : "#818181";
    if(choiceContainer != null) {
        choiceContainer.find("label").each(function(){
            this.style.color = color;
        });
    }
}

